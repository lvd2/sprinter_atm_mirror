DEPTH = 256;    % Memory depth and width are required   %
WIDTH = 8;              % Enter a decimal number        %

ADDRESS_RADIX = DEC;    % Address and value radixes are optional        %
DATA_RADIX = BIN;               % Enter BIN, DEC, HEX, or OCT; unless   %
                                                % otherwise specified, radixes = HEX    %

-- Specify values for addresses, which can be single address or range

CONTENT
BEGIN
[0..255] :                      00000000;
00      :                       00000000 00000000;
01      :                       00000000 00000000;
02      :                       00000000 00000000;
03      :                       00000000 11111111;
04      :                       00000000 00000000;
05      :                       00000000 00000000;
06      :                       00000000 00000000;
07      :                       00000000 00000000;

08      :                       11111111 11111111;
09      :                       11111111 11111111;
10      :                       11111111 11111111;
11      :                       11111111 11111111;
12      :                       11111111 11111111;
13      :                       11111111 11111111;
14      :                       11111111 00000001;
15      :                       00000000 11111111;
        
30      :                       00000000;
31      :                       11111111;

48      :                       00000000;
49      :                       00000010;
50      :                       00000011;
51      :                       00000100;
52      :                       00000110;
53      :                       00001000;
54      :                       00001011;
55      :                       00010000;
56      :                       00010110;
57      :                       00100000;
58      :                       00101101;
59      :                       01000000;
60      :                       01011010;
61      :                       10000000;
62      :                       10110100;
63      :                       11111111;

        

%
        000 - set CX, load & sub 1
        001     - load
        010     - save, if NZ,reset CX
        011     - bit_out
        100     - load & sub 1
        101     - load & sub C
        110     - if CX, save
        111     - read states /RESET, AY_F_RES
%

        
128     :                       00010000;  -- set C,CX load reg10 & sub C
129     :                       01010000;  -- save reg10 & reset CX if NZ
130     :                       10110001;  -- load reg11 & sub C
131     :                       01010001;  -- save reg11 & reset CX if NZ
132     :                       00100000;  -- set C load reg00 & sub C
133     :                       11010000;  -- save reg10 if CX
134     :                       00100001;  -- load reg01 & sub C
135     :                       11010001;  -- save reg11 if CX

136     :                       00101000;  -- load reg08
137     :                       01100001;  -- set AY_OUT1


138     :                       00010010;  -- set C,CX load reg12 & sub C
139     :                       01010010; -- save reg12 & reset CX if NZ
140     :                       10110011;  -- load reg13 & sub C
141     :                       01010011;  -- save reg13 & reset CX if NZ

142     :                       00100010;  -- set C load reg02 & sub C
143     :                       11010010;  -- save reg12 if CX
144     :                       00100011;  -- load reg03 & reset CX if NZ
145     :                       11010011;  -- save reg13 if CX

146     :                       00101001;  -- load reg09
147     :                       01100010;  -- set AY_OUT2


148     :                       00010100;  -- set C,CX load reg14 & sub C
149     :                       01010100;  -- save reg14 & reset CX if NZ
150     :                       10110101;  -- load reg15 & sub C
151     :                       01010101;  -- save reg15 & reset CX if NZ

152     :                       00100100;  -- set C load reg04 & sub C
153     :                       11010100;  -- save reg14 if CX
154     :                       00100101;  -- load reg05 & reset CX if NZ
155     :                       11010101;  -- save reg15 if CX

156     :                       00101010;  -- load reg0A
157     :                       01100011;  -- set AY_OUT3


158     :                       00010111;  -- set C,CX load reg17 & dec 1
159     :                       01010111;  -- save reg17 & reset CX if NZ
160     :                       00100110;  -- load reg06 dec 1                  ***********
161     :                       11010111;  -- save reg17 if CX

162     :                       01100100;  -- set AY_SH
163     :                       00000000;  -- NOP

164     :                       00011000;  -- set C,CX load reg18 & sub C
165     :                       01011000;  -- save reg18 & reset CX if NZ
166     :                       10111001;  -- load reg19 & sub C
167     :                       01011001;  -- save reg19 & reset CX if NZ

168     :                       00101011;  -- load reg0B & sub 1
169     :                       11011000;  -- save reg18 if CX
170     :                       00101100;  -- load reg0C & sub C
171     :                       11011001;  -- save reg19 if CX

172     :                       01100101;  -- set FORM_CLK

173     :                       11100000;  -- set CX = AY_F_RES

--                      00101011;  -- load reg0B & sub 1
--                      11011000;  -- save reg18 if CX
--                      00101100;  -- load reg0C & sub C
--                      11011001;  -- save reg19 if CX

174     :                       11100001;  -- set CX = /RESET

175     :                       00111111;  -- load reg1F - FF           ***********
176     :                       11000111;  -- save reg07 if CX
177     :                       00111110;  -- load reg1E - 00           ***********

178     :                       11001101;  -- save reg0D if CX
179     :                       11001000;  -- save reg08 if CX
180     :                       11001001;  -- save reg09 if CX
181     :                       11001010;  -- save reg0a if CX

182     :                       00100111;  -- load reg07                                ***********
183     :                       01100110;  -- set keys_bits

184     :                       00101101;  -- load reg0D             ***********
185     :                       01100111;  -- set keys_bits                     SET-FORM-bits

--                      01100000;  -- set AY_OUT_ALL

END ;
