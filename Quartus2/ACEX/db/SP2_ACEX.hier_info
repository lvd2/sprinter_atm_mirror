|SP2_ACEX
TG42 => kbd:KEYS.clk42
TG42 => dcp:DECODE.clk42
TG42 => acceler:ACC.clk42
TG42 => video2:SVIDEO.clk42
TG42 => lpm_ram_dp:CBL.wrclock
TG42 => lpm_ram_dp:CBL.rdclock
TG42 => ay:AY3.clk42
TG42 => KD[7].CLK
TG42 => KD[6].CLK
TG42 => KD[5].CLK
TG42 => KD[4].CLK
TG42 => KD[3].CLK
TG42 => KD[2].CLK
TG42 => KD[1].CLK
TG42 => KD[0].CLK
TG42 => CBL_R[15].CLK
TG42 => CBL_R[14].CLK
TG42 => CBL_R[13].CLK
TG42 => CBL_R[12].CLK
TG42 => CBL_R[11].CLK
TG42 => CBL_R[10].CLK
TG42 => CBL_R[9].CLK
TG42 => CBL_R[8].CLK
TG42 => CBL_R[7].CLK
TG42 => CBL_R[6].CLK
TG42 => CBL_R[5].CLK
TG42 => CBL_R[4].CLK
TG42 => CBL_R[3].CLK
TG42 => CBL_R[2].CLK
TG42 => CBL_R[1].CLK
TG42 => CBL_R[0].CLK
TG42 => AUDIO_R[15].CLK
TG42 => AUDIO_R[14].CLK
TG42 => AUDIO_R[13].CLK
TG42 => AUDIO_R[12].CLK
TG42 => AUDIO_R[11].CLK
TG42 => AUDIO_R[10].CLK
TG42 => AUDIO_R[9].CLK
TG42 => AUDIO_R[8].CLK
TG42 => AUDIO_R[7].CLK
TG42 => AUDIO_R[6].CLK
TG42 => AUDIO_R[5].CLK
TG42 => AUDIO_R[4].CLK
TG42 => AUDIO_R[3].CLK
TG42 => AUDIO_R[2].CLK
TG42 => AUDIO_R[1].CLK
TG42 => AUDIO_R[0].CLK
TG42 => WT_R[2].CLK
TG42 => WT_R[1].CLK
TG42 => WT_R[0].CLK
TG42 => AY_FULL[10].CLK
TG42 => AY_FULL[9].CLK
TG42 => AY_FULL[8].CLK
TG42 => AY_FULL[7].CLK
TG42 => AY_FULL[6].CLK
TG42 => AY_FULL[5].CLK
TG42 => AY_FULL[4].CLK
TG42 => AY_FULL[3].CLK
TG42 => AY_FULL[2].CLK
TG42 => AY_FULL[1].CLK
TG42 => AY_FULL[0].CLK
TG42 => $00008.CLK
TG42 => /IOWR.CLK
TG42 => /IORD.CLK
TG42 => $00011.CLK
TG42 => $00012.CLK
TG42 => KEY_WRITE.CLK
TG42 => $00015.CLK
TG42 => KEY_IO.CLK
TG42 => $00079.CLK
TG42 => SYS_ENA2.CLK
TG42 => $00081.CLK
TG42 => $00085.CLK
TG42 => $00090.CLK
TG42 => $00092.CLK
TG42 => $00098.CLK
TG42 => $00106.CLK
TG42 => $00107.CLK
TG42 => $00109.CLK
TG42 => $00114.CLK
TG42 => $00117.CLK
TG42 => SINC_1M.CLK
TG42 => SINC_2M.CLK
TG42 => copy_sinc_h.CLK
TG42 => $00133.CLK
TG42 => copy_sinc_v.CLK
TG42 => $00135.CLK
TG42 => start_up.CLK
TG42 => $00137.CLK
TG42 => $00138.CLK
TG42 => $00139.CLK
TG42 => $00150.CLK
TG42 => $00155.CLK
TG42 => $00161.CLK
TG42 => $00164.CLK
TG42 => $00165.CLK
TG42 => $00166.CLK
TG42 => $00169.CLK
TG42 => $00171.CLK
TG42 => $00172.CLK
TG42 => $00173.CLK
TG42 => $00176.CLK
TG42 => $00177.CLK
TG42 => $00178.CLK
TG42 => $00179.CLK
TG42 => $00180.CLK
TG42 => $00181.CLK
TG42 => $00182.CLK
TG42 => $00183.CLK
CLKZ1 <= dcp:DECODE.clk_z80
/wait <= $00152
/reset <= $00007
/m1 => dcp:DECODE./m1
/m1 => acceler:ACC./m1
/rf => dcp:DECODE./rf
/rf => acceler:ACC./rf
/io => dcp:DECODE./io
/io => acceler:ACC./io
/wr => dcp:DECODE./wr
/wr => acceler:ACC./wr
/wr => $00017.DATAIN
/rd => dcp:DECODE./rd
/rd => acceler:ACC./rd
/HALT => ~NO_FANOUT~
/mr => dcp:DECODE./mr
/mr => acceler:ACC./mr
a[0] => acceler:ACC.ai[0]
a[1] => acceler:ACC.ai[1]
a[2] => acceler:ACC.ai[2]
a[3] => acceler:ACC.ai[3]
a[4] => acceler:ACC.ai[4]
a[5] => acceler:ACC.ai[5]
a[6] => acceler:ACC.ai[6]
a[7] => acceler:ACC.ai[7]
a[7] => CASH_ON.DATAIN
a[8] => kbd:KEYS.a[8]
a[8] => acceler:ACC.ai[8]
a[9] => kbd:KEYS.a[9]
a[9] => acceler:ACC.ai[9]
a[10] => kbd:KEYS.a[10]
a[10] => acceler:ACC.ai[10]
a[11] => kbd:KEYS.a[11]
a[11] => acceler:ACC.ai[11]
a[12] => kbd:KEYS.a[12]
a[12] => acceler:ACC.ai[12]
a[13] => kbd:KEYS.a[13]
a[13] => acceler:ACC.ai[13]
a[14] => kbd:KEYS.a[14]
a[14] => acceler:ACC.ai[14]
a[15] => kbd:KEYS.a[15]
a[15] => acceler:ACC.ai[15]
d[0] <= $00021
d[1] <= $00028
d[2] <= $00035
d[3] <= $00042
d[4] <= $00049
d[5] <= $00056
d[6] <= $00063
d[7] <= $00070
cs_rom <= CS_ROMT.DB_MAX_OUTPUT_PORT_TYPE
ra[14] <= ISA_A[0].DB_MAX_OUTPUT_PORT_TYPE
ra[15] <= ISA_A[1].DB_MAX_OUTPUT_PORT_TYPE
ra[16] <= ISA_A[2].DB_MAX_OUTPUT_PORT_TYPE
ra[17] <= ISA_A[3].DB_MAX_OUTPUT_PORT_TYPE
v_cs[0] <= video2:SVIDEO.v_cs[0]
v_cs[1] <= video2:SVIDEO.v_cs[1]
VA[0] <= video2:SVIDEO.vao[0]
VA[1] <= video2:SVIDEO.vao[1]
VA[2] <= video2:SVIDEO.vao[2]
VA[3] <= video2:SVIDEO.vao[3]
VA[4] <= video2:SVIDEO.vao[4]
VA[5] <= video2:SVIDEO.vao[5]
VA[6] <= video2:SVIDEO.vao[6]
VA[7] <= video2:SVIDEO.vao[7]
VA[8] <= video2:SVIDEO.vao[8]
VA[9] <= video2:SVIDEO.vao[9]
VA[10] <= video2:SVIDEO.vao[10]
VA[11] <= video2:SVIDEO.vao[11]
VA[12] <= video2:SVIDEO.vao[12]
VA[13] <= video2:SVIDEO.vao[13]
VA[14] <= video2:SVIDEO.vao[14]
VA[15] <= video2:SVIDEO.vao[15]
v_wr[0] <= video2:SVIDEO.v_wr[0]
v_wr[1] <= video2:SVIDEO.v_wr[1]
v_wr[2] <= video2:SVIDEO.v_wr[2]
v_wr[3] <= video2:SVIDEO.v_wr[3]
VD3[0] <= $00022
VD3[1] <= $00029
VD3[2] <= $00036
VD3[3] <= $00043
VD3[4] <= $00050
VD3[5] <= $00057
VD3[6] <= $00064
VD3[7] <= $00071
VD2[0] <= $00023
VD2[1] <= $00030
VD2[2] <= $00037
VD2[3] <= $00044
VD2[4] <= $00051
VD2[5] <= $00058
VD2[6] <= $00065
VD2[7] <= $00072
VD1[0] <= $00024
VD1[1] <= $00031
VD1[2] <= $00038
VD1[3] <= $00045
VD1[4] <= $00052
VD1[5] <= $00059
VD1[6] <= $00066
VD1[7] <= $00073
VD0[0] <= $00025
VD0[1] <= $00032
VD0[2] <= $00039
VD0[3] <= $00046
VD0[4] <= $00053
VD0[5] <= $00060
VD0[6] <= $00067
VD0[7] <= $00074
WR_COL <= video2:SVIDEO.wr_pix
DAC_DATA <= $00162.DB_MAX_OUTPUT_PORT_TYPE
DAC_WS <= $00164.DB_MAX_OUTPUT_PORT_TYPE
DAC_BCK <= $00165.DB_MAX_OUTPUT_PORT_TYPE
md[0] <= $00026
md[1] <= $00033
md[2] <= $00040
md[3] <= $00047
md[4] <= $00054
md[5] <= $00061
md[6] <= $00068
md[7] <= $00075
md[8] <= $00027
md[9] <= $00034
md[10] <= $00041
md[11] <= $00048
md[12] <= $00055
md[13] <= $00062
md[14] <= $00069
md[15] <= $00076
ma[0] <= dcp:DECODE.ma[0]
ma[1] <= dcp:DECODE.ma[1]
ma[2] <= dcp:DECODE.ma[2]
ma[3] <= dcp:DECODE.ma[3]
ma[4] <= dcp:DECODE.ma[4]
ma[5] <= dcp:DECODE.ma[5]
ma[6] <= dcp:DECODE.ma[6]
ma[7] <= dcp:DECODE.ma[7]
ma[8] <= dcp:DECODE.ma[8]
ma[9] <= dcp:DECODE.ma[9]
ma[10] <= dcp:DECODE.ma[10]
ma[11] <= dcp:DECODE.ma[11]
ma[12] <= NMI_X.DB_MAX_OUTPUT_PORT_TYPE
ma[13] <= INT_X.DB_MAX_OUTPUT_PORT_TYPE
RAS_[0] <= RASX_[0].DB_MAX_OUTPUT_PORT_TYPE
RAS_[1] <= RASX_[1].DB_MAX_OUTPUT_PORT_TYPE
CAS_[0] <= CASX_[0].DB_MAX_OUTPUT_PORT_TYPE
CAS_[1] <= CASX_[1].DB_MAX_OUTPUT_PORT_TYPE
CAS_[2] <= CASX_[2].DB_MAX_OUTPUT_PORT_TYPE
CAS_[3] <= CASX_[3].DB_MAX_OUTPUT_PORT_TYPE
/WE <= $00150.DB_MAX_OUTPUT_PORT_TYPE
XACS <= XACS~reg.DB_MAX_OUTPUT_PORT_TYPE
XA[0] <= $00118
XA[1] <= $00119
XA[2] <= $00120
XA[3] <= $00121
SXA <= $00117.DB_MAX_OUTPUT_PORT_TYPE
RDXA <= $00114.DB_MAX_OUTPUT_PORT_TYPE
wr_awg <= dcp:DECODE.wr_awg
wr_dwg <= dcp:DECODE.wr_dwg


|SP2_ACEX|mouse:MS
MOUSE_D => MOUSE_IMP.IN0
MOUSE_D => $00000.DATAIN
CLK => SUM_X[9].CLK
CLK => SUM_X[8].CLK
CLK => SUM_X[7].CLK
CLK => SUM_X[6].CLK
CLK => SUM_X[5].CLK
CLK => SUM_X[4].CLK
CLK => SUM_X[3].CLK
CLK => SUM_X[2].CLK
CLK => SUM_X[1].CLK
CLK => SUM_X[0].CLK
CLK => SUM_Y[9].CLK
CLK => SUM_Y[8].CLK
CLK => SUM_Y[7].CLK
CLK => SUM_Y[6].CLK
CLK => SUM_Y[5].CLK
CLK => SUM_Y[4].CLK
CLK => SUM_Y[3].CLK
CLK => SUM_Y[2].CLK
CLK => SUM_Y[1].CLK
CLK => SUM_Y[0].CLK
CLK => CT[3].CLK
CLK => CT[2].CLK
CLK => CT[1].CLK
CLK => CT[0].CLK
CLK => RG[9].CLK
CLK => RG[8].CLK
CLK => RG[7].CLK
CLK => RG[6].CLK
CLK => RG[5].CLK
CLK => RG[4].CLK
CLK => RG[3].CLK
CLK => RG[2].CLK
CLK => RG[1].CLK
CLK => RG[0].CLK
CLK => STATE[1].CLK
CLK => STATE[0].CLK
CLK => RGK[5].CLK
CLK => RGK[4].CLK
CLK => RGK[3].CLK
CLK => RGK[2].CLK
CLK => RGK[1].CLK
CLK => RGK[0].CLK
CLK => $00000.CLK
CLK => $00003.CLK
OUT_X[0] <= SUM_X[0].DB_MAX_OUTPUT_PORT_TYPE
OUT_X[1] <= SUM_X[1].DB_MAX_OUTPUT_PORT_TYPE
OUT_X[2] <= SUM_X[2].DB_MAX_OUTPUT_PORT_TYPE
OUT_X[3] <= SUM_X[3].DB_MAX_OUTPUT_PORT_TYPE
OUT_X[4] <= SUM_X[4].DB_MAX_OUTPUT_PORT_TYPE
OUT_X[5] <= SUM_X[5].DB_MAX_OUTPUT_PORT_TYPE
OUT_X[6] <= SUM_X[6].DB_MAX_OUTPUT_PORT_TYPE
OUT_X[7] <= SUM_X[7].DB_MAX_OUTPUT_PORT_TYPE
OUT_X[8] <= SUM_X[8].DB_MAX_OUTPUT_PORT_TYPE
OUT_X[9] <= SUM_X[9].DB_MAX_OUTPUT_PORT_TYPE
OUT_Y[0] <= SUM_Y[0].DB_MAX_OUTPUT_PORT_TYPE
OUT_Y[1] <= SUM_Y[1].DB_MAX_OUTPUT_PORT_TYPE
OUT_Y[2] <= SUM_Y[2].DB_MAX_OUTPUT_PORT_TYPE
OUT_Y[3] <= SUM_Y[3].DB_MAX_OUTPUT_PORT_TYPE
OUT_Y[4] <= SUM_Y[4].DB_MAX_OUTPUT_PORT_TYPE
OUT_Y[5] <= SUM_Y[5].DB_MAX_OUTPUT_PORT_TYPE
OUT_Y[6] <= SUM_Y[6].DB_MAX_OUTPUT_PORT_TYPE
OUT_Y[7] <= SUM_Y[7].DB_MAX_OUTPUT_PORT_TYPE
OUT_Y[8] <= SUM_Y[8].DB_MAX_OUTPUT_PORT_TYPE
OUT_Y[9] <= SUM_Y[9].DB_MAX_OUTPUT_PORT_TYPE
OUT_K[0] <= RGK[4].DB_MAX_OUTPUT_PORT_TYPE
OUT_K[1] <= RGK[5].DB_MAX_OUTPUT_PORT_TYPE
INT <= $00003.DB_MAX_OUTPUT_PORT_TYPE


|SP2_ACEX|kbd:KEYS
CLK42 => lpm_ram_dq:$00021.inclock
CLK42 => KB_MA[2].CLK
CLK42 => KB_MA[1].CLK
CLK42 => KB_MA[0].CLK
CLK42 => kbd[5].CLK
CLK42 => kbd[4].CLK
CLK42 => kbd[3].CLK
CLK42 => kbd[2].CLK
CLK42 => kbd[1].CLK
CLK42 => kbd[0].CLK
CLK42 => $00000.CLK
CLK42 => $00001.CLK
CLK42 => $00002.CLK
CLK42 => $00003.CLK
CLK42 => $00004.CLK
CLK42 => $00012.CLK
CLK42 => K_CLK.CLK
CLK42 => $00014.CLK
CLK42 => $00016.CLK
CLK42 => $00017.CLK
CLK42 => KB_MXA.CLK
CLK42 => $00019.CLK
CLK42 => $00020.CLK
CLK_K => KB_CT[2].CLK
CLK_K => KB_CT[1].CLK
CLK_K => KB_CT[0].CLK
KBD_CC => $00001.DATAIN
KBD_DD => KB_D[10].DATAIN
/RF => K_CLK.DATAIN
/IO => $00017.DATAIN
/IO => $00019.DATAIN
/IOM => ~NO_FANOUT~
/M1 => ~NO_FANOUT~
KBO[0] <= kbd[0].DB_MAX_OUTPUT_PORT_TYPE
KBO[1] <= kbd[1].DB_MAX_OUTPUT_PORT_TYPE
KBO[2] <= kbd[2].DB_MAX_OUTPUT_PORT_TYPE
KBO[3] <= kbd[3].DB_MAX_OUTPUT_PORT_TYPE
KBO[4] <= kbd[4].DB_MAX_OUTPUT_PORT_TYPE
KBO[5] <= kbd[5].DB_MAX_OUTPUT_PORT_TYPE
KBO[6] <= <VCC>
KBO[7] <= <VCC>
KB_RESET <= KB_RESET~reg.DB_MAX_OUTPUT_PORT_TYPE
KB_F12 <= $00010.DB_MAX_OUTPUT_PORT_TYPE
KB_CTRL <= KB_CTRL~reg.DB_MAX_OUTPUT_PORT_TYPE
KB_ALT <= KB_ALT~reg.DB_MAX_OUTPUT_PORT_TYPE
KB_SH <= KB_SH~reg.DB_MAX_OUTPUT_PORT_TYPE
INT_ENA => $00000.PRESET
INT <= $00000.DB_MAX_OUTPUT_PORT_TYPE


|SP2_ACEX|kbd:KEYS|lpm_ram_dq:$00021
data[0] => altram:sram.data[0]
data[1] => altram:sram.data[1]
data[2] => altram:sram.data[2]
data[3] => altram:sram.data[3]
data[4] => altram:sram.data[4]
data[5] => altram:sram.data[5]
data[6] => altram:sram.data[6]
data[7] => altram:sram.data[7]
address[0] => altram:sram.address[0]
address[1] => altram:sram.address[1]
address[2] => altram:sram.address[2]
address[3] => altram:sram.address[3]
address[4] => altram:sram.address[4]
address[5] => altram:sram.address[5]
address[6] => altram:sram.address[6]
address[7] => altram:sram.address[7]
inclock => altram:sram.clocki
outclock => ~NO_FANOUT~
we => altram:sram.we
q[0] <= altram:sram.q[0]
q[1] <= altram:sram.q[1]
q[2] <= altram:sram.q[2]
q[3] <= altram:sram.q[3]
q[4] <= altram:sram.q[4]
q[5] <= altram:sram.q[5]
q[6] <= altram:sram.q[6]
q[7] <= altram:sram.q[7]


|SP2_ACEX|kbd:KEYS|lpm_ram_dq:$00021|altram:sram
we => segment[0][7].WE
we => segment[0][6].WE
we => segment[0][5].WE
we => segment[0][4].WE
we => segment[0][3].WE
we => segment[0][2].WE
we => segment[0][1].WE
we => segment[0][0].WE
data[0] => segment[0][0].DATAIN
data[1] => segment[0][1].DATAIN
data[2] => segment[0][2].DATAIN
data[3] => segment[0][3].DATAIN
data[4] => segment[0][4].DATAIN
data[5] => segment[0][5].DATAIN
data[6] => segment[0][6].DATAIN
data[7] => segment[0][7].DATAIN
address[0] => segment[0][7].WADDR
address[0] => segment[0][7].RADDR
address[0] => segment[0][6].WADDR
address[0] => segment[0][6].RADDR
address[0] => segment[0][5].WADDR
address[0] => segment[0][5].RADDR
address[0] => segment[0][4].WADDR
address[0] => segment[0][4].RADDR
address[0] => segment[0][3].WADDR
address[0] => segment[0][3].RADDR
address[0] => segment[0][2].WADDR
address[0] => segment[0][2].RADDR
address[0] => segment[0][1].WADDR
address[0] => segment[0][1].RADDR
address[0] => segment[0][0].WADDR
address[0] => segment[0][0].RADDR
address[1] => segment[0][7].WADDR1
address[1] => segment[0][7].RADDR1
address[1] => segment[0][6].WADDR1
address[1] => segment[0][6].RADDR1
address[1] => segment[0][5].WADDR1
address[1] => segment[0][5].RADDR1
address[1] => segment[0][4].WADDR1
address[1] => segment[0][4].RADDR1
address[1] => segment[0][3].WADDR1
address[1] => segment[0][3].RADDR1
address[1] => segment[0][2].WADDR1
address[1] => segment[0][2].RADDR1
address[1] => segment[0][1].WADDR1
address[1] => segment[0][1].RADDR1
address[1] => segment[0][0].WADDR1
address[1] => segment[0][0].RADDR1
address[2] => segment[0][7].WADDR2
address[2] => segment[0][7].RADDR2
address[2] => segment[0][6].WADDR2
address[2] => segment[0][6].RADDR2
address[2] => segment[0][5].WADDR2
address[2] => segment[0][5].RADDR2
address[2] => segment[0][4].WADDR2
address[2] => segment[0][4].RADDR2
address[2] => segment[0][3].WADDR2
address[2] => segment[0][3].RADDR2
address[2] => segment[0][2].WADDR2
address[2] => segment[0][2].RADDR2
address[2] => segment[0][1].WADDR2
address[2] => segment[0][1].RADDR2
address[2] => segment[0][0].WADDR2
address[2] => segment[0][0].RADDR2
address[3] => segment[0][7].WADDR3
address[3] => segment[0][7].RADDR3
address[3] => segment[0][6].WADDR3
address[3] => segment[0][6].RADDR3
address[3] => segment[0][5].WADDR3
address[3] => segment[0][5].RADDR3
address[3] => segment[0][4].WADDR3
address[3] => segment[0][4].RADDR3
address[3] => segment[0][3].WADDR3
address[3] => segment[0][3].RADDR3
address[3] => segment[0][2].WADDR3
address[3] => segment[0][2].RADDR3
address[3] => segment[0][1].WADDR3
address[3] => segment[0][1].RADDR3
address[3] => segment[0][0].WADDR3
address[3] => segment[0][0].RADDR3
address[4] => segment[0][7].WADDR4
address[4] => segment[0][7].RADDR4
address[4] => segment[0][6].WADDR4
address[4] => segment[0][6].RADDR4
address[4] => segment[0][5].WADDR4
address[4] => segment[0][5].RADDR4
address[4] => segment[0][4].WADDR4
address[4] => segment[0][4].RADDR4
address[4] => segment[0][3].WADDR4
address[4] => segment[0][3].RADDR4
address[4] => segment[0][2].WADDR4
address[4] => segment[0][2].RADDR4
address[4] => segment[0][1].WADDR4
address[4] => segment[0][1].RADDR4
address[4] => segment[0][0].WADDR4
address[4] => segment[0][0].RADDR4
address[5] => segment[0][7].WADDR5
address[5] => segment[0][7].RADDR5
address[5] => segment[0][6].WADDR5
address[5] => segment[0][6].RADDR5
address[5] => segment[0][5].WADDR5
address[5] => segment[0][5].RADDR5
address[5] => segment[0][4].WADDR5
address[5] => segment[0][4].RADDR5
address[5] => segment[0][3].WADDR5
address[5] => segment[0][3].RADDR5
address[5] => segment[0][2].WADDR5
address[5] => segment[0][2].RADDR5
address[5] => segment[0][1].WADDR5
address[5] => segment[0][1].RADDR5
address[5] => segment[0][0].WADDR5
address[5] => segment[0][0].RADDR5
address[6] => segment[0][7].WADDR6
address[6] => segment[0][7].RADDR6
address[6] => segment[0][6].WADDR6
address[6] => segment[0][6].RADDR6
address[6] => segment[0][5].WADDR6
address[6] => segment[0][5].RADDR6
address[6] => segment[0][4].WADDR6
address[6] => segment[0][4].RADDR6
address[6] => segment[0][3].WADDR6
address[6] => segment[0][3].RADDR6
address[6] => segment[0][2].WADDR6
address[6] => segment[0][2].RADDR6
address[6] => segment[0][1].WADDR6
address[6] => segment[0][1].RADDR6
address[6] => segment[0][0].WADDR6
address[6] => segment[0][0].RADDR6
address[7] => segment[0][7].WADDR7
address[7] => segment[0][7].RADDR7
address[7] => segment[0][6].WADDR7
address[7] => segment[0][6].RADDR7
address[7] => segment[0][5].WADDR7
address[7] => segment[0][5].RADDR7
address[7] => segment[0][4].WADDR7
address[7] => segment[0][4].RADDR7
address[7] => segment[0][3].WADDR7
address[7] => segment[0][3].RADDR7
address[7] => segment[0][2].WADDR7
address[7] => segment[0][2].RADDR7
address[7] => segment[0][1].WADDR7
address[7] => segment[0][1].RADDR7
address[7] => segment[0][0].WADDR7
address[7] => segment[0][0].RADDR7
clocki => segment[0][7].CLK0
clocki => segment[0][6].CLK0
clocki => segment[0][5].CLK0
clocki => segment[0][4].CLK0
clocki => segment[0][3].CLK0
clocki => segment[0][2].CLK0
clocki => segment[0][1].CLK0
clocki => segment[0][0].CLK0
clocko => ~NO_FANOUT~
be => ~NO_FANOUT~
q[0] <= segment[0][0].DATAOUT
q[1] <= segment[0][1].DATAOUT
q[2] <= segment[0][2].DATAOUT
q[3] <= segment[0][3].DATAOUT
q[4] <= segment[0][4].DATAOUT
q[5] <= segment[0][5].DATAOUT
q[6] <= segment[0][6].DATAOUT
q[7] <= segment[0][7].DATAOUT


|SP2_ACEX|video2:SVIDEO
CLK42 => lpm_ram_dp:MS_DAT.wrclock
CLK42 => lpm_ram_dp:MS_DAT.rdclock
CLK42 => PIC_CLK.IN0
CLK42 => CT[5]~reg.CLK
CLK42 => CT[4]~reg.CLK
CLK42 => CT[3]~reg.CLK
CLK42 => CT[2]~reg.CLK
CLK42 => CT[1]~reg.CLK
CLK42 => CT[0]~reg.CLK
CLK42 => CTH[5]~reg.CLK
CLK42 => CTH[4]~reg.CLK
CLK42 => CTH[3]~reg.CLK
CLK42 => CTH[2]~reg.CLK
CLK42 => CTH[1]~reg.CLK
CLK42 => CTH[0]~reg.CLK
CLK42 => CTV[8]~reg.CLK
CLK42 => CTV[7]~reg.CLK
CLK42 => CTV[6]~reg.CLK
CLK42 => CTV[5]~reg.CLK
CLK42 => CTV[4]~reg.CLK
CLK42 => CTV[3]~reg.CLK
CLK42 => CTV[2]~reg.CLK
CLK42 => CTV[1]~reg.CLK
CLK42 => CTV[0]~reg.CLK
CLK42 => VXA[19].CLK
CLK42 => VXA[18].CLK
CLK42 => VXA[17].CLK
CLK42 => VXA[16].CLK
CLK42 => VXA[15].CLK
CLK42 => VXA[14].CLK
CLK42 => VXA[13].CLK
CLK42 => VXA[12].CLK
CLK42 => VXA[11].CLK
CLK42 => VXA[10].CLK
CLK42 => VXA[9].CLK
CLK42 => VXA[8].CLK
CLK42 => VXA[7].CLK
CLK42 => VXA[6].CLK
CLK42 => VXA[5].CLK
CLK42 => VXA[4].CLK
CLK42 => VXA[3].CLK
CLK42 => VXA[2].CLK
CLK42 => VXA[1].CLK
CLK42 => VXA[0].CLK
CLK42 => VXD0[7].CLK
CLK42 => VXD0[6].CLK
CLK42 => VXD0[5].CLK
CLK42 => VXD0[4].CLK
CLK42 => VXD0[3].CLK
CLK42 => VXD0[2].CLK
CLK42 => VXD0[1].CLK
CLK42 => VXD0[0].CLK
CLK42 => VXD1[7].CLK
CLK42 => VXD1[6].CLK
CLK42 => VXD1[5].CLK
CLK42 => VXD1[4].CLK
CLK42 => VXD1[3].CLK
CLK42 => VXD1[2].CLK
CLK42 => VXD1[1].CLK
CLK42 => VXD1[0].CLK
CLK42 => VXD2[7].CLK
CLK42 => VXD2[6].CLK
CLK42 => VXD2[5].CLK
CLK42 => VXD2[4].CLK
CLK42 => VXD2[3].CLK
CLK42 => VXD2[2].CLK
CLK42 => VXD2[1].CLK
CLK42 => VXD2[0].CLK
CLK42 => VXD3[7].CLK
CLK42 => VXD3[6].CLK
CLK42 => VXD3[5].CLK
CLK42 => VXD3[4].CLK
CLK42 => VXD3[3].CLK
CLK42 => VXD3[2].CLK
CLK42 => VXD3[1].CLK
CLK42 => VXD3[0].CLK
CLK42 => VLA[17].CLK
CLK42 => VLA[16].CLK
CLK42 => VLA[15].CLK
CLK42 => VLA[14].CLK
CLK42 => VLA[13].CLK
CLK42 => VLA[12].CLK
CLK42 => VLA[11].CLK
CLK42 => VLA[10].CLK
CLK42 => VLA[9].CLK
CLK42 => VLA[8].CLK
CLK42 => VLA[7].CLK
CLK42 => VLA[6].CLK
CLK42 => VLA[5].CLK
CLK42 => VLA[4].CLK
CLK42 => VLA[3].CLK
CLK42 => VLA[2].CLK
CLK42 => VLA[1].CLK
CLK42 => VLA[0].CLK
CLK42 => SVA[17].CLK
CLK42 => SVA[16].CLK
CLK42 => SVA[15].CLK
CLK42 => SVA[14].CLK
CLK42 => SVA[13].CLK
CLK42 => SVA[12].CLK
CLK42 => SVA[11].CLK
CLK42 => SVA[10].CLK
CLK42 => SVA[9].CLK
CLK42 => SVA[8].CLK
CLK42 => SVA[7].CLK
CLK42 => SVA[6].CLK
CLK42 => SVA[5].CLK
CLK42 => SVA[4].CLK
CLK42 => SVA[3].CLK
CLK42 => SVA[2].CLK
CLK42 => SVA[1].CLK
CLK42 => SVA[0].CLK
CLK42 => V_CST[1].CLK
CLK42 => V_CST[0].CLK
CLK42 => VCM[2].CLK
CLK42 => VCM[1].CLK
CLK42 => VCM[0].CLK
CLK42 => TSN_W3.CLK
CLK42 => V_WE.CLK
CLK42 => V_WEX.CLK
CLK42 => V_WET[3].CLK
CLK42 => V_WET[2].CLK
CLK42 => V_WET[1].CLK
CLK42 => V_WET[0].CLK
CLK42 => D_PIC0[7].CLK
CLK42 => D_PIC0[6].CLK
CLK42 => D_PIC0[5].CLK
CLK42 => D_PIC0[4].CLK
CLK42 => D_PIC0[3].CLK
CLK42 => D_PIC0[2].CLK
CLK42 => D_PIC0[1].CLK
CLK42 => D_PIC0[0].CLK
CLK42 => WR_PIC.CLK
CLK42 => WR_COL.CLK
CLK42 => RBRVA[10].CLK
CLK42 => RBRVA[9].CLK
CLK42 => RBRVA[8].CLK
CLK42 => BRVA[7].CLK
CLK42 => BRVA[6].CLK
CLK42 => BRVA[5].CLK
CLK42 => BRVA[4].CLK
CLK42 => BRVA[3].CLK
CLK42 => BRVA[2].CLK
CLK42 => BRVA[1].CLK
CLK42 => BRVA[0].CLK
CLK42 => DCOL[7].CLK
CLK42 => DCOL[6].CLK
CLK42 => DCOL[5].CLK
CLK42 => DCOL[4].CLK
CLK42 => DCOL[3].CLK
CLK42 => DCOL[2].CLK
CLK42 => DCOL[1].CLK
CLK42 => DCOL[0].CLK
CLK42 => WR_MODE.CLK
CLK42 => DOUBLE.CLK
CLK42 => SCR_ENA.CLK
CLK42 => MS_PNT.CLK
CLK42 => $00004.CLK
CLK42 => $00005.CLK
CLK42 => $00006.CLK
CLK42 => E_WRD.CLK
CLK42 => $00009.CLK
CLK42 => MXWE.CLK
CLK42 => $00023.CLK
CLK42 => $00024.CLK
CLK42 => $00025.CLK
CLK42 => $00026.CLK
CLK42 => LWR_PIC.CLK
CLK42 => LWR_COL.CLK
CLK42 => V_EN[3].CLK
CLK42 => V_EN[2].CLK
CLK42 => V_EN[1].CLK
CLK42 => V_EN[0].CLK
CT[0] <= CT[0]~reg.DB_MAX_OUTPUT_PORT_TYPE
CT[1] <= CT[1]~reg.DB_MAX_OUTPUT_PORT_TYPE
CT[2] <= CT[2]~reg.DB_MAX_OUTPUT_PORT_TYPE
CT[3] <= CT[3]~reg.DB_MAX_OUTPUT_PORT_TYPE
CT[4] <= CT[4]~reg.DB_MAX_OUTPUT_PORT_TYPE
CT[5] <= CT[5]~reg.DB_MAX_OUTPUT_PORT_TYPE
CTH[0] <= CTH[0]~reg.DB_MAX_OUTPUT_PORT_TYPE
CTH[1] <= CTH[1]~reg.DB_MAX_OUTPUT_PORT_TYPE
CTH[2] <= CTH[2]~reg.DB_MAX_OUTPUT_PORT_TYPE
CTH[3] <= CTH[3]~reg.DB_MAX_OUTPUT_PORT_TYPE
CTH[4] <= CTH[4]~reg.DB_MAX_OUTPUT_PORT_TYPE
CTH[5] <= CTH[5]~reg.DB_MAX_OUTPUT_PORT_TYPE
CTV[0] <= CTV[0]~reg.DB_MAX_OUTPUT_PORT_TYPE
CTV[1] <= CTV[1]~reg.DB_MAX_OUTPUT_PORT_TYPE
CTV[2] <= CTV[2]~reg.DB_MAX_OUTPUT_PORT_TYPE
CTV[3] <= CTV[3]~reg.DB_MAX_OUTPUT_PORT_TYPE
CTV[4] <= CTV[4]~reg.DB_MAX_OUTPUT_PORT_TYPE
CTV[5] <= CTV[5]~reg.DB_MAX_OUTPUT_PORT_TYPE
CTV[6] <= CTV[6]~reg.DB_MAX_OUTPUT_PORT_TYPE
CTV[7] <= CTV[7]~reg.DB_MAX_OUTPUT_PORT_TYPE
CTV[8] <= CTV[8]~reg.DB_MAX_OUTPUT_PORT_TYPE
CTF[0] <= CTF[0]~reg.DB_MAX_OUTPUT_PORT_TYPE
CTF[1] <= CTF[1]~reg.DB_MAX_OUTPUT_PORT_TYPE
CTF[2] <= CTF[2]~reg.DB_MAX_OUTPUT_PORT_TYPE
CTF[3] <= CTF[3]~reg.DB_MAX_OUTPUT_PORT_TYPE
CTF[4] <= CTF[4]~reg.DB_MAX_OUTPUT_PORT_TYPE
CTF[5] <= CTF[5]~reg.DB_MAX_OUTPUT_PORT_TYPE
CTF[6] <= CTF[6]~reg.DB_MAX_OUTPUT_PORT_TYPE
BLANK <= BLANK$wire.DB_MAX_OUTPUT_PORT_TYPE
START_UP => ~NO_FANOUT~
WR => $00009.DATAIN
VAO[0] <= VLA[2].DB_MAX_OUTPUT_PORT_TYPE
VAO[1] <= VLA[3].DB_MAX_OUTPUT_PORT_TYPE
VAO[2] <= VLA[4].DB_MAX_OUTPUT_PORT_TYPE
VAO[3] <= VLA[5].DB_MAX_OUTPUT_PORT_TYPE
VAO[4] <= VLA[6].DB_MAX_OUTPUT_PORT_TYPE
VAO[5] <= VLA[7].DB_MAX_OUTPUT_PORT_TYPE
VAO[6] <= VLA[8].DB_MAX_OUTPUT_PORT_TYPE
VAO[7] <= VLA[9].DB_MAX_OUTPUT_PORT_TYPE
VAO[8] <= VLA[10].DB_MAX_OUTPUT_PORT_TYPE
VAO[9] <= VLA[11].DB_MAX_OUTPUT_PORT_TYPE
VAO[10] <= VLA[12].DB_MAX_OUTPUT_PORT_TYPE
VAO[11] <= VLA[13].DB_MAX_OUTPUT_PORT_TYPE
VAO[12] <= VLA[14].DB_MAX_OUTPUT_PORT_TYPE
VAO[13] <= VLA[15].DB_MAX_OUTPUT_PORT_TYPE
VAO[14] <= VLA[16].DB_MAX_OUTPUT_PORT_TYPE
VAO[15] <= VLA[17].DB_MAX_OUTPUT_PORT_TYPE
D[0] => ~NO_FANOUT~
D[1] => ~NO_FANOUT~
D[2] => ~NO_FANOUT~
D[3] => ~NO_FANOUT~
D[4] => ~NO_FANOUT~
D[5] => ~NO_FANOUT~
D[6] => ~NO_FANOUT~
D[7] => ~NO_FANOUT~
MDI[0] => VXD1[0].DATAIN
MDI[0] => VXD3[0].DATAIN
MDI[1] => VXD1[1].DATAIN
MDI[1] => VXD3[1].DATAIN
MDI[2] => VXD1[2].DATAIN
MDI[2] => VXD3[2].DATAIN
MDI[3] => VXD1[3].DATAIN
MDI[3] => VXD3[3].DATAIN
MDI[4] => VXD1[4].DATAIN
MDI[4] => VXD3[4].DATAIN
MDI[5] => VXD1[5].DATAIN
MDI[5] => VXD3[5].DATAIN
MDI[6] => VXD1[6].DATAIN
MDI[6] => VXD3[6].DATAIN
MDI[7] => VXD1[7].DATAIN
MDI[7] => VXD3[7].DATAIN
MDI[8] => VXD0[0].DATAIN
MDI[8] => VXD2[0].DATAIN
MDI[9] => VXD0[1].DATAIN
MDI[9] => VXD2[1].DATAIN
MDI[10] => VXD0[2].DATAIN
MDI[10] => VXD2[2].DATAIN
MDI[11] => VXD0[3].DATAIN
MDI[11] => VXD2[3].DATAIN
MDI[12] => VXD0[4].DATAIN
MDI[12] => VXD2[4].DATAIN
MDI[13] => VXD0[5].DATAIN
MDI[13] => VXD2[5].DATAIN
MDI[14] => VXD0[6].DATAIN
MDI[14] => VXD2[6].DATAIN
MDI[15] => VXD0[7].DATAIN
MDI[15] => VXD2[7].DATAIN
VDO0[0] <= VXD0[0].DB_MAX_OUTPUT_PORT_TYPE
VDO0[1] <= VXD0[1].DB_MAX_OUTPUT_PORT_TYPE
VDO0[2] <= VXD0[2].DB_MAX_OUTPUT_PORT_TYPE
VDO0[3] <= VXD0[3].DB_MAX_OUTPUT_PORT_TYPE
VDO0[4] <= VXD0[4].DB_MAX_OUTPUT_PORT_TYPE
VDO0[5] <= VXD0[5].DB_MAX_OUTPUT_PORT_TYPE
VDO0[6] <= VXD0[6].DB_MAX_OUTPUT_PORT_TYPE
VDO0[7] <= VXD0[7].DB_MAX_OUTPUT_PORT_TYPE
VDO1[0] <= VXD1[0].DB_MAX_OUTPUT_PORT_TYPE
VDO1[1] <= VXD1[1].DB_MAX_OUTPUT_PORT_TYPE
VDO1[2] <= VXD1[2].DB_MAX_OUTPUT_PORT_TYPE
VDO1[3] <= VXD1[3].DB_MAX_OUTPUT_PORT_TYPE
VDO1[4] <= VXD1[4].DB_MAX_OUTPUT_PORT_TYPE
VDO1[5] <= VXD1[5].DB_MAX_OUTPUT_PORT_TYPE
VDO1[6] <= VXD1[6].DB_MAX_OUTPUT_PORT_TYPE
VDO1[7] <= VXD1[7].DB_MAX_OUTPUT_PORT_TYPE
VDO2[0] <= VXD2[0].DB_MAX_OUTPUT_PORT_TYPE
VDO2[1] <= VXD2[1].DB_MAX_OUTPUT_PORT_TYPE
VDO2[2] <= VXD2[2].DB_MAX_OUTPUT_PORT_TYPE
VDO2[3] <= VXD2[3].DB_MAX_OUTPUT_PORT_TYPE
VDO2[4] <= VXD2[4].DB_MAX_OUTPUT_PORT_TYPE
VDO2[5] <= VXD2[5].DB_MAX_OUTPUT_PORT_TYPE
VDO2[6] <= VXD2[6].DB_MAX_OUTPUT_PORT_TYPE
VDO2[7] <= VXD2[7].DB_MAX_OUTPUT_PORT_TYPE
VDO3[0] <= VXD3[0].DB_MAX_OUTPUT_PORT_TYPE
VDO3[1] <= VXD3[1].DB_MAX_OUTPUT_PORT_TYPE
VDO3[2] <= VXD3[2].DB_MAX_OUTPUT_PORT_TYPE
VDO3[3] <= VXD3[3].DB_MAX_OUTPUT_PORT_TYPE
VDO3[4] <= VXD3[4].DB_MAX_OUTPUT_PORT_TYPE
VDO3[5] <= VXD3[5].DB_MAX_OUTPUT_PORT_TYPE
VDO3[6] <= VXD3[6].DB_MAX_OUTPUT_PORT_TYPE
VDO3[7] <= VXD3[7].DB_MAX_OUTPUT_PORT_TYPE
VDM0[0] => D_PIC0_[0].DATAIN
VDM0[1] => D_PIC0_[1].DATAIN
VDM0[2] => D_PIC0_[2].DATAIN
VDM0[3] => D_PIC0_[3].DATAIN
VDM0[4] => D_PIC0_[4].DATAIN
VDM0[5] => D_PIC0_[5].DATAIN
VDM0[6] => D_PIC0_[6].DATAIN
VDM0[7] => D_PIC0_[7].DATAIN
VDM1[0] => D_PIC1_[0].DATAIN
VDM1[0] => MODE2[0].DATAIN
VDM1[1] => D_PIC1_[1].DATAIN
VDM1[1] => MODE2[1].DATAIN
VDM1[2] => D_PIC1_[2].DATAIN
VDM1[2] => MODE2[2].DATAIN
VDM1[3] => D_PIC1_[3].DATAIN
VDM1[3] => MODE2[3].DATAIN
VDM1[4] => D_PIC1_[4].DATAIN
VDM1[4] => MODE2[4].DATAIN
VDM1[5] => D_PIC1_[5].DATAIN
VDM1[5] => MODE2[5].DATAIN
VDM1[6] => D_PIC1_[6].DATAIN
VDM1[6] => MODE2[6].DATAIN
VDM1[7] => D_PIC1_[7].DATAIN
VDM1[7] => MODE2[7].DATAIN
VDM2[0] => D_PIC2_[0].DATAIN
VDM2[0] => MODE1[0].DATAIN
VDM2[1] => D_PIC2_[1].DATAIN
VDM2[1] => MODE1[1].DATAIN
VDM2[2] => D_PIC2_[2].DATAIN
VDM2[2] => MODE1[2].DATAIN
VDM2[3] => D_PIC2_[3].DATAIN
VDM2[3] => MODE1[3].DATAIN
VDM2[4] => D_PIC2_[4].DATAIN
VDM2[4] => MODE1[4].DATAIN
VDM2[5] => D_PIC2_[5].DATAIN
VDM2[5] => MODE1[5].DATAIN
VDM2[6] => D_PIC2_[6].DATAIN
VDM2[6] => MODE1[6].DATAIN
VDM2[7] => D_PIC2_[7].DATAIN
VDM2[7] => MODE1[7].DATAIN
VDM3[0] => D_PIC3_[0].DATAIN
VDM3[0] => MODE0[0].DATAIN
VDM3[1] => D_PIC3_[1].DATAIN
VDM3[1] => MODE0[1].DATAIN
VDM3[2] => D_PIC3_[2].DATAIN
VDM3[2] => MODE0[2].DATAIN
VDM3[3] => D_PIC3_[3].DATAIN
VDM3[3] => MODE0[3].DATAIN
VDM3[4] => D_PIC3_[4].DATAIN
VDM3[4] => MODE0[4].DATAIN
VDM3[5] => D_PIC3_[5].DATAIN
VDM3[5] => MODE0[5].DATAIN
VDM3[6] => D_PIC3_[6].DATAIN
VDM3[6] => MODE0[6].DATAIN
VDM3[7] => D_PIC3_[7].DATAIN
VDM3[7] => MODE0[7].DATAIN
V_WR[0] <= V_WR[0]~3.DB_MAX_OUTPUT_PORT_TYPE
V_WR[1] <= V_WR[1]~2.DB_MAX_OUTPUT_PORT_TYPE
V_WR[2] <= V_WR[2]~1.DB_MAX_OUTPUT_PORT_TYPE
V_WR[3] <= V_WR[3]~0.DB_MAX_OUTPUT_PORT_TYPE
V_WEN[0] <= V_WEY[0].DB_MAX_OUTPUT_PORT_TYPE
V_WEN[1] <= V_WEY[1].DB_MAX_OUTPUT_PORT_TYPE
V_WEN[2] <= V_WEY[2].DB_MAX_OUTPUT_PORT_TYPE
V_WEN[3] <= V_WEY[3].DB_MAX_OUTPUT_PORT_TYPE
V_CS[0] <= <GND>
V_CS[1] <= <VCC>
WR_PIX <= TSN_W3.DB_MAX_OUTPUT_PORT_TYPE
ZX_PORT[5] => ~NO_FANOUT~
DIR_PORT[1] => ~NO_FANOUT~
DIR_PORT[2] => ~NO_FANOUT~
INTT <= $00015.DB_MAX_OUTPUT_PORT_TYPE
DOUBLE_CAS => DOUBLE.DATAIN
MOUSE_Y[9] => ~NO_FANOUT~


|SP2_ACEX|video2:SVIDEO|lpm_ram_dp:MS_DAT
data[0] => altdpram:sram.data[0]
data[1] => altdpram:sram.data[1]
data[2] => altdpram:sram.data[2]
data[3] => altdpram:sram.data[3]
data[4] => altdpram:sram.data[4]
data[5] => altdpram:sram.data[5]
data[6] => altdpram:sram.data[6]
data[7] => altdpram:sram.data[7]
data[8] => altdpram:sram.data[8]
data[9] => altdpram:sram.data[9]
data[10] => altdpram:sram.data[10]
data[11] => altdpram:sram.data[11]
data[12] => altdpram:sram.data[12]
data[13] => altdpram:sram.data[13]
data[14] => altdpram:sram.data[14]
data[15] => altdpram:sram.data[15]
rdaddress[0] => altdpram:sram.rdaddress[0]
rdaddress[1] => altdpram:sram.rdaddress[1]
rdaddress[2] => altdpram:sram.rdaddress[2]
rdaddress[3] => altdpram:sram.rdaddress[3]
rdaddress[4] => altdpram:sram.rdaddress[4]
rdaddress[5] => altdpram:sram.rdaddress[5]
rdaddress[6] => altdpram:sram.rdaddress[6]
rdaddress[7] => altdpram:sram.rdaddress[7]
wraddress[0] => altdpram:sram.wraddress[0]
wraddress[1] => altdpram:sram.wraddress[1]
wraddress[2] => altdpram:sram.wraddress[2]
wraddress[3] => altdpram:sram.wraddress[3]
wraddress[4] => altdpram:sram.wraddress[4]
wraddress[5] => altdpram:sram.wraddress[5]
wraddress[6] => altdpram:sram.wraddress[6]
wraddress[7] => altdpram:sram.wraddress[7]
rdclock => altdpram:sram.outclock
rdclken => ~NO_FANOUT~
wrclock => altdpram:sram.inclock
wrclken => altdpram:sram.inclocken
rden => ~NO_FANOUT~
wren => altdpram:sram.wren
q[0] <= q[0]~15.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1]~14.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2]~13.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3]~12.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q[4]~11.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q[5]~10.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q[6]~9.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q[7]~8.DB_MAX_OUTPUT_PORT_TYPE
q[8] <= q[8]~7.DB_MAX_OUTPUT_PORT_TYPE
q[9] <= q[9]~6.DB_MAX_OUTPUT_PORT_TYPE
q[10] <= q[10]~5.DB_MAX_OUTPUT_PORT_TYPE
q[11] <= q[11]~4.DB_MAX_OUTPUT_PORT_TYPE
q[12] <= q[12]~3.DB_MAX_OUTPUT_PORT_TYPE
q[13] <= q[13]~2.DB_MAX_OUTPUT_PORT_TYPE
q[14] <= q[14]~1.DB_MAX_OUTPUT_PORT_TYPE
q[15] <= q[15]~0.DB_MAX_OUTPUT_PORT_TYPE


|SP2_ACEX|video2:SVIDEO|lpm_ram_dp:MS_DAT|altdpram:sram
wren => segment[0][15].WE
wren => segment[0][14].WE
wren => segment[0][13].WE
wren => segment[0][12].WE
wren => segment[0][11].WE
wren => segment[0][10].WE
wren => segment[0][9].WE
wren => segment[0][8].WE
wren => segment[0][7].WE
wren => segment[0][6].WE
wren => segment[0][5].WE
wren => segment[0][4].WE
wren => segment[0][3].WE
wren => segment[0][2].WE
wren => segment[0][1].WE
wren => segment[0][0].WE
data[0] => segment[0][0].DATAIN
data[1] => segment[0][1].DATAIN
data[2] => segment[0][2].DATAIN
data[3] => segment[0][3].DATAIN
data[4] => segment[0][4].DATAIN
data[5] => segment[0][5].DATAIN
data[6] => segment[0][6].DATAIN
data[7] => segment[0][7].DATAIN
data[8] => segment[0][8].DATAIN
data[9] => segment[0][9].DATAIN
data[10] => segment[0][10].DATAIN
data[11] => segment[0][11].DATAIN
data[12] => segment[0][12].DATAIN
data[13] => segment[0][13].DATAIN
data[14] => segment[0][14].DATAIN
data[15] => segment[0][15].DATAIN
wraddress[0] => segment[0][15].WADDR
wraddress[0] => segment[0][14].WADDR
wraddress[0] => segment[0][13].WADDR
wraddress[0] => segment[0][12].WADDR
wraddress[0] => segment[0][11].WADDR
wraddress[0] => segment[0][10].WADDR
wraddress[0] => segment[0][9].WADDR
wraddress[0] => segment[0][8].WADDR
wraddress[0] => segment[0][7].WADDR
wraddress[0] => segment[0][6].WADDR
wraddress[0] => segment[0][5].WADDR
wraddress[0] => segment[0][4].WADDR
wraddress[0] => segment[0][3].WADDR
wraddress[0] => segment[0][2].WADDR
wraddress[0] => segment[0][1].WADDR
wraddress[0] => segment[0][0].WADDR
wraddress[1] => segment[0][15].WADDR1
wraddress[1] => segment[0][14].WADDR1
wraddress[1] => segment[0][13].WADDR1
wraddress[1] => segment[0][12].WADDR1
wraddress[1] => segment[0][11].WADDR1
wraddress[1] => segment[0][10].WADDR1
wraddress[1] => segment[0][9].WADDR1
wraddress[1] => segment[0][8].WADDR1
wraddress[1] => segment[0][7].WADDR1
wraddress[1] => segment[0][6].WADDR1
wraddress[1] => segment[0][5].WADDR1
wraddress[1] => segment[0][4].WADDR1
wraddress[1] => segment[0][3].WADDR1
wraddress[1] => segment[0][2].WADDR1
wraddress[1] => segment[0][1].WADDR1
wraddress[1] => segment[0][0].WADDR1
wraddress[2] => segment[0][15].WADDR2
wraddress[2] => segment[0][14].WADDR2
wraddress[2] => segment[0][13].WADDR2
wraddress[2] => segment[0][12].WADDR2
wraddress[2] => segment[0][11].WADDR2
wraddress[2] => segment[0][10].WADDR2
wraddress[2] => segment[0][9].WADDR2
wraddress[2] => segment[0][8].WADDR2
wraddress[2] => segment[0][7].WADDR2
wraddress[2] => segment[0][6].WADDR2
wraddress[2] => segment[0][5].WADDR2
wraddress[2] => segment[0][4].WADDR2
wraddress[2] => segment[0][3].WADDR2
wraddress[2] => segment[0][2].WADDR2
wraddress[2] => segment[0][1].WADDR2
wraddress[2] => segment[0][0].WADDR2
wraddress[3] => segment[0][15].WADDR3
wraddress[3] => segment[0][14].WADDR3
wraddress[3] => segment[0][13].WADDR3
wraddress[3] => segment[0][12].WADDR3
wraddress[3] => segment[0][11].WADDR3
wraddress[3] => segment[0][10].WADDR3
wraddress[3] => segment[0][9].WADDR3
wraddress[3] => segment[0][8].WADDR3
wraddress[3] => segment[0][7].WADDR3
wraddress[3] => segment[0][6].WADDR3
wraddress[3] => segment[0][5].WADDR3
wraddress[3] => segment[0][4].WADDR3
wraddress[3] => segment[0][3].WADDR3
wraddress[3] => segment[0][2].WADDR3
wraddress[3] => segment[0][1].WADDR3
wraddress[3] => segment[0][0].WADDR3
wraddress[4] => segment[0][15].WADDR4
wraddress[4] => segment[0][14].WADDR4
wraddress[4] => segment[0][13].WADDR4
wraddress[4] => segment[0][12].WADDR4
wraddress[4] => segment[0][11].WADDR4
wraddress[4] => segment[0][10].WADDR4
wraddress[4] => segment[0][9].WADDR4
wraddress[4] => segment[0][8].WADDR4
wraddress[4] => segment[0][7].WADDR4
wraddress[4] => segment[0][6].WADDR4
wraddress[4] => segment[0][5].WADDR4
wraddress[4] => segment[0][4].WADDR4
wraddress[4] => segment[0][3].WADDR4
wraddress[4] => segment[0][2].WADDR4
wraddress[4] => segment[0][1].WADDR4
wraddress[4] => segment[0][0].WADDR4
wraddress[5] => segment[0][15].WADDR5
wraddress[5] => segment[0][14].WADDR5
wraddress[5] => segment[0][13].WADDR5
wraddress[5] => segment[0][12].WADDR5
wraddress[5] => segment[0][11].WADDR5
wraddress[5] => segment[0][10].WADDR5
wraddress[5] => segment[0][9].WADDR5
wraddress[5] => segment[0][8].WADDR5
wraddress[5] => segment[0][7].WADDR5
wraddress[5] => segment[0][6].WADDR5
wraddress[5] => segment[0][5].WADDR5
wraddress[5] => segment[0][4].WADDR5
wraddress[5] => segment[0][3].WADDR5
wraddress[5] => segment[0][2].WADDR5
wraddress[5] => segment[0][1].WADDR5
wraddress[5] => segment[0][0].WADDR5
wraddress[6] => segment[0][15].WADDR6
wraddress[6] => segment[0][14].WADDR6
wraddress[6] => segment[0][13].WADDR6
wraddress[6] => segment[0][12].WADDR6
wraddress[6] => segment[0][11].WADDR6
wraddress[6] => segment[0][10].WADDR6
wraddress[6] => segment[0][9].WADDR6
wraddress[6] => segment[0][8].WADDR6
wraddress[6] => segment[0][7].WADDR6
wraddress[6] => segment[0][6].WADDR6
wraddress[6] => segment[0][5].WADDR6
wraddress[6] => segment[0][4].WADDR6
wraddress[6] => segment[0][3].WADDR6
wraddress[6] => segment[0][2].WADDR6
wraddress[6] => segment[0][1].WADDR6
wraddress[6] => segment[0][0].WADDR6
wraddress[7] => segment[0][15].WADDR7
wraddress[7] => segment[0][14].WADDR7
wraddress[7] => segment[0][13].WADDR7
wraddress[7] => segment[0][12].WADDR7
wraddress[7] => segment[0][11].WADDR7
wraddress[7] => segment[0][10].WADDR7
wraddress[7] => segment[0][9].WADDR7
wraddress[7] => segment[0][8].WADDR7
wraddress[7] => segment[0][7].WADDR7
wraddress[7] => segment[0][6].WADDR7
wraddress[7] => segment[0][5].WADDR7
wraddress[7] => segment[0][4].WADDR7
wraddress[7] => segment[0][3].WADDR7
wraddress[7] => segment[0][2].WADDR7
wraddress[7] => segment[0][1].WADDR7
wraddress[7] => segment[0][0].WADDR7
inclock => segment[0][15].CLK0
inclock => segment[0][14].CLK0
inclock => segment[0][13].CLK0
inclock => segment[0][12].CLK0
inclock => segment[0][11].CLK0
inclock => segment[0][10].CLK0
inclock => segment[0][9].CLK0
inclock => segment[0][8].CLK0
inclock => segment[0][7].CLK0
inclock => segment[0][6].CLK0
inclock => segment[0][5].CLK0
inclock => segment[0][4].CLK0
inclock => segment[0][3].CLK0
inclock => segment[0][2].CLK0
inclock => segment[0][1].CLK0
inclock => segment[0][0].CLK0
inclocken => segment[0][15].ENA0
inclocken => segment[0][14].ENA0
inclocken => segment[0][13].ENA0
inclocken => segment[0][12].ENA0
inclocken => segment[0][11].ENA0
inclocken => segment[0][10].ENA0
inclocken => segment[0][9].ENA0
inclocken => segment[0][8].ENA0
inclocken => segment[0][7].ENA0
inclocken => segment[0][6].ENA0
inclocken => segment[0][5].ENA0
inclocken => segment[0][4].ENA0
inclocken => segment[0][3].ENA0
inclocken => segment[0][2].ENA0
inclocken => segment[0][1].ENA0
inclocken => segment[0][0].ENA0
rden => segment[0][15].RE
rden => segment[0][14].RE
rden => segment[0][13].RE
rden => segment[0][12].RE
rden => segment[0][11].RE
rden => segment[0][10].RE
rden => segment[0][9].RE
rden => segment[0][8].RE
rden => segment[0][7].RE
rden => segment[0][6].RE
rden => segment[0][5].RE
rden => segment[0][4].RE
rden => segment[0][3].RE
rden => segment[0][2].RE
rden => segment[0][1].RE
rden => segment[0][0].RE
rdaddress[0] => segment[0][15].RADDR
rdaddress[0] => segment[0][14].RADDR
rdaddress[0] => segment[0][13].RADDR
rdaddress[0] => segment[0][12].RADDR
rdaddress[0] => segment[0][11].RADDR
rdaddress[0] => segment[0][10].RADDR
rdaddress[0] => segment[0][9].RADDR
rdaddress[0] => segment[0][8].RADDR
rdaddress[0] => segment[0][7].RADDR
rdaddress[0] => segment[0][6].RADDR
rdaddress[0] => segment[0][5].RADDR
rdaddress[0] => segment[0][4].RADDR
rdaddress[0] => segment[0][3].RADDR
rdaddress[0] => segment[0][2].RADDR
rdaddress[0] => segment[0][1].RADDR
rdaddress[0] => segment[0][0].RADDR
rdaddress[1] => segment[0][15].RADDR1
rdaddress[1] => segment[0][14].RADDR1
rdaddress[1] => segment[0][13].RADDR1
rdaddress[1] => segment[0][12].RADDR1
rdaddress[1] => segment[0][11].RADDR1
rdaddress[1] => segment[0][10].RADDR1
rdaddress[1] => segment[0][9].RADDR1
rdaddress[1] => segment[0][8].RADDR1
rdaddress[1] => segment[0][7].RADDR1
rdaddress[1] => segment[0][6].RADDR1
rdaddress[1] => segment[0][5].RADDR1
rdaddress[1] => segment[0][4].RADDR1
rdaddress[1] => segment[0][3].RADDR1
rdaddress[1] => segment[0][2].RADDR1
rdaddress[1] => segment[0][1].RADDR1
rdaddress[1] => segment[0][0].RADDR1
rdaddress[2] => segment[0][15].RADDR2
rdaddress[2] => segment[0][14].RADDR2
rdaddress[2] => segment[0][13].RADDR2
rdaddress[2] => segment[0][12].RADDR2
rdaddress[2] => segment[0][11].RADDR2
rdaddress[2] => segment[0][10].RADDR2
rdaddress[2] => segment[0][9].RADDR2
rdaddress[2] => segment[0][8].RADDR2
rdaddress[2] => segment[0][7].RADDR2
rdaddress[2] => segment[0][6].RADDR2
rdaddress[2] => segment[0][5].RADDR2
rdaddress[2] => segment[0][4].RADDR2
rdaddress[2] => segment[0][3].RADDR2
rdaddress[2] => segment[0][2].RADDR2
rdaddress[2] => segment[0][1].RADDR2
rdaddress[2] => segment[0][0].RADDR2
rdaddress[3] => segment[0][15].RADDR3
rdaddress[3] => segment[0][14].RADDR3
rdaddress[3] => segment[0][13].RADDR3
rdaddress[3] => segment[0][12].RADDR3
rdaddress[3] => segment[0][11].RADDR3
rdaddress[3] => segment[0][10].RADDR3
rdaddress[3] => segment[0][9].RADDR3
rdaddress[3] => segment[0][8].RADDR3
rdaddress[3] => segment[0][7].RADDR3
rdaddress[3] => segment[0][6].RADDR3
rdaddress[3] => segment[0][5].RADDR3
rdaddress[3] => segment[0][4].RADDR3
rdaddress[3] => segment[0][3].RADDR3
rdaddress[3] => segment[0][2].RADDR3
rdaddress[3] => segment[0][1].RADDR3
rdaddress[3] => segment[0][0].RADDR3
rdaddress[4] => segment[0][15].RADDR4
rdaddress[4] => segment[0][14].RADDR4
rdaddress[4] => segment[0][13].RADDR4
rdaddress[4] => segment[0][12].RADDR4
rdaddress[4] => segment[0][11].RADDR4
rdaddress[4] => segment[0][10].RADDR4
rdaddress[4] => segment[0][9].RADDR4
rdaddress[4] => segment[0][8].RADDR4
rdaddress[4] => segment[0][7].RADDR4
rdaddress[4] => segment[0][6].RADDR4
rdaddress[4] => segment[0][5].RADDR4
rdaddress[4] => segment[0][4].RADDR4
rdaddress[4] => segment[0][3].RADDR4
rdaddress[4] => segment[0][2].RADDR4
rdaddress[4] => segment[0][1].RADDR4
rdaddress[4] => segment[0][0].RADDR4
rdaddress[5] => segment[0][15].RADDR5
rdaddress[5] => segment[0][14].RADDR5
rdaddress[5] => segment[0][13].RADDR5
rdaddress[5] => segment[0][12].RADDR5
rdaddress[5] => segment[0][11].RADDR5
rdaddress[5] => segment[0][10].RADDR5
rdaddress[5] => segment[0][9].RADDR5
rdaddress[5] => segment[0][8].RADDR5
rdaddress[5] => segment[0][7].RADDR5
rdaddress[5] => segment[0][6].RADDR5
rdaddress[5] => segment[0][5].RADDR5
rdaddress[5] => segment[0][4].RADDR5
rdaddress[5] => segment[0][3].RADDR5
rdaddress[5] => segment[0][2].RADDR5
rdaddress[5] => segment[0][1].RADDR5
rdaddress[5] => segment[0][0].RADDR5
rdaddress[6] => segment[0][15].RADDR6
rdaddress[6] => segment[0][14].RADDR6
rdaddress[6] => segment[0][13].RADDR6
rdaddress[6] => segment[0][12].RADDR6
rdaddress[6] => segment[0][11].RADDR6
rdaddress[6] => segment[0][10].RADDR6
rdaddress[6] => segment[0][9].RADDR6
rdaddress[6] => segment[0][8].RADDR6
rdaddress[6] => segment[0][7].RADDR6
rdaddress[6] => segment[0][6].RADDR6
rdaddress[6] => segment[0][5].RADDR6
rdaddress[6] => segment[0][4].RADDR6
rdaddress[6] => segment[0][3].RADDR6
rdaddress[6] => segment[0][2].RADDR6
rdaddress[6] => segment[0][1].RADDR6
rdaddress[6] => segment[0][0].RADDR6
rdaddress[7] => segment[0][15].RADDR7
rdaddress[7] => segment[0][14].RADDR7
rdaddress[7] => segment[0][13].RADDR7
rdaddress[7] => segment[0][12].RADDR7
rdaddress[7] => segment[0][11].RADDR7
rdaddress[7] => segment[0][10].RADDR7
rdaddress[7] => segment[0][9].RADDR7
rdaddress[7] => segment[0][8].RADDR7
rdaddress[7] => segment[0][7].RADDR7
rdaddress[7] => segment[0][6].RADDR7
rdaddress[7] => segment[0][5].RADDR7
rdaddress[7] => segment[0][4].RADDR7
rdaddress[7] => segment[0][3].RADDR7
rdaddress[7] => segment[0][2].RADDR7
rdaddress[7] => segment[0][1].RADDR7
rdaddress[7] => segment[0][0].RADDR7
outclock => segment[0][15].CLK1
outclock => segment[0][14].CLK1
outclock => segment[0][13].CLK1
outclock => segment[0][12].CLK1
outclock => segment[0][11].CLK1
outclock => segment[0][10].CLK1
outclock => segment[0][9].CLK1
outclock => segment[0][8].CLK1
outclock => segment[0][7].CLK1
outclock => segment[0][6].CLK1
outclock => segment[0][5].CLK1
outclock => segment[0][4].CLK1
outclock => segment[0][3].CLK1
outclock => segment[0][2].CLK1
outclock => segment[0][1].CLK1
outclock => segment[0][0].CLK1
outclocken => ~NO_FANOUT~
aclr => ~NO_FANOUT~
byteena[0] => ~NO_FANOUT~
wraddressstall => ~NO_FANOUT~
rdaddressstall => ~NO_FANOUT~
q[0] <= segment[0][0].DATAOUT
q[1] <= segment[0][1].DATAOUT
q[2] <= segment[0][2].DATAOUT
q[3] <= segment[0][3].DATAOUT
q[4] <= segment[0][4].DATAOUT
q[5] <= segment[0][5].DATAOUT
q[6] <= segment[0][6].DATAOUT
q[7] <= segment[0][7].DATAOUT
q[8] <= segment[0][8].DATAOUT
q[9] <= segment[0][9].DATAOUT
q[10] <= segment[0][10].DATAOUT
q[11] <= segment[0][11].DATAOUT
q[12] <= segment[0][12].DATAOUT
q[13] <= segment[0][13].DATAOUT
q[14] <= segment[0][14].DATAOUT
q[15] <= segment[0][15].DATAOUT


|SP2_ACEX|dcp:DECODE
CLK42 => CLK84.IN0
CLK42 => lpm_ram_dp:MEM.wrclock
CLK42 => lpm_ram_dp:MEM.rdclock
CLK42 => DD[7].CLK
CLK42 => DD[6].CLK
CLK42 => DD[5].CLK
CLK42 => DD[4].CLK
CLK42 => DD[3].CLK
CLK42 => DD[2].CLK
CLK42 => DD[1].CLK
CLK42 => DD[0].CLK
CLK42 => MC_END~reg.CLK
CLK42 => MC_BEGIN~reg.CLK
CLK42 => MC_TYPE~reg.CLK
CLK42 => MC_WRITE~reg.CLK
CLK42 => RAS~reg.CLK
CLK42 => CAS~reg.CLK
CLK42 => MA_[11].CLK
CLK42 => MA_[10].CLK
CLK42 => MA_[9].CLK
CLK42 => MA_[8].CLK
CLK42 => MA_[7].CLK
CLK42 => MA_[6].CLK
CLK42 => MA_[5].CLK
CLK42 => MA_[4].CLK
CLK42 => MA_[3].CLK
CLK42 => MA_[2].CLK
CLK42 => MA_[1].CLK
CLK42 => MA_[0].CLK
CLK42 => MCA[1]~reg.CLK
CLK42 => MCA[0]~reg.CLK
CLK42 => /IOM~reg.CLK
CLK42 => /IOMM~reg.CLK
CLK42 => /IOMX.CLK
CLK42 => /IOMY.CLK
CLK42 => WT_CT[3].CLK
CLK42 => WT_CT[2].CLK
CLK42 => WT_CT[1].CLK
CLK42 => WT_CT[0].CLK
CLK42 => MA_CT[1].CLK
CLK42 => MA_CT[0].CLK
CLK42 => WR_TM9~reg.CLK
CLK42 => RFC.CLK
CLK42 => GRAF~reg.CLK
CLK42 => /IOMZ.CLK
CLK42 => DCPP[7]~reg.CLK
CLK42 => DCPP[6]~reg.CLK
CLK42 => DCPP[5]~reg.CLK
CLK42 => DCPP[4]~reg.CLK
CLK42 => DCPP[3]~reg.CLK
CLK42 => DCPP[2]~reg.CLK
CLK42 => DCPP[1]~reg.CLK
CLK42 => DCPP[0]~reg.CLK
CLK42 => HDD_A[3].CLK
CLK42 => HDD_A[2].CLK
CLK42 => HDD_A[1].CLK
CLK42 => HDD_A[0].CLK
CLK42 => /RES$wire.CLK
CLK42 => $00002.CLK
CLK42 => $00007.CLK
CLK42 => CLK21.CLK
CLK42 => $00010.CLK
CLK42 => $00015.CLK
CLK42 => $00016.CLK
CLK42 => IO_RW.CLK
CLK42 => $00023.CLK
CLK42 => $00024.CLK
CLK42 => PORTS_X.CLK
CLK42 => $00026.CLK
CLK42 => HDD_DATA$wire.CLK
CLK42 => $00028.CLK
CLK42 => $00029.CLK
CLK42 => $00032.CLK
CLK42 => $00033.CLK
CLK42 => $00034.CLK
CLK42 => $00035.CLK
CLK42 => DCP_RES.CLK
CLK42 => $00043.CLK
CLK42 => $00044.CLK
CLK42 => SYS_ENA.CLK
CLK42 => $00048.CLK
CLK42 => $00049.CLK
CLK42 => MEM_WR.CLK
CLK42 => $00058.CLK
CLK42 => $00059.CLK
/RESET => SYS.ACLR
/RESET => CNF[7].ACLR
/RESET => CNF[6].ACLR
/RESET => CNF[5].ACLR
/RESET => CNF[4].ACLR
/RESET => CNF[3].ACLR
/RESET => CNF[2].ACLR
/RESET => CNF[1].ACLR
/RESET => CNF[0].ACLR
/RESET => AROM16.ACLR
/RESET => TB_SW.PRESET
/RESET => $00003.PRESET
/RES <= /RES$wire.DB_MAX_OUTPUT_PORT_TYPE
CT[0] => /RES$wire.ENA
CT[1] => MEM_WR.ENA
CT[2] => RAS~reg.DATAIN
RAS <= RAS~reg.DB_MAX_OUTPUT_PORT_TYPE
CAS <= CAS~reg.DB_MAX_OUTPUT_PORT_TYPE
MC_END <= MC_END~reg.DB_MAX_OUTPUT_PORT_TYPE
MC_BEGIN <= MC_BEGIN~reg.DB_MAX_OUTPUT_PORT_TYPE
MC_TYPE <= MC_TYPE~reg.DB_MAX_OUTPUT_PORT_TYPE
MC_WRITE <= MC_WRITE~reg.DB_MAX_OUTPUT_PORT_TYPE
A[0] => MCA[0]~reg.DATAIN
A[1] => MCA[1]~reg.DATAIN
DI[0] => PN[0].DATAIN
DI[0] => SC[0].DATAIN
DI[1] => PN[1].DATAIN
DI[1] => SC[1].DATAIN
DI[2] => PN[2].DATAIN
DI[2] => SC[2].DATAIN
DI[3] => PN[3].DATAIN
DI[3] => SC[3].DATAIN
DI[4] => PN[4].DATAIN
DI[4] => SC[4].DATAIN
DI[5] => PN[5].DATAIN
DI[5] => SC[5].DATAIN
DI[6] => PN[6].DATAIN
DI[6] => SC[6].DATAIN
DI[7] => PN[7].DATAIN
DI[7] => SC[7].DATAIN
DO[0] <= DO[0]~7.DB_MAX_OUTPUT_PORT_TYPE
DO[1] <= DO[1]~6.DB_MAX_OUTPUT_PORT_TYPE
DO[2] <= DO[2]~5.DB_MAX_OUTPUT_PORT_TYPE
DO[3] <= DO[3]~4.DB_MAX_OUTPUT_PORT_TYPE
DO[4] <= DO[4]~3.DB_MAX_OUTPUT_PORT_TYPE
DO[5] <= DO[5]~2.DB_MAX_OUTPUT_PORT_TYPE
DO[6] <= DO[6]~1.DB_MAX_OUTPUT_PORT_TYPE
DO[7] <= DO[7]~0.DB_MAX_OUTPUT_PORT_TYPE
MA[0] <= MA_[0].DB_MAX_OUTPUT_PORT_TYPE
MA[1] <= MA_[1].DB_MAX_OUTPUT_PORT_TYPE
MA[2] <= MA_[2].DB_MAX_OUTPUT_PORT_TYPE
MA[3] <= MA_[3].DB_MAX_OUTPUT_PORT_TYPE
MA[4] <= MA_[4].DB_MAX_OUTPUT_PORT_TYPE
MA[5] <= MA_[5].DB_MAX_OUTPUT_PORT_TYPE
MA[6] <= MA_[6].DB_MAX_OUTPUT_PORT_TYPE
MA[7] <= MA_[7].DB_MAX_OUTPUT_PORT_TYPE
MA[8] <= MA_[8].DB_MAX_OUTPUT_PORT_TYPE
MA[9] <= MA_[9].DB_MAX_OUTPUT_PORT_TYPE
MA[10] <= MA_[10].DB_MAX_OUTPUT_PORT_TYPE
MA[11] <= MA_[11].DB_MAX_OUTPUT_PORT_TYPE
MCA[0] <= MCA[0]~reg.DB_MAX_OUTPUT_PORT_TYPE
MCA[1] <= MCA[1]~reg.DB_MAX_OUTPUT_PORT_TYPE
CLK_Z80 <= $00006.DB_MAX_OUTPUT_PORT_TYPE
TURBO <= $00002.DB_MAX_OUTPUT_PORT_TYPE
/IO => IO_RW.DATAIN
/M1 => IO_RW.PRESET
/IOM <= /IOM~reg.DB_MAX_OUTPUT_PORT_TYPE
/IOMM <= /IOMM~reg.DB_MAX_OUTPUT_PORT_TYPE
MD[0] => DCPP[0]~reg.DATAIN
MD[1] => DCPP[1]~reg.DATAIN
MD[2] => DCPP[2]~reg.DATAIN
MD[3] => DCPP[3]~reg.DATAIN
MD[4] => DCPP[4]~reg.DATAIN
MD[5] => DCPP[5]~reg.DATAIN
MD[6] => DCPP[6]~reg.DATAIN
MD[7] => DCPP[7]~reg.DATAIN
RA[14] <= RA[14]~buf.DB_MAX_OUTPUT_PORT_TYPE
RA[15] <= RA[15]~buf.DB_MAX_OUTPUT_PORT_TYPE
RA[16] <= RA[16]~buf.DB_MAX_OUTPUT_PORT_TYPE
RA[17] <= RA[17]~buf.DB_MAX_OUTPUT_PORT_TYPE
PAGE[0] <= lpm_ram_dp:MEM.q[0]
PAGE[1] <= lpm_ram_dp:MEM.q[1]
PAGE[2] <= lpm_ram_dp:MEM.q[2]
PAGE[3] <= lpm_ram_dp:MEM.q[3]
PAGE[4] <= lpm_ram_dp:MEM.q[4]
PAGE[5] <= lpm_ram_dp:MEM.q[5]
PAGE[6] <= lpm_ram_dp:MEM.q[6]
PAGE[7] <= lpm_ram_dp:MEM.q[7]
PAGE[8] <= lpm_ram_dp:MEM.q[8]
PAGE[9] <= lpm_ram_dp:MEM.q[9]
PAGE[10] <= lpm_ram_dp:MEM.q[10]
PAGE[11] <= lpm_ram_dp:MEM.q[11]
TYPE[0] <= lpm_ram_dp:MEM.q[12]
TYPE[1] <= lpm_ram_dp:MEM.q[13]
TYPE[2] <= lpm_ram_dp:MEM.q[14]
TYPE[3] <= lpm_ram_dp:MEM.q[15]
CS_ROM <= $00038.DB_MAX_OUTPUT_PORT_TYPE
CS_RAM <= $00039.DB_MAX_OUTPUT_PORT_TYPE
V_RAM <= PN[2].DB_MAX_OUTPUT_PORT_TYPE
WR_TM9 <= WR_TM9~reg.DB_MAX_OUTPUT_PORT_TYPE
WR_AWG <= WR_AWGX.DB_MAX_OUTPUT_PORT_TYPE
RD_KP11 <= RD_KP11~reg.DB_MAX_OUTPUT_PORT_TYPE
KP11_MIX <= $00011.DB_MAX_OUTPUT_PORT_TYPE
REFRESH => RFT.CLK
G_LINE[9] => ~NO_FANOUT~
GA[0] <= GA[0]~buf.DB_MAX_OUTPUT_PORT_TYPE
GA[1] <= GA[1]~buf.DB_MAX_OUTPUT_PORT_TYPE
GA[2] <= GA[2]~buf.DB_MAX_OUTPUT_PORT_TYPE
GA[3] <= GA[3]~buf.DB_MAX_OUTPUT_PORT_TYPE
GA[4] <= GA[4]~buf.DB_MAX_OUTPUT_PORT_TYPE
GA[5] <= GA[5]~buf.DB_MAX_OUTPUT_PORT_TYPE
GA[6] <= GA[6]~buf.DB_MAX_OUTPUT_PORT_TYPE
GA[7] <= GA[7]~buf.DB_MAX_OUTPUT_PORT_TYPE
GA[8] <= GA[8]~buf.DB_MAX_OUTPUT_PORT_TYPE
GA[9] <= GA[9]~buf.DB_MAX_OUTPUT_PORT_TYPE
GRAF <= GRAF~reg.DB_MAX_OUTPUT_PORT_TYPE
SP_SCR <= SP_SCR~buf.DB_MAX_OUTPUT_PORT_TYPE
SP_SA <= SP_SA~buf.DB_MAX_OUTPUT_PORT_TYPE
SCR128 <= PN[3].DB_MAX_OUTPUT_PORT_TYPE
HDD_DATA <= HDD_DATA$wire.DB_MAX_OUTPUT_PORT_TYPE
HDD_FLIP <= HDD_FLIP~reg.DB_MAX_OUTPUT_PORT_TYPE
BLK_R <= SC[4].DB_MAX_OUTPUT_PORT_TYPE
PN4Q <= PN[4].DB_MAX_OUTPUT_PORT_TYPE
DCPP[0] <= DCPP[0]~reg.DB_MAX_OUTPUT_PORT_TYPE
DCPP[1] <= DCPP[1]~reg.DB_MAX_OUTPUT_PORT_TYPE
DCPP[2] <= DCPP[2]~reg.DB_MAX_OUTPUT_PORT_TYPE
DCPP[3] <= DCPP[3]~reg.DB_MAX_OUTPUT_PORT_TYPE
DCPP[4] <= DCPP[4]~reg.DB_MAX_OUTPUT_PORT_TYPE
DCPP[5] <= DCPP[5]~reg.DB_MAX_OUTPUT_PORT_TYPE
DCPP[6] <= DCPP[6]~reg.DB_MAX_OUTPUT_PORT_TYPE
DCPP[7] <= DCPP[7]~reg.DB_MAX_OUTPUT_PORT_TYPE


|SP2_ACEX|dcp:DECODE|lpm_ram_dp:MEM
data[0] => altdpram:sram.data[0]
data[1] => altdpram:sram.data[1]
data[2] => altdpram:sram.data[2]
data[3] => altdpram:sram.data[3]
data[4] => altdpram:sram.data[4]
data[5] => altdpram:sram.data[5]
data[6] => altdpram:sram.data[6]
data[7] => altdpram:sram.data[7]
data[8] => altdpram:sram.data[8]
data[9] => altdpram:sram.data[9]
data[10] => altdpram:sram.data[10]
data[11] => altdpram:sram.data[11]
data[12] => altdpram:sram.data[12]
data[13] => altdpram:sram.data[13]
data[14] => altdpram:sram.data[14]
data[15] => altdpram:sram.data[15]
rdaddress[0] => altdpram:sram.rdaddress[0]
rdaddress[1] => altdpram:sram.rdaddress[1]
rdaddress[2] => altdpram:sram.rdaddress[2]
rdaddress[3] => altdpram:sram.rdaddress[3]
rdaddress[4] => altdpram:sram.rdaddress[4]
rdaddress[5] => altdpram:sram.rdaddress[5]
rdaddress[6] => altdpram:sram.rdaddress[6]
rdaddress[7] => altdpram:sram.rdaddress[7]
wraddress[0] => altdpram:sram.wraddress[0]
wraddress[1] => altdpram:sram.wraddress[1]
wraddress[2] => altdpram:sram.wraddress[2]
wraddress[3] => altdpram:sram.wraddress[3]
wraddress[4] => altdpram:sram.wraddress[4]
wraddress[5] => altdpram:sram.wraddress[5]
wraddress[6] => altdpram:sram.wraddress[6]
wraddress[7] => altdpram:sram.wraddress[7]
rdclock => altdpram:sram.outclock
rdclken => ~NO_FANOUT~
wrclock => altdpram:sram.inclock
wrclken => ~NO_FANOUT~
rden => ~NO_FANOUT~
wren => altdpram:sram.wren
q[0] <= altdpram:sram.q[0]
q[1] <= altdpram:sram.q[1]
q[2] <= altdpram:sram.q[2]
q[3] <= altdpram:sram.q[3]
q[4] <= altdpram:sram.q[4]
q[5] <= altdpram:sram.q[5]
q[6] <= altdpram:sram.q[6]
q[7] <= altdpram:sram.q[7]
q[8] <= altdpram:sram.q[8]
q[9] <= altdpram:sram.q[9]
q[10] <= altdpram:sram.q[10]
q[11] <= altdpram:sram.q[11]
q[12] <= altdpram:sram.q[12]
q[13] <= altdpram:sram.q[13]
q[14] <= altdpram:sram.q[14]
q[15] <= altdpram:sram.q[15]


|SP2_ACEX|dcp:DECODE|lpm_ram_dp:MEM|altdpram:sram
wren => segment[0][15].WE
wren => segment[0][14].WE
wren => segment[0][13].WE
wren => segment[0][12].WE
wren => segment[0][11].WE
wren => segment[0][10].WE
wren => segment[0][9].WE
wren => segment[0][8].WE
wren => segment[0][7].WE
wren => segment[0][6].WE
wren => segment[0][5].WE
wren => segment[0][4].WE
wren => segment[0][3].WE
wren => segment[0][2].WE
wren => segment[0][1].WE
wren => segment[0][0].WE
data[0] => segment[0][0].DATAIN
data[1] => segment[0][1].DATAIN
data[2] => segment[0][2].DATAIN
data[3] => segment[0][3].DATAIN
data[4] => segment[0][4].DATAIN
data[5] => segment[0][5].DATAIN
data[6] => segment[0][6].DATAIN
data[7] => segment[0][7].DATAIN
data[8] => segment[0][8].DATAIN
data[9] => segment[0][9].DATAIN
data[10] => segment[0][10].DATAIN
data[11] => segment[0][11].DATAIN
data[12] => segment[0][12].DATAIN
data[13] => segment[0][13].DATAIN
data[14] => segment[0][14].DATAIN
data[15] => segment[0][15].DATAIN
wraddress[0] => segment[0][15].WADDR
wraddress[0] => segment[0][14].WADDR
wraddress[0] => segment[0][13].WADDR
wraddress[0] => segment[0][12].WADDR
wraddress[0] => segment[0][11].WADDR
wraddress[0] => segment[0][10].WADDR
wraddress[0] => segment[0][9].WADDR
wraddress[0] => segment[0][8].WADDR
wraddress[0] => segment[0][7].WADDR
wraddress[0] => segment[0][6].WADDR
wraddress[0] => segment[0][5].WADDR
wraddress[0] => segment[0][4].WADDR
wraddress[0] => segment[0][3].WADDR
wraddress[0] => segment[0][2].WADDR
wraddress[0] => segment[0][1].WADDR
wraddress[0] => segment[0][0].WADDR
wraddress[1] => segment[0][15].WADDR1
wraddress[1] => segment[0][14].WADDR1
wraddress[1] => segment[0][13].WADDR1
wraddress[1] => segment[0][12].WADDR1
wraddress[1] => segment[0][11].WADDR1
wraddress[1] => segment[0][10].WADDR1
wraddress[1] => segment[0][9].WADDR1
wraddress[1] => segment[0][8].WADDR1
wraddress[1] => segment[0][7].WADDR1
wraddress[1] => segment[0][6].WADDR1
wraddress[1] => segment[0][5].WADDR1
wraddress[1] => segment[0][4].WADDR1
wraddress[1] => segment[0][3].WADDR1
wraddress[1] => segment[0][2].WADDR1
wraddress[1] => segment[0][1].WADDR1
wraddress[1] => segment[0][0].WADDR1
wraddress[2] => segment[0][15].WADDR2
wraddress[2] => segment[0][14].WADDR2
wraddress[2] => segment[0][13].WADDR2
wraddress[2] => segment[0][12].WADDR2
wraddress[2] => segment[0][11].WADDR2
wraddress[2] => segment[0][10].WADDR2
wraddress[2] => segment[0][9].WADDR2
wraddress[2] => segment[0][8].WADDR2
wraddress[2] => segment[0][7].WADDR2
wraddress[2] => segment[0][6].WADDR2
wraddress[2] => segment[0][5].WADDR2
wraddress[2] => segment[0][4].WADDR2
wraddress[2] => segment[0][3].WADDR2
wraddress[2] => segment[0][2].WADDR2
wraddress[2] => segment[0][1].WADDR2
wraddress[2] => segment[0][0].WADDR2
wraddress[3] => segment[0][15].WADDR3
wraddress[3] => segment[0][14].WADDR3
wraddress[3] => segment[0][13].WADDR3
wraddress[3] => segment[0][12].WADDR3
wraddress[3] => segment[0][11].WADDR3
wraddress[3] => segment[0][10].WADDR3
wraddress[3] => segment[0][9].WADDR3
wraddress[3] => segment[0][8].WADDR3
wraddress[3] => segment[0][7].WADDR3
wraddress[3] => segment[0][6].WADDR3
wraddress[3] => segment[0][5].WADDR3
wraddress[3] => segment[0][4].WADDR3
wraddress[3] => segment[0][3].WADDR3
wraddress[3] => segment[0][2].WADDR3
wraddress[3] => segment[0][1].WADDR3
wraddress[3] => segment[0][0].WADDR3
wraddress[4] => segment[0][15].WADDR4
wraddress[4] => segment[0][14].WADDR4
wraddress[4] => segment[0][13].WADDR4
wraddress[4] => segment[0][12].WADDR4
wraddress[4] => segment[0][11].WADDR4
wraddress[4] => segment[0][10].WADDR4
wraddress[4] => segment[0][9].WADDR4
wraddress[4] => segment[0][8].WADDR4
wraddress[4] => segment[0][7].WADDR4
wraddress[4] => segment[0][6].WADDR4
wraddress[4] => segment[0][5].WADDR4
wraddress[4] => segment[0][4].WADDR4
wraddress[4] => segment[0][3].WADDR4
wraddress[4] => segment[0][2].WADDR4
wraddress[4] => segment[0][1].WADDR4
wraddress[4] => segment[0][0].WADDR4
wraddress[5] => segment[0][15].WADDR5
wraddress[5] => segment[0][14].WADDR5
wraddress[5] => segment[0][13].WADDR5
wraddress[5] => segment[0][12].WADDR5
wraddress[5] => segment[0][11].WADDR5
wraddress[5] => segment[0][10].WADDR5
wraddress[5] => segment[0][9].WADDR5
wraddress[5] => segment[0][8].WADDR5
wraddress[5] => segment[0][7].WADDR5
wraddress[5] => segment[0][6].WADDR5
wraddress[5] => segment[0][5].WADDR5
wraddress[5] => segment[0][4].WADDR5
wraddress[5] => segment[0][3].WADDR5
wraddress[5] => segment[0][2].WADDR5
wraddress[5] => segment[0][1].WADDR5
wraddress[5] => segment[0][0].WADDR5
wraddress[6] => segment[0][15].WADDR6
wraddress[6] => segment[0][14].WADDR6
wraddress[6] => segment[0][13].WADDR6
wraddress[6] => segment[0][12].WADDR6
wraddress[6] => segment[0][11].WADDR6
wraddress[6] => segment[0][10].WADDR6
wraddress[6] => segment[0][9].WADDR6
wraddress[6] => segment[0][8].WADDR6
wraddress[6] => segment[0][7].WADDR6
wraddress[6] => segment[0][6].WADDR6
wraddress[6] => segment[0][5].WADDR6
wraddress[6] => segment[0][4].WADDR6
wraddress[6] => segment[0][3].WADDR6
wraddress[6] => segment[0][2].WADDR6
wraddress[6] => segment[0][1].WADDR6
wraddress[6] => segment[0][0].WADDR6
wraddress[7] => segment[0][15].WADDR7
wraddress[7] => segment[0][14].WADDR7
wraddress[7] => segment[0][13].WADDR7
wraddress[7] => segment[0][12].WADDR7
wraddress[7] => segment[0][11].WADDR7
wraddress[7] => segment[0][10].WADDR7
wraddress[7] => segment[0][9].WADDR7
wraddress[7] => segment[0][8].WADDR7
wraddress[7] => segment[0][7].WADDR7
wraddress[7] => segment[0][6].WADDR7
wraddress[7] => segment[0][5].WADDR7
wraddress[7] => segment[0][4].WADDR7
wraddress[7] => segment[0][3].WADDR7
wraddress[7] => segment[0][2].WADDR7
wraddress[7] => segment[0][1].WADDR7
wraddress[7] => segment[0][0].WADDR7
inclock => segment[0][15].CLK0
inclock => segment[0][14].CLK0
inclock => segment[0][13].CLK0
inclock => segment[0][12].CLK0
inclock => segment[0][11].CLK0
inclock => segment[0][10].CLK0
inclock => segment[0][9].CLK0
inclock => segment[0][8].CLK0
inclock => segment[0][7].CLK0
inclock => segment[0][6].CLK0
inclock => segment[0][5].CLK0
inclock => segment[0][4].CLK0
inclock => segment[0][3].CLK0
inclock => segment[0][2].CLK0
inclock => segment[0][1].CLK0
inclock => segment[0][0].CLK0
inclocken => ~NO_FANOUT~
rden => segment[0][15].RE
rden => segment[0][14].RE
rden => segment[0][13].RE
rden => segment[0][12].RE
rden => segment[0][11].RE
rden => segment[0][10].RE
rden => segment[0][9].RE
rden => segment[0][8].RE
rden => segment[0][7].RE
rden => segment[0][6].RE
rden => segment[0][5].RE
rden => segment[0][4].RE
rden => segment[0][3].RE
rden => segment[0][2].RE
rden => segment[0][1].RE
rden => segment[0][0].RE
rdaddress[0] => segment[0][15].RADDR
rdaddress[0] => segment[0][14].RADDR
rdaddress[0] => segment[0][13].RADDR
rdaddress[0] => segment[0][12].RADDR
rdaddress[0] => segment[0][11].RADDR
rdaddress[0] => segment[0][10].RADDR
rdaddress[0] => segment[0][9].RADDR
rdaddress[0] => segment[0][8].RADDR
rdaddress[0] => segment[0][7].RADDR
rdaddress[0] => segment[0][6].RADDR
rdaddress[0] => segment[0][5].RADDR
rdaddress[0] => segment[0][4].RADDR
rdaddress[0] => segment[0][3].RADDR
rdaddress[0] => segment[0][2].RADDR
rdaddress[0] => segment[0][1].RADDR
rdaddress[0] => segment[0][0].RADDR
rdaddress[1] => segment[0][15].RADDR1
rdaddress[1] => segment[0][14].RADDR1
rdaddress[1] => segment[0][13].RADDR1
rdaddress[1] => segment[0][12].RADDR1
rdaddress[1] => segment[0][11].RADDR1
rdaddress[1] => segment[0][10].RADDR1
rdaddress[1] => segment[0][9].RADDR1
rdaddress[1] => segment[0][8].RADDR1
rdaddress[1] => segment[0][7].RADDR1
rdaddress[1] => segment[0][6].RADDR1
rdaddress[1] => segment[0][5].RADDR1
rdaddress[1] => segment[0][4].RADDR1
rdaddress[1] => segment[0][3].RADDR1
rdaddress[1] => segment[0][2].RADDR1
rdaddress[1] => segment[0][1].RADDR1
rdaddress[1] => segment[0][0].RADDR1
rdaddress[2] => segment[0][15].RADDR2
rdaddress[2] => segment[0][14].RADDR2
rdaddress[2] => segment[0][13].RADDR2
rdaddress[2] => segment[0][12].RADDR2
rdaddress[2] => segment[0][11].RADDR2
rdaddress[2] => segment[0][10].RADDR2
rdaddress[2] => segment[0][9].RADDR2
rdaddress[2] => segment[0][8].RADDR2
rdaddress[2] => segment[0][7].RADDR2
rdaddress[2] => segment[0][6].RADDR2
rdaddress[2] => segment[0][5].RADDR2
rdaddress[2] => segment[0][4].RADDR2
rdaddress[2] => segment[0][3].RADDR2
rdaddress[2] => segment[0][2].RADDR2
rdaddress[2] => segment[0][1].RADDR2
rdaddress[2] => segment[0][0].RADDR2
rdaddress[3] => segment[0][15].RADDR3
rdaddress[3] => segment[0][14].RADDR3
rdaddress[3] => segment[0][13].RADDR3
rdaddress[3] => segment[0][12].RADDR3
rdaddress[3] => segment[0][11].RADDR3
rdaddress[3] => segment[0][10].RADDR3
rdaddress[3] => segment[0][9].RADDR3
rdaddress[3] => segment[0][8].RADDR3
rdaddress[3] => segment[0][7].RADDR3
rdaddress[3] => segment[0][6].RADDR3
rdaddress[3] => segment[0][5].RADDR3
rdaddress[3] => segment[0][4].RADDR3
rdaddress[3] => segment[0][3].RADDR3
rdaddress[3] => segment[0][2].RADDR3
rdaddress[3] => segment[0][1].RADDR3
rdaddress[3] => segment[0][0].RADDR3
rdaddress[4] => segment[0][15].RADDR4
rdaddress[4] => segment[0][14].RADDR4
rdaddress[4] => segment[0][13].RADDR4
rdaddress[4] => segment[0][12].RADDR4
rdaddress[4] => segment[0][11].RADDR4
rdaddress[4] => segment[0][10].RADDR4
rdaddress[4] => segment[0][9].RADDR4
rdaddress[4] => segment[0][8].RADDR4
rdaddress[4] => segment[0][7].RADDR4
rdaddress[4] => segment[0][6].RADDR4
rdaddress[4] => segment[0][5].RADDR4
rdaddress[4] => segment[0][4].RADDR4
rdaddress[4] => segment[0][3].RADDR4
rdaddress[4] => segment[0][2].RADDR4
rdaddress[4] => segment[0][1].RADDR4
rdaddress[4] => segment[0][0].RADDR4
rdaddress[5] => segment[0][15].RADDR5
rdaddress[5] => segment[0][14].RADDR5
rdaddress[5] => segment[0][13].RADDR5
rdaddress[5] => segment[0][12].RADDR5
rdaddress[5] => segment[0][11].RADDR5
rdaddress[5] => segment[0][10].RADDR5
rdaddress[5] => segment[0][9].RADDR5
rdaddress[5] => segment[0][8].RADDR5
rdaddress[5] => segment[0][7].RADDR5
rdaddress[5] => segment[0][6].RADDR5
rdaddress[5] => segment[0][5].RADDR5
rdaddress[5] => segment[0][4].RADDR5
rdaddress[5] => segment[0][3].RADDR5
rdaddress[5] => segment[0][2].RADDR5
rdaddress[5] => segment[0][1].RADDR5
rdaddress[5] => segment[0][0].RADDR5
rdaddress[6] => segment[0][15].RADDR6
rdaddress[6] => segment[0][14].RADDR6
rdaddress[6] => segment[0][13].RADDR6
rdaddress[6] => segment[0][12].RADDR6
rdaddress[6] => segment[0][11].RADDR6
rdaddress[6] => segment[0][10].RADDR6
rdaddress[6] => segment[0][9].RADDR6
rdaddress[6] => segment[0][8].RADDR6
rdaddress[6] => segment[0][7].RADDR6
rdaddress[6] => segment[0][6].RADDR6
rdaddress[6] => segment[0][5].RADDR6
rdaddress[6] => segment[0][4].RADDR6
rdaddress[6] => segment[0][3].RADDR6
rdaddress[6] => segment[0][2].RADDR6
rdaddress[6] => segment[0][1].RADDR6
rdaddress[6] => segment[0][0].RADDR6
rdaddress[7] => segment[0][15].RADDR7
rdaddress[7] => segment[0][14].RADDR7
rdaddress[7] => segment[0][13].RADDR7
rdaddress[7] => segment[0][12].RADDR7
rdaddress[7] => segment[0][11].RADDR7
rdaddress[7] => segment[0][10].RADDR7
rdaddress[7] => segment[0][9].RADDR7
rdaddress[7] => segment[0][8].RADDR7
rdaddress[7] => segment[0][7].RADDR7
rdaddress[7] => segment[0][6].RADDR7
rdaddress[7] => segment[0][5].RADDR7
rdaddress[7] => segment[0][4].RADDR7
rdaddress[7] => segment[0][3].RADDR7
rdaddress[7] => segment[0][2].RADDR7
rdaddress[7] => segment[0][1].RADDR7
rdaddress[7] => segment[0][0].RADDR7
outclock => segment[0][15].CLK1
outclock => segment[0][14].CLK1
outclock => segment[0][13].CLK1
outclock => segment[0][12].CLK1
outclock => segment[0][11].CLK1
outclock => segment[0][10].CLK1
outclock => segment[0][9].CLK1
outclock => segment[0][8].CLK1
outclock => segment[0][7].CLK1
outclock => segment[0][6].CLK1
outclock => segment[0][5].CLK1
outclock => segment[0][4].CLK1
outclock => segment[0][3].CLK1
outclock => segment[0][2].CLK1
outclock => segment[0][1].CLK1
outclock => segment[0][0].CLK1
outclocken => ~NO_FANOUT~
aclr => ~NO_FANOUT~
byteena[0] => ~NO_FANOUT~
wraddressstall => ~NO_FANOUT~
rdaddressstall => ~NO_FANOUT~
q[0] <= segment[0][0].DATAOUT
q[1] <= segment[0][1].DATAOUT
q[2] <= segment[0][2].DATAOUT
q[3] <= segment[0][3].DATAOUT
q[4] <= segment[0][4].DATAOUT
q[5] <= segment[0][5].DATAOUT
q[6] <= segment[0][6].DATAOUT
q[7] <= segment[0][7].DATAOUT
q[8] <= segment[0][8].DATAOUT
q[9] <= segment[0][9].DATAOUT
q[10] <= segment[0][10].DATAOUT
q[11] <= segment[0][11].DATAOUT
q[12] <= segment[0][12].DATAOUT
q[13] <= segment[0][13].DATAOUT
q[14] <= segment[0][14].DATAOUT
q[15] <= segment[0][15].DATAOUT


|SP2_ACEX|acceler:ACC
CLK42 => lpm_ram_dp:RAM.wrclock
CLK42 => lpm_ram_dp:RAM.rdclock
CLK42 => MDO[15]~reg.CLK
CLK42 => MDO[14]~reg.CLK
CLK42 => MDO[13]~reg.CLK
CLK42 => MDO[12]~reg.CLK
CLK42 => MDO[11]~reg.CLK
CLK42 => MDO[10]~reg.CLK
CLK42 => MDO[9]~reg.CLK
CLK42 => MDO[8]~reg.CLK
CLK42 => MDO[7]~reg.CLK
CLK42 => MDO[6]~reg.CLK
CLK42 => MDO[5]~reg.CLK
CLK42 => MDO[4]~reg.CLK
CLK42 => MDO[3]~reg.CLK
CLK42 => MDO[2]~reg.CLK
CLK42 => MDO[1]~reg.CLK
CLK42 => MDO[0]~reg.CLK
CLK42 => AA[15].CLK
CLK42 => AA[14].CLK
CLK42 => AA[13].CLK
CLK42 => AA[12].CLK
CLK42 => AA[11].CLK
CLK42 => AA[10].CLK
CLK42 => AA[9].CLK
CLK42 => AA[8].CLK
CLK42 => AA[7].CLK
CLK42 => AA[6].CLK
CLK42 => AA[5].CLK
CLK42 => AA[4].CLK
CLK42 => AA[3].CLK
CLK42 => AA[2].CLK
CLK42 => AA[1].CLK
CLK42 => AA[0].CLK
CLK42 => AGR[7].CLK
CLK42 => AGR[6].CLK
CLK42 => AGR[5].CLK
CLK42 => AGR[4].CLK
CLK42 => AGR[3].CLK
CLK42 => AGR[2].CLK
CLK42 => AGR[1].CLK
CLK42 => AGR[0].CLK
CLK42 => ACC_CNT[7].CLK
CLK42 => ACC_CNT[6].CLK
CLK42 => ACC_CNT[5].CLK
CLK42 => ACC_CNT[4].CLK
CLK42 => ACC_CNT[3].CLK
CLK42 => ACC_CNT[2].CLK
CLK42 => ACC_CNT[1].CLK
CLK42 => ACC_CNT[0].CLK
CLK42 => ACC_END.CLK
CLK42 => XAGR[7].CLK
CLK42 => XAGR[6].CLK
CLK42 => XAGR[5].CLK
CLK42 => XAGR[4].CLK
CLK42 => XAGR[3].CLK
CLK42 => XAGR[2].CLK
CLK42 => XAGR[1].CLK
CLK42 => XAGR[0].CLK
CLK42 => AAGR[9].CLK
CLK42 => AAGR[8].CLK
CLK42 => AAGR[7].CLK
CLK42 => AAGR[6].CLK
CLK42 => AAGR[5].CLK
CLK42 => AAGR[4].CLK
CLK42 => AAGR[3].CLK
CLK42 => AAGR[2].CLK
CLK42 => AAGR[1].CLK
CLK42 => AAGR[0].CLK
CLK42 => XCNT[7].CLK
CLK42 => XCNT[6].CLK
CLK42 => XCNT[5].CLK
CLK42 => XCNT[4].CLK
CLK42 => XCNT[3].CLK
CLK42 => XCNT[2].CLK
CLK42 => XCNT[1].CLK
CLK42 => XCNT[0].CLK
CLK42 => MDOX[7].CLK
CLK42 => MDOX[6].CLK
CLK42 => MDOX[5].CLK
CLK42 => MDOX[4].CLK
CLK42 => MDOX[3].CLK
CLK42 => MDOX[2].CLK
CLK42 => MDOX[1].CLK
CLK42 => MDOX[0].CLK
CLK42 => MDOY[7].CLK
CLK42 => MDOY[6].CLK
CLK42 => MDOY[5].CLK
CLK42 => MDOY[4].CLK
CLK42 => MDOY[3].CLK
CLK42 => MDOY[2].CLK
CLK42 => MDOY[1].CLK
CLK42 => MDOY[0].CLK
CLK42 => GLISS_R.CLK
CLK42 => ACC_GO.CLK
CLK42 => ACC_GO_1.CLK
CLK42 => $00007.CLK
CLK42 => $00008.CLK
CLK42 => $00009.CLK
CLK42 => $00010.CLK
CLK42 => $00012.CLK
CLK42 => WR_C7.CLK
CLK42 => $00014.CLK
CLK42 => $00015.CLK
CLK42 => $00018.CLK
CLK42 => $00026.CLK
CLK42 => $00035.CLK
CLK42 => RAM_WR.CLK
CLK42 => $00038.CLK
/RESET => AGR[7].ACLR
/RESET => AGR[6].ACLR
/RESET => AGR[5].ACLR
/RESET => AGR[4].ACLR
/RESET => AGR[3].ACLR
/RESET => AGR[2].ACLR
/RESET => AGR[1].ACLR
/RESET => AGR[0].ACLR
/RESET => /M1M.ACLR
/RESET => ALT_ACC.ACLR
CT[1] => ACC_GO.ENA
RAS => ~NO_FANOUT~
CAS => MDO[15]~reg.ENA
CAS => MDO[14]~reg.ENA
CAS => MDO[13]~reg.ENA
CAS => MDO[12]~reg.ENA
CAS => MDO[11]~reg.ENA
CAS => MDO[10]~reg.ENA
CAS => MDO[9]~reg.ENA
CAS => MDO[8]~reg.ENA
CAS => MDO[7]~reg.ENA
CAS => MDO[6]~reg.ENA
CAS => MDO[5]~reg.ENA
CAS => MDO[4]~reg.ENA
CAS => MDO[3]~reg.ENA
CAS => MDO[2]~reg.ENA
CAS => MDO[1]~reg.ENA
CAS => MDO[0]~reg.ENA
CLK_Z80 => /M1M.CLK
CLK_Z80 => $00002.CLK
CLK_Z80 => $00006.CLK
CLK_Z80 => $00022.CLK
CLK_Z80 => $00025.CLK
CONTINUE <= ACC_END.DB_MAX_OUTPUT_PORT_TYPE
MC_END => $00032.DATAIN
MC_BEGIN => ~NO_FANOUT~
MC_WRITE => ~NO_FANOUT~
DI[0] => RGACC[0].DATAIN
DI[0] => ACC_MODE[0].DATAIN
DI[1] => RGACC[1].DATAIN
DI[1] => ACC_MODE[1].DATAIN
DI[2] => RGACC[2].DATAIN
DI[2] => ACC_MODE[2].DATAIN
DI[3] => RGACC[3].DATAIN
DI[3] => STATE_EI.DATAIN
DI[4] => RGACC[4].DATAIN
DI[5] => RGACC[5].DATAIN
DI[6] => RGACC[6].DATAIN
DI[7] => RGACC[7].DATAIN
AO[0] <= AA[0].DB_MAX_OUTPUT_PORT_TYPE
AO[1] <= AA[1].DB_MAX_OUTPUT_PORT_TYPE
AO[2] <= AA[2].DB_MAX_OUTPUT_PORT_TYPE
AO[3] <= AA[3].DB_MAX_OUTPUT_PORT_TYPE
AO[4] <= AA[4].DB_MAX_OUTPUT_PORT_TYPE
AO[5] <= AA[5].DB_MAX_OUTPUT_PORT_TYPE
AO[6] <= AA[6].DB_MAX_OUTPUT_PORT_TYPE
AO[7] <= AA[7].DB_MAX_OUTPUT_PORT_TYPE
AO[8] <= AA[8].DB_MAX_OUTPUT_PORT_TYPE
AO[9] <= AA[9].DB_MAX_OUTPUT_PORT_TYPE
AO[10] <= AA[10].DB_MAX_OUTPUT_PORT_TYPE
AO[11] <= AA[11].DB_MAX_OUTPUT_PORT_TYPE
AO[12] <= AA[12].DB_MAX_OUTPUT_PORT_TYPE
AO[13] <= AA[13].DB_MAX_OUTPUT_PORT_TYPE
AO[14] <= AA[14].DB_MAX_OUTPUT_PORT_TYPE
AO[15] <= AA[15].DB_MAX_OUTPUT_PORT_TYPE
DO[0] <= DO[0]~reg.DB_MAX_OUTPUT_PORT_TYPE
DO[1] <= DO[1]~reg.DB_MAX_OUTPUT_PORT_TYPE
DO[2] <= DO[2]~reg.DB_MAX_OUTPUT_PORT_TYPE
DO[3] <= DO[3]~reg.DB_MAX_OUTPUT_PORT_TYPE
DO[4] <= DO[4]~reg.DB_MAX_OUTPUT_PORT_TYPE
DO[5] <= DO[5]~reg.DB_MAX_OUTPUT_PORT_TYPE
DO[6] <= DO[6]~reg.DB_MAX_OUTPUT_PORT_TYPE
DO[7] <= DO[7]~reg.DB_MAX_OUTPUT_PORT_TYPE
/IO => IN_OUT_CMD.ACLR
/MR => PRF_CMD.CLK
/MR => ED_CMD.CLK
/MR => CB_CMD.CLK
/MR => ID_CMD.CLK
/MR => IN_OUT_CMD.CLK
/MR => RETI.CLK
/MR => RETN.CLK
/MR => RGACC[7].CLK
/MR => RGACC[6].CLK
/MR => RGACC[5].CLK
/MR => RGACC[4].CLK
/MR => RGACC[3].CLK
/MR => RGACC[2].CLK
/MR => RGACC[1].CLK
/MR => RGACC[0].CLK
/MR => FN_ACC[2].CLK
/MR => FN_ACC[1].CLK
/MR => FN_ACC[0].CLK
/MR => ACC_MODE[3].CLK
/MR => ACC_MODE[2].CLK
/MR => ACC_MODE[1].CLK
/MR => ACC_MODE[0].CLK
/MR => STATE_EI.CLK
/M1 => ACC_BLK.CLK
/M1 => ACC_END.PRESET
DCP[3] => ~NO_FANOUT~
MDI[8] => XMDH[0].DATAIN
MDI[9] => XMDH[1].DATAIN
MDI[10] => XMDH[2].DATAIN
MDI[11] => XMDH[3].DATAIN
MDI[12] => XMDH[4].DATAIN
MDI[13] => XMDH[5].DATAIN
MDI[14] => XMDH[6].DATAIN
MDI[15] => XMDH[7].DATAIN
MDO[0] <= MDO[0]~reg.DB_MAX_OUTPUT_PORT_TYPE
MDO[1] <= MDO[1]~reg.DB_MAX_OUTPUT_PORT_TYPE
MDO[2] <= MDO[2]~reg.DB_MAX_OUTPUT_PORT_TYPE
MDO[3] <= MDO[3]~reg.DB_MAX_OUTPUT_PORT_TYPE
MDO[4] <= MDO[4]~reg.DB_MAX_OUTPUT_PORT_TYPE
MDO[5] <= MDO[5]~reg.DB_MAX_OUTPUT_PORT_TYPE
MDO[6] <= MDO[6]~reg.DB_MAX_OUTPUT_PORT_TYPE
MDO[7] <= MDO[7]~reg.DB_MAX_OUTPUT_PORT_TYPE
MDO[8] <= MDO[8]~reg.DB_MAX_OUTPUT_PORT_TYPE
MDO[9] <= MDO[9]~reg.DB_MAX_OUTPUT_PORT_TYPE
MDO[10] <= MDO[10]~reg.DB_MAX_OUTPUT_PORT_TYPE
MDO[11] <= MDO[11]~reg.DB_MAX_OUTPUT_PORT_TYPE
MDO[12] <= MDO[12]~reg.DB_MAX_OUTPUT_PORT_TYPE
MDO[13] <= MDO[13]~reg.DB_MAX_OUTPUT_PORT_TYPE
MDO[14] <= MDO[14]~reg.DB_MAX_OUTPUT_PORT_TYPE
MDO[15] <= MDO[15]~reg.DB_MAX_OUTPUT_PORT_TYPE
MD[0] <= MD[0]~buf.DB_MAX_OUTPUT_PORT_TYPE
MD[1] <= MD[1]~buf.DB_MAX_OUTPUT_PORT_TYPE
MD[2] <= MD[2]~buf.DB_MAX_OUTPUT_PORT_TYPE
MD[3] <= MD[3]~buf.DB_MAX_OUTPUT_PORT_TYPE
MD[4] <= MD[4]~buf.DB_MAX_OUTPUT_PORT_TYPE
MD[5] <= MD[5]~buf.DB_MAX_OUTPUT_PORT_TYPE
MD[6] <= MD[6]~buf.DB_MAX_OUTPUT_PORT_TYPE
MD[7] <= MD[7]~buf.DB_MAX_OUTPUT_PORT_TYPE
G_LINE[0] <= AGR[0].DB_MAX_OUTPUT_PORT_TYPE
G_LINE[1] <= AGR[1].DB_MAX_OUTPUT_PORT_TYPE
G_LINE[2] <= AGR[2].DB_MAX_OUTPUT_PORT_TYPE
G_LINE[3] <= AGR[3].DB_MAX_OUTPUT_PORT_TYPE
G_LINE[4] <= AGR[4].DB_MAX_OUTPUT_PORT_TYPE
G_LINE[5] <= AGR[5].DB_MAX_OUTPUT_PORT_TYPE
G_LINE[6] <= AGR[6].DB_MAX_OUTPUT_PORT_TYPE
G_LINE[7] <= AGR[7].DB_MAX_OUTPUT_PORT_TYPE
GLISSER <= GLISS_R.DB_MAX_OUTPUT_PORT_TYPE
ACC_ON <= ACC_DIR[0]~buf.DB_MAX_OUTPUT_PORT_TYPE
DOUBLE_CAS <= $00021.DB_MAX_OUTPUT_PORT_TYPE
ACC_DIR[0] <= ACC_DIR[0]~buf.DB_MAX_OUTPUT_PORT_TYPE
ACC_DIR[1] <= ACC_DIR[1]~buf.DB_MAX_OUTPUT_PORT_TYPE
ACC_DIR[2] <= ACC_DIR[2]~buf.DB_MAX_OUTPUT_PORT_TYPE
ACC_DIR[3] <= ACC_DIR[3]~buf.DB_MAX_OUTPUT_PORT_TYPE
ACC_DIR[4] <= ACC_DIR[4]~buf.DB_MAX_OUTPUT_PORT_TYPE
ACC_DIR[5] <= ACC_DIR[5]~buf.DB_MAX_OUTPUT_PORT_TYPE
ACC_DIR[6] <= ACC_DIR[6]~buf.DB_MAX_OUTPUT_PORT_TYPE
ACC_DIR[7] <= ACC_DIR[7]~buf.DB_MAX_OUTPUT_PORT_TYPE


|SP2_ACEX|acceler:ACC|lpm_ram_dp:RAM
data[0] => altdpram:sram.data[0]
data[1] => altdpram:sram.data[1]
data[2] => altdpram:sram.data[2]
data[3] => altdpram:sram.data[3]
data[4] => altdpram:sram.data[4]
data[5] => altdpram:sram.data[5]
data[6] => altdpram:sram.data[6]
data[7] => altdpram:sram.data[7]
data[8] => altdpram:sram.data[8]
data[9] => altdpram:sram.data[9]
data[10] => altdpram:sram.data[10]
data[11] => altdpram:sram.data[11]
data[12] => altdpram:sram.data[12]
data[13] => altdpram:sram.data[13]
data[14] => altdpram:sram.data[14]
data[15] => altdpram:sram.data[15]
rdaddress[0] => altdpram:sram.rdaddress[0]
rdaddress[1] => altdpram:sram.rdaddress[1]
rdaddress[2] => altdpram:sram.rdaddress[2]
rdaddress[3] => altdpram:sram.rdaddress[3]
rdaddress[4] => altdpram:sram.rdaddress[4]
rdaddress[5] => altdpram:sram.rdaddress[5]
rdaddress[6] => altdpram:sram.rdaddress[6]
rdaddress[7] => altdpram:sram.rdaddress[7]
wraddress[0] => altdpram:sram.wraddress[0]
wraddress[1] => altdpram:sram.wraddress[1]
wraddress[2] => altdpram:sram.wraddress[2]
wraddress[3] => altdpram:sram.wraddress[3]
wraddress[4] => altdpram:sram.wraddress[4]
wraddress[5] => altdpram:sram.wraddress[5]
wraddress[6] => altdpram:sram.wraddress[6]
wraddress[7] => altdpram:sram.wraddress[7]
rdclock => altdpram:sram.outclock
rdclken => ~NO_FANOUT~
wrclock => altdpram:sram.inclock
wrclken => ~NO_FANOUT~
rden => ~NO_FANOUT~
wren => altdpram:sram.wren
q[0] <= altdpram:sram.q[0]
q[1] <= altdpram:sram.q[1]
q[2] <= altdpram:sram.q[2]
q[3] <= altdpram:sram.q[3]
q[4] <= altdpram:sram.q[4]
q[5] <= altdpram:sram.q[5]
q[6] <= altdpram:sram.q[6]
q[7] <= altdpram:sram.q[7]
q[8] <= altdpram:sram.q[8]
q[9] <= altdpram:sram.q[9]
q[10] <= altdpram:sram.q[10]
q[11] <= altdpram:sram.q[11]
q[12] <= altdpram:sram.q[12]
q[13] <= altdpram:sram.q[13]
q[14] <= altdpram:sram.q[14]
q[15] <= altdpram:sram.q[15]


|SP2_ACEX|acceler:ACC|lpm_ram_dp:RAM|altdpram:sram
wren => segment[0][15].WE
wren => segment[0][14].WE
wren => segment[0][13].WE
wren => segment[0][12].WE
wren => segment[0][11].WE
wren => segment[0][10].WE
wren => segment[0][9].WE
wren => segment[0][8].WE
wren => segment[0][7].WE
wren => segment[0][6].WE
wren => segment[0][5].WE
wren => segment[0][4].WE
wren => segment[0][3].WE
wren => segment[0][2].WE
wren => segment[0][1].WE
wren => segment[0][0].WE
data[0] => segment[0][0].DATAIN
data[1] => segment[0][1].DATAIN
data[2] => segment[0][2].DATAIN
data[3] => segment[0][3].DATAIN
data[4] => segment[0][4].DATAIN
data[5] => segment[0][5].DATAIN
data[6] => segment[0][6].DATAIN
data[7] => segment[0][7].DATAIN
data[8] => segment[0][8].DATAIN
data[9] => segment[0][9].DATAIN
data[10] => segment[0][10].DATAIN
data[11] => segment[0][11].DATAIN
data[12] => segment[0][12].DATAIN
data[13] => segment[0][13].DATAIN
data[14] => segment[0][14].DATAIN
data[15] => segment[0][15].DATAIN
wraddress[0] => segment[0][15].WADDR
wraddress[0] => segment[0][14].WADDR
wraddress[0] => segment[0][13].WADDR
wraddress[0] => segment[0][12].WADDR
wraddress[0] => segment[0][11].WADDR
wraddress[0] => segment[0][10].WADDR
wraddress[0] => segment[0][9].WADDR
wraddress[0] => segment[0][8].WADDR
wraddress[0] => segment[0][7].WADDR
wraddress[0] => segment[0][6].WADDR
wraddress[0] => segment[0][5].WADDR
wraddress[0] => segment[0][4].WADDR
wraddress[0] => segment[0][3].WADDR
wraddress[0] => segment[0][2].WADDR
wraddress[0] => segment[0][1].WADDR
wraddress[0] => segment[0][0].WADDR
wraddress[1] => segment[0][15].WADDR1
wraddress[1] => segment[0][14].WADDR1
wraddress[1] => segment[0][13].WADDR1
wraddress[1] => segment[0][12].WADDR1
wraddress[1] => segment[0][11].WADDR1
wraddress[1] => segment[0][10].WADDR1
wraddress[1] => segment[0][9].WADDR1
wraddress[1] => segment[0][8].WADDR1
wraddress[1] => segment[0][7].WADDR1
wraddress[1] => segment[0][6].WADDR1
wraddress[1] => segment[0][5].WADDR1
wraddress[1] => segment[0][4].WADDR1
wraddress[1] => segment[0][3].WADDR1
wraddress[1] => segment[0][2].WADDR1
wraddress[1] => segment[0][1].WADDR1
wraddress[1] => segment[0][0].WADDR1
wraddress[2] => segment[0][15].WADDR2
wraddress[2] => segment[0][14].WADDR2
wraddress[2] => segment[0][13].WADDR2
wraddress[2] => segment[0][12].WADDR2
wraddress[2] => segment[0][11].WADDR2
wraddress[2] => segment[0][10].WADDR2
wraddress[2] => segment[0][9].WADDR2
wraddress[2] => segment[0][8].WADDR2
wraddress[2] => segment[0][7].WADDR2
wraddress[2] => segment[0][6].WADDR2
wraddress[2] => segment[0][5].WADDR2
wraddress[2] => segment[0][4].WADDR2
wraddress[2] => segment[0][3].WADDR2
wraddress[2] => segment[0][2].WADDR2
wraddress[2] => segment[0][1].WADDR2
wraddress[2] => segment[0][0].WADDR2
wraddress[3] => segment[0][15].WADDR3
wraddress[3] => segment[0][14].WADDR3
wraddress[3] => segment[0][13].WADDR3
wraddress[3] => segment[0][12].WADDR3
wraddress[3] => segment[0][11].WADDR3
wraddress[3] => segment[0][10].WADDR3
wraddress[3] => segment[0][9].WADDR3
wraddress[3] => segment[0][8].WADDR3
wraddress[3] => segment[0][7].WADDR3
wraddress[3] => segment[0][6].WADDR3
wraddress[3] => segment[0][5].WADDR3
wraddress[3] => segment[0][4].WADDR3
wraddress[3] => segment[0][3].WADDR3
wraddress[3] => segment[0][2].WADDR3
wraddress[3] => segment[0][1].WADDR3
wraddress[3] => segment[0][0].WADDR3
wraddress[4] => segment[0][15].WADDR4
wraddress[4] => segment[0][14].WADDR4
wraddress[4] => segment[0][13].WADDR4
wraddress[4] => segment[0][12].WADDR4
wraddress[4] => segment[0][11].WADDR4
wraddress[4] => segment[0][10].WADDR4
wraddress[4] => segment[0][9].WADDR4
wraddress[4] => segment[0][8].WADDR4
wraddress[4] => segment[0][7].WADDR4
wraddress[4] => segment[0][6].WADDR4
wraddress[4] => segment[0][5].WADDR4
wraddress[4] => segment[0][4].WADDR4
wraddress[4] => segment[0][3].WADDR4
wraddress[4] => segment[0][2].WADDR4
wraddress[4] => segment[0][1].WADDR4
wraddress[4] => segment[0][0].WADDR4
wraddress[5] => segment[0][15].WADDR5
wraddress[5] => segment[0][14].WADDR5
wraddress[5] => segment[0][13].WADDR5
wraddress[5] => segment[0][12].WADDR5
wraddress[5] => segment[0][11].WADDR5
wraddress[5] => segment[0][10].WADDR5
wraddress[5] => segment[0][9].WADDR5
wraddress[5] => segment[0][8].WADDR5
wraddress[5] => segment[0][7].WADDR5
wraddress[5] => segment[0][6].WADDR5
wraddress[5] => segment[0][5].WADDR5
wraddress[5] => segment[0][4].WADDR5
wraddress[5] => segment[0][3].WADDR5
wraddress[5] => segment[0][2].WADDR5
wraddress[5] => segment[0][1].WADDR5
wraddress[5] => segment[0][0].WADDR5
wraddress[6] => segment[0][15].WADDR6
wraddress[6] => segment[0][14].WADDR6
wraddress[6] => segment[0][13].WADDR6
wraddress[6] => segment[0][12].WADDR6
wraddress[6] => segment[0][11].WADDR6
wraddress[6] => segment[0][10].WADDR6
wraddress[6] => segment[0][9].WADDR6
wraddress[6] => segment[0][8].WADDR6
wraddress[6] => segment[0][7].WADDR6
wraddress[6] => segment[0][6].WADDR6
wraddress[6] => segment[0][5].WADDR6
wraddress[6] => segment[0][4].WADDR6
wraddress[6] => segment[0][3].WADDR6
wraddress[6] => segment[0][2].WADDR6
wraddress[6] => segment[0][1].WADDR6
wraddress[6] => segment[0][0].WADDR6
wraddress[7] => segment[0][15].WADDR7
wraddress[7] => segment[0][14].WADDR7
wraddress[7] => segment[0][13].WADDR7
wraddress[7] => segment[0][12].WADDR7
wraddress[7] => segment[0][11].WADDR7
wraddress[7] => segment[0][10].WADDR7
wraddress[7] => segment[0][9].WADDR7
wraddress[7] => segment[0][8].WADDR7
wraddress[7] => segment[0][7].WADDR7
wraddress[7] => segment[0][6].WADDR7
wraddress[7] => segment[0][5].WADDR7
wraddress[7] => segment[0][4].WADDR7
wraddress[7] => segment[0][3].WADDR7
wraddress[7] => segment[0][2].WADDR7
wraddress[7] => segment[0][1].WADDR7
wraddress[7] => segment[0][0].WADDR7
inclock => segment[0][15].CLK0
inclock => segment[0][14].CLK0
inclock => segment[0][13].CLK0
inclock => segment[0][12].CLK0
inclock => segment[0][11].CLK0
inclock => segment[0][10].CLK0
inclock => segment[0][9].CLK0
inclock => segment[0][8].CLK0
inclock => segment[0][7].CLK0
inclock => segment[0][6].CLK0
inclock => segment[0][5].CLK0
inclock => segment[0][4].CLK0
inclock => segment[0][3].CLK0
inclock => segment[0][2].CLK0
inclock => segment[0][1].CLK0
inclock => segment[0][0].CLK0
inclocken => ~NO_FANOUT~
rden => segment[0][15].RE
rden => segment[0][14].RE
rden => segment[0][13].RE
rden => segment[0][12].RE
rden => segment[0][11].RE
rden => segment[0][10].RE
rden => segment[0][9].RE
rden => segment[0][8].RE
rden => segment[0][7].RE
rden => segment[0][6].RE
rden => segment[0][5].RE
rden => segment[0][4].RE
rden => segment[0][3].RE
rden => segment[0][2].RE
rden => segment[0][1].RE
rden => segment[0][0].RE
rdaddress[0] => segment[0][15].RADDR
rdaddress[0] => segment[0][14].RADDR
rdaddress[0] => segment[0][13].RADDR
rdaddress[0] => segment[0][12].RADDR
rdaddress[0] => segment[0][11].RADDR
rdaddress[0] => segment[0][10].RADDR
rdaddress[0] => segment[0][9].RADDR
rdaddress[0] => segment[0][8].RADDR
rdaddress[0] => segment[0][7].RADDR
rdaddress[0] => segment[0][6].RADDR
rdaddress[0] => segment[0][5].RADDR
rdaddress[0] => segment[0][4].RADDR
rdaddress[0] => segment[0][3].RADDR
rdaddress[0] => segment[0][2].RADDR
rdaddress[0] => segment[0][1].RADDR
rdaddress[0] => segment[0][0].RADDR
rdaddress[1] => segment[0][15].RADDR1
rdaddress[1] => segment[0][14].RADDR1
rdaddress[1] => segment[0][13].RADDR1
rdaddress[1] => segment[0][12].RADDR1
rdaddress[1] => segment[0][11].RADDR1
rdaddress[1] => segment[0][10].RADDR1
rdaddress[1] => segment[0][9].RADDR1
rdaddress[1] => segment[0][8].RADDR1
rdaddress[1] => segment[0][7].RADDR1
rdaddress[1] => segment[0][6].RADDR1
rdaddress[1] => segment[0][5].RADDR1
rdaddress[1] => segment[0][4].RADDR1
rdaddress[1] => segment[0][3].RADDR1
rdaddress[1] => segment[0][2].RADDR1
rdaddress[1] => segment[0][1].RADDR1
rdaddress[1] => segment[0][0].RADDR1
rdaddress[2] => segment[0][15].RADDR2
rdaddress[2] => segment[0][14].RADDR2
rdaddress[2] => segment[0][13].RADDR2
rdaddress[2] => segment[0][12].RADDR2
rdaddress[2] => segment[0][11].RADDR2
rdaddress[2] => segment[0][10].RADDR2
rdaddress[2] => segment[0][9].RADDR2
rdaddress[2] => segment[0][8].RADDR2
rdaddress[2] => segment[0][7].RADDR2
rdaddress[2] => segment[0][6].RADDR2
rdaddress[2] => segment[0][5].RADDR2
rdaddress[2] => segment[0][4].RADDR2
rdaddress[2] => segment[0][3].RADDR2
rdaddress[2] => segment[0][2].RADDR2
rdaddress[2] => segment[0][1].RADDR2
rdaddress[2] => segment[0][0].RADDR2
rdaddress[3] => segment[0][15].RADDR3
rdaddress[3] => segment[0][14].RADDR3
rdaddress[3] => segment[0][13].RADDR3
rdaddress[3] => segment[0][12].RADDR3
rdaddress[3] => segment[0][11].RADDR3
rdaddress[3] => segment[0][10].RADDR3
rdaddress[3] => segment[0][9].RADDR3
rdaddress[3] => segment[0][8].RADDR3
rdaddress[3] => segment[0][7].RADDR3
rdaddress[3] => segment[0][6].RADDR3
rdaddress[3] => segment[0][5].RADDR3
rdaddress[3] => segment[0][4].RADDR3
rdaddress[3] => segment[0][3].RADDR3
rdaddress[3] => segment[0][2].RADDR3
rdaddress[3] => segment[0][1].RADDR3
rdaddress[3] => segment[0][0].RADDR3
rdaddress[4] => segment[0][15].RADDR4
rdaddress[4] => segment[0][14].RADDR4
rdaddress[4] => segment[0][13].RADDR4
rdaddress[4] => segment[0][12].RADDR4
rdaddress[4] => segment[0][11].RADDR4
rdaddress[4] => segment[0][10].RADDR4
rdaddress[4] => segment[0][9].RADDR4
rdaddress[4] => segment[0][8].RADDR4
rdaddress[4] => segment[0][7].RADDR4
rdaddress[4] => segment[0][6].RADDR4
rdaddress[4] => segment[0][5].RADDR4
rdaddress[4] => segment[0][4].RADDR4
rdaddress[4] => segment[0][3].RADDR4
rdaddress[4] => segment[0][2].RADDR4
rdaddress[4] => segment[0][1].RADDR4
rdaddress[4] => segment[0][0].RADDR4
rdaddress[5] => segment[0][15].RADDR5
rdaddress[5] => segment[0][14].RADDR5
rdaddress[5] => segment[0][13].RADDR5
rdaddress[5] => segment[0][12].RADDR5
rdaddress[5] => segment[0][11].RADDR5
rdaddress[5] => segment[0][10].RADDR5
rdaddress[5] => segment[0][9].RADDR5
rdaddress[5] => segment[0][8].RADDR5
rdaddress[5] => segment[0][7].RADDR5
rdaddress[5] => segment[0][6].RADDR5
rdaddress[5] => segment[0][5].RADDR5
rdaddress[5] => segment[0][4].RADDR5
rdaddress[5] => segment[0][3].RADDR5
rdaddress[5] => segment[0][2].RADDR5
rdaddress[5] => segment[0][1].RADDR5
rdaddress[5] => segment[0][0].RADDR5
rdaddress[6] => segment[0][15].RADDR6
rdaddress[6] => segment[0][14].RADDR6
rdaddress[6] => segment[0][13].RADDR6
rdaddress[6] => segment[0][12].RADDR6
rdaddress[6] => segment[0][11].RADDR6
rdaddress[6] => segment[0][10].RADDR6
rdaddress[6] => segment[0][9].RADDR6
rdaddress[6] => segment[0][8].RADDR6
rdaddress[6] => segment[0][7].RADDR6
rdaddress[6] => segment[0][6].RADDR6
rdaddress[6] => segment[0][5].RADDR6
rdaddress[6] => segment[0][4].RADDR6
rdaddress[6] => segment[0][3].RADDR6
rdaddress[6] => segment[0][2].RADDR6
rdaddress[6] => segment[0][1].RADDR6
rdaddress[6] => segment[0][0].RADDR6
rdaddress[7] => segment[0][15].RADDR7
rdaddress[7] => segment[0][14].RADDR7
rdaddress[7] => segment[0][13].RADDR7
rdaddress[7] => segment[0][12].RADDR7
rdaddress[7] => segment[0][11].RADDR7
rdaddress[7] => segment[0][10].RADDR7
rdaddress[7] => segment[0][9].RADDR7
rdaddress[7] => segment[0][8].RADDR7
rdaddress[7] => segment[0][7].RADDR7
rdaddress[7] => segment[0][6].RADDR7
rdaddress[7] => segment[0][5].RADDR7
rdaddress[7] => segment[0][4].RADDR7
rdaddress[7] => segment[0][3].RADDR7
rdaddress[7] => segment[0][2].RADDR7
rdaddress[7] => segment[0][1].RADDR7
rdaddress[7] => segment[0][0].RADDR7
outclock => segment[0][15].CLK1
outclock => segment[0][14].CLK1
outclock => segment[0][13].CLK1
outclock => segment[0][12].CLK1
outclock => segment[0][11].CLK1
outclock => segment[0][10].CLK1
outclock => segment[0][9].CLK1
outclock => segment[0][8].CLK1
outclock => segment[0][7].CLK1
outclock => segment[0][6].CLK1
outclock => segment[0][5].CLK1
outclock => segment[0][4].CLK1
outclock => segment[0][3].CLK1
outclock => segment[0][2].CLK1
outclock => segment[0][1].CLK1
outclock => segment[0][0].CLK1
outclocken => ~NO_FANOUT~
aclr => ~NO_FANOUT~
byteena[0] => ~NO_FANOUT~
wraddressstall => ~NO_FANOUT~
rdaddressstall => ~NO_FANOUT~
q[0] <= segment[0][0].DATAOUT
q[1] <= segment[0][1].DATAOUT
q[2] <= segment[0][2].DATAOUT
q[3] <= segment[0][3].DATAOUT
q[4] <= segment[0][4].DATAOUT
q[5] <= segment[0][5].DATAOUT
q[6] <= segment[0][6].DATAOUT
q[7] <= segment[0][7].DATAOUT
q[8] <= segment[0][8].DATAOUT
q[9] <= segment[0][9].DATAOUT
q[10] <= segment[0][10].DATAOUT
q[11] <= segment[0][11].DATAOUT
q[12] <= segment[0][12].DATAOUT
q[13] <= segment[0][13].DATAOUT
q[14] <= segment[0][14].DATAOUT
q[15] <= segment[0][15].DATAOUT


|SP2_ACEX|ay:AY3
/RESET => AY_SH[16].PRESET
/RESET => AY_SH[15].PRESET
/RESET => AY_SH[14].PRESET
/RESET => AY_SH[13].PRESET
/RESET => AY_SH[12].PRESET
/RESET => AY_SH[11].PRESET
/RESET => AY_SH[10].PRESET
/RESET => AY_SH[9].PRESET
/RESET => AY_SH[8].PRESET
/RESET => AY_SH[7].PRESET
/RESET => AY_SH[6].PRESET
/RESET => AY_SH[5].PRESET
/RESET => AY_SH[4].PRESET
/RESET => AY_SH[3].PRESET
/RESET => AY_SH[2].PRESET
/RESET => AY_SH[1].PRESET
/RESET => AY_SH[0].PRESET
/RESET => AY_CH_DIR[7].ACLR
/RESET => AY_CH_DIR[6].ACLR
/RESET => AY_CH_DIR[5].ACLR
/RESET => AY_CH_DIR[4].ACLR
/RESET => AY_CH_DIR[3].ACLR
/RESET => AY_CH_DIR[2].ACLR
/RESET => AY_CH_DIR[1].ACLR
/RESET => AY_CH_DIR[0].ACLR
CLK42 => lpm_ram_dq:$00004.inclock
CLK42 => lpm_ram_dq:$00004.outclock
CLK42 => BD[7].CLK
CLK42 => BD[6].CLK
CLK42 => BD[5].CLK
CLK42 => BD[4].CLK
CLK42 => BD[3].CLK
CLK42 => BD[2].CLK
CLK42 => BD[1].CLK
CLK42 => BD[0].CLK
CLK42 => BWR.CLK
CLK42 => AWR.CLK
CLK42 => AY_X_[5].CLK
CLK42 => AY_X_[4].CLK
CLK42 => AY_X_[3].CLK
CLK42 => AY_X_[2].CLK
CLK42 => AY_X_[1].CLK
CLK42 => AY_X_[0].CLK
CLK42 => AY_GF[3].CLK
CLK42 => AY_GF[2].CLK
CLK42 => AY_GF[1].CLK
CLK42 => AY_GF[0].CLK
CLK42 => AY_OUT[3].CLK
CLK42 => AY_OUT[2].CLK
CLK42 => AY_OUT[1].CLK
CLK42 => AY_SH[16].CLK
CLK42 => AY_SH[15].CLK
CLK42 => AY_SH[14].CLK
CLK42 => AY_SH[13].CLK
CLK42 => AY_SH[12].CLK
CLK42 => AY_SH[11].CLK
CLK42 => AY_SH[10].CLK
CLK42 => AY_SH[9].CLK
CLK42 => AY_SH[8].CLK
CLK42 => AY_SH[7].CLK
CLK42 => AY_SH[6].CLK
CLK42 => AY_SH[5].CLK
CLK42 => AY_SH[4].CLK
CLK42 => AY_SH[3].CLK
CLK42 => AY_SH[2].CLK
CLK42 => AY_SH[1].CLK
CLK42 => AY_SH[0].CLK
CLK42 => AY_AA[3].CLK
CLK42 => AY_AA[2].CLK
CLK42 => AY_AA[1].CLK
CLK42 => AY_AA[0].CLK
CLK42 => AY_CCC[8].CLK
CLK42 => AY_CCC[7].CLK
CLK42 => AY_CCC[6].CLK
CLK42 => AY_CCC[5].CLK
CLK42 => AY_CCC[4].CLK
CLK42 => AY_CCC[3].CLK
CLK42 => AY_CCC[2].CLK
CLK42 => AY_CCC[1].CLK
CLK42 => AY_CCC[0].CLK
CLK42 => AY_C.CLK
CLK42 => AY_CX.CLK
CLK42 => AY_CXX.CLK
CLK42 => AY_VA[3].CLK
CLK42 => AY_VA[2].CLK
CLK42 => AY_VA[1].CLK
CLK42 => AY_VA[0].CLK
CLK42 => AY_VAR.CLK
CLK42 => AY_VX.CLK
CLK42 => AY_DAT_WR.CLK
CLK42 => AY_DAT[7].CLK
CLK42 => AY_DAT[6].CLK
CLK42 => AY_DAT[5].CLK
CLK42 => AY_DAT[4].CLK
CLK42 => AY_DAT[3].CLK
CLK42 => AY_DAT[2].CLK
CLK42 => AY_DAT[1].CLK
CLK42 => AY_DAT[0].CLK
CLK42 => AY_DQ1[3].CLK
CLK42 => AY_DQ1[2].CLK
CLK42 => AY_DQ1[1].CLK
CLK42 => AY_DQ1[0].CLK
CLK42 => AY_DQ2[3].CLK
CLK42 => AY_DQ2[2].CLK
CLK42 => AY_DQ2[1].CLK
CLK42 => AY_DQ2[0].CLK
CLK42 => AY_DQ3[3].CLK
CLK42 => AY_DQ3[2].CLK
CLK42 => AY_DQ3[1].CLK
CLK42 => AY_DQ3[0].CLK
CLK42 => AY_DQX[3].CLK
CLK42 => AY_DQX[2].CLK
CLK42 => AY_DQX[1].CLK
CLK42 => AY_DQX[0].CLK
CLK42 => AY_CH_MIX.CLK
CLK42 => AY_AMP[3].CLK
CLK42 => AY_AMP[2].CLK
CLK42 => AY_AMP[1].CLK
CLK42 => AY_AMP[0].CLK
CLK42 => AY_DD[7].CLK
CLK42 => AY_DD[6].CLK
CLK42 => AY_DD[5].CLK
CLK42 => AY_DD[4].CLK
CLK42 => AY_DD[3].CLK
CLK42 => AY_DD[2].CLK
CLK42 => AY_DD[1].CLK
CLK42 => AY_DD[0].CLK
CLK42 => AY_CH_CS[8].CLK
CLK42 => AY_CH_CS[7].CLK
CLK42 => AY_CH_CS[6].CLK
CLK42 => AY_CH_CS[5].CLK
CLK42 => AY_CH_CS[4].CLK
CLK42 => AY_CH_CS[3].CLK
CLK42 => AY_CH_CS[2].CLK
CLK42 => AY_CH_CS[1].CLK
CLK42 => AY_CH_CS[0].CLK
CLK42 => AY_CH_LX[10].CLK
CLK42 => AY_CH_LX[9].CLK
CLK42 => AY_CH_LX[8].CLK
CLK42 => AY_CH_LX[7].CLK
CLK42 => AY_CH_LX[6].CLK
CLK42 => AY_CH_LX[5].CLK
CLK42 => AY_CH_LX[4].CLK
CLK42 => AY_CH_LX[3].CLK
CLK42 => AY_CH_LX[2].CLK
CLK42 => AY_CH_LX[1].CLK
CLK42 => AY_CH_LX[0].CLK
CLK42 => AY_CH_RX[10].CLK
CLK42 => AY_CH_RX[9].CLK
CLK42 => AY_CH_RX[8].CLK
CLK42 => AY_CH_RX[7].CLK
CLK42 => AY_CH_RX[6].CLK
CLK42 => AY_CH_RX[5].CLK
CLK42 => AY_CH_RX[4].CLK
CLK42 => AY_CH_RX[3].CLK
CLK42 => AY_CH_RX[2].CLK
CLK42 => AY_CH_RX[1].CLK
CLK42 => AY_CH_RX[0].CLK
CLK42 => AY_F_R1.CLK
CLK42 => $00006.CLK
CLK42 => $00007.CLK
CLK42 => $00008.CLK
CLK42 => $00009.CLK
CLK42 => $00012.CLK
CLK42 => $00013.CLK
CLK42 => $00014.CLK
CLK42 => $00015.CLK
CLK42 => $00016.CLK
CLK42 => $00017.CLK
CLK42 => $00018.CLK
CLK42 => AY_OUTS[1].CLK
CLK42 => AY_OUTS[2].CLK
CLK42 => AY_OUTS[3].CLK
CLK42 => AY_OUTSX.CLK
CLK42 => $00026.CLK
CLK42 => AY_SH_Q.CLK
CLK42 => $00031.CLK
CLK42 => $00032.CLK
CLK42 => $00033.CLK
CLK42 => AY_BBLK.CLK
CLK42 => AY_ABLK.CLK
CLK42 => AY_BINV.CLK
CLK42 => AY_OUTS1X.CLK
CLK42 => AY_OUTS2X.CLK
CLK42 => AY_OUTS3X.CLK
CLK42 => AY_OUTS1Y.CLK
CLK42 => AY_OUTS3Y.CLK
CLK42 => $00042.CLK
CLK42 => $00047.CLK
CLK42 => $00048.CLK
CLK42 => $00049.CLK
CLK42 => $00050.CLK
CLK42 => $00051.CLK
AY_T[0] => AY_CCC[0].DATAIN
AY_T[1] => AY_CCC[1].DATAIN
AY_T[2] => AY_CCC[2].DATAIN
AY_T[3] => AY_CCC[3].DATAIN
AY_T[4] => AY_CCC[4].DATAIN
AY_T[5] => AY_CCC[5].DATAIN
AY_T[6] => AY_CCC[6].DATAIN
AY_T[7] => AY_CCC[7].DATAIN
AY_T[8] => AY_CCC[8].DATAIN
AY_D_WR => BWR.DATAIN
AY_D_WR => AY_CH_DIR[7].CLK
AY_D_WR => AY_CH_DIR[6].CLK
AY_D_WR => AY_CH_DIR[5].CLK
AY_D_WR => AY_CH_DIR[4].CLK
AY_D_WR => AY_CH_DIR[3].CLK
AY_D_WR => AY_CH_DIR[2].CLK
AY_D_WR => AY_CH_DIR[1].CLK
AY_D_WR => AY_CH_DIR[0].CLK
AY_A_WR => AWR.DATAIN
AY_A_WR => AY_ADR[7].CLK
AY_A_WR => AY_ADR[6].CLK
AY_A_WR => AY_ADR[5].CLK
AY_A_WR => AY_ADR[4].CLK
AY_A_WR => AY_ADR[3].CLK
AY_A_WR => AY_ADR[2].CLK
AY_A_WR => AY_ADR[1].CLK
AY_A_WR => AY_ADR[0].CLK
AY_A_WR => AY_AAX[1].CLK
AY_A_WR => AY_AAX[0].CLK
D[0] => BD[0].DATAIN
D[0] => AY_ADR[0].DATAIN
D[0] => AY_CH_DIR[0].DATAIN
D[1] => BD[1].DATAIN
D[1] => AY_ADR[1].DATAIN
D[1] => AY_CH_DIR[1].DATAIN
D[2] => BD[2].DATAIN
D[2] => AY_ADR[2].DATAIN
D[2] => AY_CH_DIR[2].DATAIN
D[3] => BD[3].DATAIN
D[3] => AY_ADR[3].DATAIN
D[3] => AY_CH_DIR[3].DATAIN
D[4] => BD[4].DATAIN
D[4] => AY_ADR[4].DATAIN
D[4] => AY_CH_DIR[4].DATAIN
D[5] => BD[5].DATAIN
D[5] => AY_ADR[5].DATAIN
D[5] => AY_CH_DIR[5].DATAIN
D[6] => BD[6].DATAIN
D[6] => AY_ADR[6].DATAIN
D[6] => AY_CH_DIR[6].DATAIN
D[7] => BD[7].DATAIN
D[7] => AY_ADR[7].DATAIN
D[7] => AY_CH_DIR[7].DATAIN
DO[0] <= AY_DD[0].DB_MAX_OUTPUT_PORT_TYPE
DO[1] <= AY_DD[1].DB_MAX_OUTPUT_PORT_TYPE
DO[2] <= AY_DD[2].DB_MAX_OUTPUT_PORT_TYPE
DO[3] <= AY_DD[3].DB_MAX_OUTPUT_PORT_TYPE
DO[4] <= AY_DD[4].DB_MAX_OUTPUT_PORT_TYPE
DO[5] <= AY_DD[5].DB_MAX_OUTPUT_PORT_TYPE
DO[6] <= AY_DD[6].DB_MAX_OUTPUT_PORT_TYPE
DO[7] <= AY_DD[7].DB_MAX_OUTPUT_PORT_TYPE
AY_CH_A[0] <= AY_CH_A[0]~reg.DB_MAX_OUTPUT_PORT_TYPE
AY_CH_A[1] <= AY_CH_A[1]~reg.DB_MAX_OUTPUT_PORT_TYPE
AY_CH_A[2] <= AY_CH_A[2]~reg.DB_MAX_OUTPUT_PORT_TYPE
AY_CH_A[3] <= AY_CH_A[3]~reg.DB_MAX_OUTPUT_PORT_TYPE
AY_CH_B[0] <= AY_CH_B[0]~reg.DB_MAX_OUTPUT_PORT_TYPE
AY_CH_B[1] <= AY_CH_B[1]~reg.DB_MAX_OUTPUT_PORT_TYPE
AY_CH_B[2] <= AY_CH_B[2]~reg.DB_MAX_OUTPUT_PORT_TYPE
AY_CH_B[3] <= AY_CH_B[3]~reg.DB_MAX_OUTPUT_PORT_TYPE
AY_CH_C[0] <= AY_CH_C[0]~reg.DB_MAX_OUTPUT_PORT_TYPE
AY_CH_C[1] <= AY_CH_C[1]~reg.DB_MAX_OUTPUT_PORT_TYPE
AY_CH_C[2] <= AY_CH_C[2]~reg.DB_MAX_OUTPUT_PORT_TYPE
AY_CH_C[3] <= AY_CH_C[3]~reg.DB_MAX_OUTPUT_PORT_TYPE
AY_CH_L[0] <= AY_CH_LX[1].DB_MAX_OUTPUT_PORT_TYPE
AY_CH_L[1] <= AY_CH_LX[2].DB_MAX_OUTPUT_PORT_TYPE
AY_CH_L[2] <= AY_CH_LX[3].DB_MAX_OUTPUT_PORT_TYPE
AY_CH_L[3] <= AY_CH_LX[4].DB_MAX_OUTPUT_PORT_TYPE
AY_CH_L[4] <= AY_CH_LX[5].DB_MAX_OUTPUT_PORT_TYPE
AY_CH_L[5] <= AY_CH_LX[6].DB_MAX_OUTPUT_PORT_TYPE
AY_CH_L[6] <= AY_CH_LX[7].DB_MAX_OUTPUT_PORT_TYPE
AY_CH_L[7] <= AY_CH_LX[8].DB_MAX_OUTPUT_PORT_TYPE
AY_CH_L[8] <= AY_CH_LX[9].DB_MAX_OUTPUT_PORT_TYPE
AY_CH_L[9] <= AY_CH_LX[10].DB_MAX_OUTPUT_PORT_TYPE
AY_CH_R[0] <= AY_CH_RX[1].DB_MAX_OUTPUT_PORT_TYPE
AY_CH_R[1] <= AY_CH_RX[2].DB_MAX_OUTPUT_PORT_TYPE
AY_CH_R[2] <= AY_CH_RX[3].DB_MAX_OUTPUT_PORT_TYPE
AY_CH_R[3] <= AY_CH_RX[4].DB_MAX_OUTPUT_PORT_TYPE
AY_CH_R[4] <= AY_CH_RX[5].DB_MAX_OUTPUT_PORT_TYPE
AY_CH_R[5] <= AY_CH_RX[6].DB_MAX_OUTPUT_PORT_TYPE
AY_CH_R[6] <= AY_CH_RX[7].DB_MAX_OUTPUT_PORT_TYPE
AY_CH_R[7] <= AY_CH_RX[8].DB_MAX_OUTPUT_PORT_TYPE
AY_CH_R[8] <= AY_CH_RX[9].DB_MAX_OUTPUT_PORT_TYPE
AY_CH_R[9] <= AY_CH_RX[10].DB_MAX_OUTPUT_PORT_TYPE
AY_CH_VAL <= $00051.DB_MAX_OUTPUT_PORT_TYPE


|SP2_ACEX|ay:AY3|lpm_ram_dq:$00004
data[0] => altram:sram.data[0]
data[1] => altram:sram.data[1]
data[2] => altram:sram.data[2]
data[3] => altram:sram.data[3]
data[4] => altram:sram.data[4]
data[5] => altram:sram.data[5]
data[6] => altram:sram.data[6]
data[7] => altram:sram.data[7]
address[0] => altram:sram.address[0]
address[1] => altram:sram.address[1]
address[2] => altram:sram.address[2]
address[3] => altram:sram.address[3]
address[4] => altram:sram.address[4]
address[5] => altram:sram.address[5]
address[6] => altram:sram.address[6]
address[7] => altram:sram.address[7]
inclock => altram:sram.clocki
outclock => altram:sram.clocko
we => altram:sram.we
q[0] <= altram:sram.q[0]
q[1] <= altram:sram.q[1]
q[2] <= altram:sram.q[2]
q[3] <= altram:sram.q[3]
q[4] <= altram:sram.q[4]
q[5] <= altram:sram.q[5]
q[6] <= altram:sram.q[6]
q[7] <= altram:sram.q[7]


|SP2_ACEX|ay:AY3|lpm_ram_dq:$00004|altram:sram
we => segment[0][7].WE
we => segment[0][6].WE
we => segment[0][5].WE
we => segment[0][4].WE
we => segment[0][3].WE
we => segment[0][2].WE
we => segment[0][1].WE
we => segment[0][0].WE
data[0] => segment[0][0].DATAIN
data[1] => segment[0][1].DATAIN
data[2] => segment[0][2].DATAIN
data[3] => segment[0][3].DATAIN
data[4] => segment[0][4].DATAIN
data[5] => segment[0][5].DATAIN
data[6] => segment[0][6].DATAIN
data[7] => segment[0][7].DATAIN
address[0] => segment[0][7].WADDR
address[0] => segment[0][7].RADDR
address[0] => segment[0][6].WADDR
address[0] => segment[0][6].RADDR
address[0] => segment[0][5].WADDR
address[0] => segment[0][5].RADDR
address[0] => segment[0][4].WADDR
address[0] => segment[0][4].RADDR
address[0] => segment[0][3].WADDR
address[0] => segment[0][3].RADDR
address[0] => segment[0][2].WADDR
address[0] => segment[0][2].RADDR
address[0] => segment[0][1].WADDR
address[0] => segment[0][1].RADDR
address[0] => segment[0][0].WADDR
address[0] => segment[0][0].RADDR
address[1] => segment[0][7].WADDR1
address[1] => segment[0][7].RADDR1
address[1] => segment[0][6].WADDR1
address[1] => segment[0][6].RADDR1
address[1] => segment[0][5].WADDR1
address[1] => segment[0][5].RADDR1
address[1] => segment[0][4].WADDR1
address[1] => segment[0][4].RADDR1
address[1] => segment[0][3].WADDR1
address[1] => segment[0][3].RADDR1
address[1] => segment[0][2].WADDR1
address[1] => segment[0][2].RADDR1
address[1] => segment[0][1].WADDR1
address[1] => segment[0][1].RADDR1
address[1] => segment[0][0].WADDR1
address[1] => segment[0][0].RADDR1
address[2] => segment[0][7].WADDR2
address[2] => segment[0][7].RADDR2
address[2] => segment[0][6].WADDR2
address[2] => segment[0][6].RADDR2
address[2] => segment[0][5].WADDR2
address[2] => segment[0][5].RADDR2
address[2] => segment[0][4].WADDR2
address[2] => segment[0][4].RADDR2
address[2] => segment[0][3].WADDR2
address[2] => segment[0][3].RADDR2
address[2] => segment[0][2].WADDR2
address[2] => segment[0][2].RADDR2
address[2] => segment[0][1].WADDR2
address[2] => segment[0][1].RADDR2
address[2] => segment[0][0].WADDR2
address[2] => segment[0][0].RADDR2
address[3] => segment[0][7].WADDR3
address[3] => segment[0][7].RADDR3
address[3] => segment[0][6].WADDR3
address[3] => segment[0][6].RADDR3
address[3] => segment[0][5].WADDR3
address[3] => segment[0][5].RADDR3
address[3] => segment[0][4].WADDR3
address[3] => segment[0][4].RADDR3
address[3] => segment[0][3].WADDR3
address[3] => segment[0][3].RADDR3
address[3] => segment[0][2].WADDR3
address[3] => segment[0][2].RADDR3
address[3] => segment[0][1].WADDR3
address[3] => segment[0][1].RADDR3
address[3] => segment[0][0].WADDR3
address[3] => segment[0][0].RADDR3
address[4] => segment[0][7].WADDR4
address[4] => segment[0][7].RADDR4
address[4] => segment[0][6].WADDR4
address[4] => segment[0][6].RADDR4
address[4] => segment[0][5].WADDR4
address[4] => segment[0][5].RADDR4
address[4] => segment[0][4].WADDR4
address[4] => segment[0][4].RADDR4
address[4] => segment[0][3].WADDR4
address[4] => segment[0][3].RADDR4
address[4] => segment[0][2].WADDR4
address[4] => segment[0][2].RADDR4
address[4] => segment[0][1].WADDR4
address[4] => segment[0][1].RADDR4
address[4] => segment[0][0].WADDR4
address[4] => segment[0][0].RADDR4
address[5] => segment[0][7].WADDR5
address[5] => segment[0][7].RADDR5
address[5] => segment[0][6].WADDR5
address[5] => segment[0][6].RADDR5
address[5] => segment[0][5].WADDR5
address[5] => segment[0][5].RADDR5
address[5] => segment[0][4].WADDR5
address[5] => segment[0][4].RADDR5
address[5] => segment[0][3].WADDR5
address[5] => segment[0][3].RADDR5
address[5] => segment[0][2].WADDR5
address[5] => segment[0][2].RADDR5
address[5] => segment[0][1].WADDR5
address[5] => segment[0][1].RADDR5
address[5] => segment[0][0].WADDR5
address[5] => segment[0][0].RADDR5
address[6] => segment[0][7].WADDR6
address[6] => segment[0][7].RADDR6
address[6] => segment[0][6].WADDR6
address[6] => segment[0][6].RADDR6
address[6] => segment[0][5].WADDR6
address[6] => segment[0][5].RADDR6
address[6] => segment[0][4].WADDR6
address[6] => segment[0][4].RADDR6
address[6] => segment[0][3].WADDR6
address[6] => segment[0][3].RADDR6
address[6] => segment[0][2].WADDR6
address[6] => segment[0][2].RADDR6
address[6] => segment[0][1].WADDR6
address[6] => segment[0][1].RADDR6
address[6] => segment[0][0].WADDR6
address[6] => segment[0][0].RADDR6
address[7] => segment[0][7].WADDR7
address[7] => segment[0][7].RADDR7
address[7] => segment[0][6].WADDR7
address[7] => segment[0][6].RADDR7
address[7] => segment[0][5].WADDR7
address[7] => segment[0][5].RADDR7
address[7] => segment[0][4].WADDR7
address[7] => segment[0][4].RADDR7
address[7] => segment[0][3].WADDR7
address[7] => segment[0][3].RADDR7
address[7] => segment[0][2].WADDR7
address[7] => segment[0][2].RADDR7
address[7] => segment[0][1].WADDR7
address[7] => segment[0][1].RADDR7
address[7] => segment[0][0].WADDR7
address[7] => segment[0][0].RADDR7
clocki => segment[0][7].CLK0
clocki => segment[0][6].CLK0
clocki => segment[0][5].CLK0
clocki => segment[0][4].CLK0
clocki => segment[0][3].CLK0
clocki => segment[0][2].CLK0
clocki => segment[0][1].CLK0
clocki => segment[0][0].CLK0
clocko => segment[0][7].CLK1
clocko => segment[0][6].CLK1
clocko => segment[0][5].CLK1
clocko => segment[0][4].CLK1
clocko => segment[0][3].CLK1
clocko => segment[0][2].CLK1
clocko => segment[0][1].CLK1
clocko => segment[0][0].CLK1
be => ~NO_FANOUT~
q[0] <= segment[0][0].DATAOUT
q[1] <= segment[0][1].DATAOUT
q[2] <= segment[0][2].DATAOUT
q[3] <= segment[0][3].DATAOUT
q[4] <= segment[0][4].DATAOUT
q[5] <= segment[0][5].DATAOUT
q[6] <= segment[0][6].DATAOUT
q[7] <= segment[0][7].DATAOUT


|SP2_ACEX|ay:AY3|lpm_add_sub:$00043
dataa[0] => addcore:adder.dataa[0]
dataa[1] => addcore:adder.dataa[1]
dataa[2] => addcore:adder.dataa[2]
dataa[3] => addcore:adder.dataa[3]
dataa[4] => addcore:adder.dataa[4]
dataa[5] => addcore:adder.dataa[5]
dataa[6] => addcore:adder.dataa[6]
dataa[7] => addcore:adder.dataa[7]
dataa[8] => addcore:adder.dataa[8]
dataa[9] => addcore:adder.dataa[9]
dataa[10] => addcore:adder.dataa[10]
datab[0] => addcore:adder.datab[0]
datab[1] => addcore:adder.datab[1]
datab[2] => addcore:adder.datab[2]
datab[3] => addcore:adder.datab[3]
datab[4] => addcore:adder.datab[4]
datab[5] => addcore:adder.datab[5]
datab[6] => addcore:adder.datab[6]
datab[7] => addcore:adder.datab[7]
datab[8] => addcore:adder.datab[8]
datab[9] => addcore:adder.datab[9]
datab[10] => addcore:adder.datab[10]
cin => ~NO_FANOUT~
add_sub => ~NO_FANOUT~
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= altshift:result_ext_latency_ffs.result[0]
result[1] <= altshift:result_ext_latency_ffs.result[1]
result[2] <= altshift:result_ext_latency_ffs.result[2]
result[3] <= altshift:result_ext_latency_ffs.result[3]
result[4] <= altshift:result_ext_latency_ffs.result[4]
result[5] <= altshift:result_ext_latency_ffs.result[5]
result[6] <= altshift:result_ext_latency_ffs.result[6]
result[7] <= altshift:result_ext_latency_ffs.result[7]
result[8] <= altshift:result_ext_latency_ffs.result[8]
result[9] <= altshift:result_ext_latency_ffs.result[9]
result[10] <= altshift:result_ext_latency_ffs.result[10]
cout <= cout~0.DB_MAX_OUTPUT_PORT_TYPE
overflow <= overflow~0.DB_MAX_OUTPUT_PORT_TYPE


|SP2_ACEX|ay:AY3|lpm_add_sub:$00043|addcore:adder
datab[0] => datab_node[0].IN0
datab[1] => datab_node[1].IN0
datab[2] => datab_node[2].IN0
datab[3] => datab_node[3].IN0
datab[4] => datab_node[4].IN0
datab[5] => datab_node[5].IN0
datab[6] => datab_node[6].IN0
datab[7] => datab_node[7].IN0
datab[8] => datab_node[8].IN0
datab[9] => datab_node[9].IN0
datab[10] => datab_node[10].IN0
cin => ~NO_FANOUT~
add_sub => cin_node.IN0
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= a_csnbuffer:result_node.sout[0]
result[1] <= a_csnbuffer:result_node.sout[1]
result[2] <= a_csnbuffer:result_node.sout[2]
result[3] <= a_csnbuffer:result_node.sout[3]
result[4] <= a_csnbuffer:result_node.sout[4]
result[5] <= a_csnbuffer:result_node.sout[5]
result[6] <= a_csnbuffer:result_node.sout[6]
result[7] <= a_csnbuffer:result_node.sout[7]
result[8] <= a_csnbuffer:result_node.sout[8]
result[9] <= a_csnbuffer:result_node.sout[9]
result[10] <= a_csnbuffer:result_node.sout[10]
cout <= a_csnbuffer:cout_node.sout[0]
unreg_result[0] <= unreg_res_node[0].DB_MAX_OUTPUT_PORT_TYPE
unreg_result[1] <= unreg_res_node[1].DB_MAX_OUTPUT_PORT_TYPE
unreg_result[2] <= unreg_res_node[2].DB_MAX_OUTPUT_PORT_TYPE
unreg_result[3] <= unreg_res_node[3].DB_MAX_OUTPUT_PORT_TYPE
unreg_result[4] <= unreg_res_node[4].DB_MAX_OUTPUT_PORT_TYPE
unreg_result[5] <= unreg_res_node[5].DB_MAX_OUTPUT_PORT_TYPE
unreg_result[6] <= unreg_res_node[6].DB_MAX_OUTPUT_PORT_TYPE
unreg_result[7] <= unreg_res_node[7].DB_MAX_OUTPUT_PORT_TYPE
unreg_result[8] <= unreg_res_node[8].DB_MAX_OUTPUT_PORT_TYPE
unreg_result[9] <= unreg_res_node[9].DB_MAX_OUTPUT_PORT_TYPE
unreg_result[10] <= unreg_res_node[10].DB_MAX_OUTPUT_PORT_TYPE
unreg_cout <= unreg_cout_node.DB_MAX_OUTPUT_PORT_TYPE
overflow <= a_csnbuffer:oflow_node.sout[0]
bg_out <= <GND>
bp_out <= <GND>


|SP2_ACEX|ay:AY3|lpm_add_sub:$00043|addcore:adder|a_csnbuffer:oflow_node
sin[0] => sout_node[0].DATAIN
sin[1] => sout_node[1].DATAIN
sin[2] => sout_node[2].DATAIN
sin[3] => sout_node[3].DATAIN
sin[4] => sout_node[4].DATAIN
sin[5] => sout_node[5].DATAIN
sin[6] => sout_node[6].DATAIN
sin[7] => sout_node[7].DATAIN
sin[8] => sout_node[8].DATAIN
sin[9] => sout_node[9].DATAIN
sin[10] => sout_node[10].DATAIN
cin[0] => cout[0]~10.IN0
cin[1] => cout[1]~9.IN0
cin[2] => cout[2]~8.IN0
cin[3] => cout[3]~7.IN0
cin[4] => cout[4]~6.IN0
cin[5] => cout[5]~5.IN0
cin[6] => cout[6]~4.IN0
cin[7] => cout[7]~3.IN0
cin[8] => cout[8]~2.IN0
cin[9] => cout[9]~1.IN0
cin[10] => cout[10]~0.IN0
clk => ~NO_FANOUT~
clrn => ~NO_FANOUT~
ena => ~NO_FANOUT~
sout[0] <= sout_node[0].DB_MAX_OUTPUT_PORT_TYPE
sout[1] <= sout_node[1].DB_MAX_OUTPUT_PORT_TYPE
sout[2] <= sout_node[2].DB_MAX_OUTPUT_PORT_TYPE
sout[3] <= sout_node[3].DB_MAX_OUTPUT_PORT_TYPE
sout[4] <= sout_node[4].DB_MAX_OUTPUT_PORT_TYPE
sout[5] <= sout_node[5].DB_MAX_OUTPUT_PORT_TYPE
sout[6] <= sout_node[6].DB_MAX_OUTPUT_PORT_TYPE
sout[7] <= sout_node[7].DB_MAX_OUTPUT_PORT_TYPE
sout[8] <= sout_node[8].DB_MAX_OUTPUT_PORT_TYPE
sout[9] <= sout_node[9].DB_MAX_OUTPUT_PORT_TYPE
sout[10] <= sout_node[10].DB_MAX_OUTPUT_PORT_TYPE
cout[0] <= cout[0]~10.DB_MAX_OUTPUT_PORT_TYPE
cout[1] <= cout[1]~9.DB_MAX_OUTPUT_PORT_TYPE
cout[2] <= cout[2]~8.DB_MAX_OUTPUT_PORT_TYPE
cout[3] <= cout[3]~7.DB_MAX_OUTPUT_PORT_TYPE
cout[4] <= cout[4]~6.DB_MAX_OUTPUT_PORT_TYPE
cout[5] <= cout[5]~5.DB_MAX_OUTPUT_PORT_TYPE
cout[6] <= cout[6]~4.DB_MAX_OUTPUT_PORT_TYPE
cout[7] <= cout[7]~3.DB_MAX_OUTPUT_PORT_TYPE
cout[8] <= cout[8]~2.DB_MAX_OUTPUT_PORT_TYPE
cout[9] <= cout[9]~1.DB_MAX_OUTPUT_PORT_TYPE
cout[10] <= cout[10]~0.DB_MAX_OUTPUT_PORT_TYPE


|SP2_ACEX|ay:AY3|lpm_add_sub:$00043|addcore:adder|a_csnbuffer:result_node
sin[0] => cs_buffer[0].SUM_IN
sin[1] => cs_buffer[1].SUM_IN
sin[2] => cs_buffer[2].SUM_IN
sin[3] => cs_buffer[3].SUM_IN
sin[4] => cs_buffer[4].SUM_IN
sin[5] => cs_buffer[5].SUM_IN
sin[6] => cs_buffer[6].SUM_IN
sin[7] => cs_buffer[7].SUM_IN
sin[8] => cs_buffer[8].SUM_IN
sin[9] => cs_buffer[9].SUM_IN
sin[10] => cs_buffer[10].SUM_IN
cin[0] => cs_buffer[0].CIN
cin[1] => cs_buffer[1].CIN
cin[2] => cs_buffer[2].CIN
cin[3] => cs_buffer[3].CIN
cin[4] => cs_buffer[4].CIN
cin[5] => cs_buffer[5].CIN
cin[6] => cs_buffer[6].CIN
cin[7] => cs_buffer[7].CIN
cin[8] => cs_buffer[8].CIN
cin[9] => cs_buffer[9].CIN
cin[10] => cs_buffer[10].CIN
clk => ~NO_FANOUT~
clrn => ~NO_FANOUT~
ena => ~NO_FANOUT~
sout[0] <= cs_buffer[0].DB_MAX_OUTPUT_PORT_TYPE
sout[1] <= cs_buffer[1].DB_MAX_OUTPUT_PORT_TYPE
sout[2] <= cs_buffer[2].DB_MAX_OUTPUT_PORT_TYPE
sout[3] <= cs_buffer[3].DB_MAX_OUTPUT_PORT_TYPE
sout[4] <= cs_buffer[4].DB_MAX_OUTPUT_PORT_TYPE
sout[5] <= cs_buffer[5].DB_MAX_OUTPUT_PORT_TYPE
sout[6] <= cs_buffer[6].DB_MAX_OUTPUT_PORT_TYPE
sout[7] <= cs_buffer[7].DB_MAX_OUTPUT_PORT_TYPE
sout[8] <= cs_buffer[8].DB_MAX_OUTPUT_PORT_TYPE
sout[9] <= cs_buffer[9].DB_MAX_OUTPUT_PORT_TYPE
sout[10] <= cs_buffer[10].DB_MAX_OUTPUT_PORT_TYPE
cout[0] <= cs_buffer[0].DB_MAX_OUTPUT_PORT_TYPE
cout[1] <= cs_buffer[1].DB_MAX_OUTPUT_PORT_TYPE
cout[2] <= cs_buffer[2].DB_MAX_OUTPUT_PORT_TYPE
cout[3] <= cs_buffer[3].DB_MAX_OUTPUT_PORT_TYPE
cout[4] <= cs_buffer[4].DB_MAX_OUTPUT_PORT_TYPE
cout[5] <= cs_buffer[5].DB_MAX_OUTPUT_PORT_TYPE
cout[6] <= cs_buffer[6].DB_MAX_OUTPUT_PORT_TYPE
cout[7] <= cs_buffer[7].DB_MAX_OUTPUT_PORT_TYPE
cout[8] <= cs_buffer[8].DB_MAX_OUTPUT_PORT_TYPE
cout[9] <= cs_buffer[9].DB_MAX_OUTPUT_PORT_TYPE
cout[10] <= cs_buffer[10].DB_MAX_OUTPUT_PORT_TYPE


|SP2_ACEX|ay:AY3|lpm_add_sub:$00043|addcore:adder|a_csnbuffer:cout_node
sin[0] => sout_node[0].DATAIN
sin[1] => sout_node[1].DATAIN
sin[2] => sout_node[2].DATAIN
sin[3] => sout_node[3].DATAIN
sin[4] => sout_node[4].DATAIN
sin[5] => sout_node[5].DATAIN
sin[6] => sout_node[6].DATAIN
sin[7] => sout_node[7].DATAIN
sin[8] => sout_node[8].DATAIN
sin[9] => sout_node[9].DATAIN
sin[10] => sout_node[10].DATAIN
cin[0] => cout[0]~10.IN0
cin[1] => cout[1]~9.IN0
cin[2] => cout[2]~8.IN0
cin[3] => cout[3]~7.IN0
cin[4] => cout[4]~6.IN0
cin[5] => cout[5]~5.IN0
cin[6] => cout[6]~4.IN0
cin[7] => cout[7]~3.IN0
cin[8] => cout[8]~2.IN0
cin[9] => cout[9]~1.IN0
cin[10] => cout[10]~0.IN0
clk => ~NO_FANOUT~
clrn => ~NO_FANOUT~
ena => ~NO_FANOUT~
sout[0] <= sout_node[0].DB_MAX_OUTPUT_PORT_TYPE
sout[1] <= sout_node[1].DB_MAX_OUTPUT_PORT_TYPE
sout[2] <= sout_node[2].DB_MAX_OUTPUT_PORT_TYPE
sout[3] <= sout_node[3].DB_MAX_OUTPUT_PORT_TYPE
sout[4] <= sout_node[4].DB_MAX_OUTPUT_PORT_TYPE
sout[5] <= sout_node[5].DB_MAX_OUTPUT_PORT_TYPE
sout[6] <= sout_node[6].DB_MAX_OUTPUT_PORT_TYPE
sout[7] <= sout_node[7].DB_MAX_OUTPUT_PORT_TYPE
sout[8] <= sout_node[8].DB_MAX_OUTPUT_PORT_TYPE
sout[9] <= sout_node[9].DB_MAX_OUTPUT_PORT_TYPE
sout[10] <= sout_node[10].DB_MAX_OUTPUT_PORT_TYPE
cout[0] <= cout[0]~10.DB_MAX_OUTPUT_PORT_TYPE
cout[1] <= cout[1]~9.DB_MAX_OUTPUT_PORT_TYPE
cout[2] <= cout[2]~8.DB_MAX_OUTPUT_PORT_TYPE
cout[3] <= cout[3]~7.DB_MAX_OUTPUT_PORT_TYPE
cout[4] <= cout[4]~6.DB_MAX_OUTPUT_PORT_TYPE
cout[5] <= cout[5]~5.DB_MAX_OUTPUT_PORT_TYPE
cout[6] <= cout[6]~4.DB_MAX_OUTPUT_PORT_TYPE
cout[7] <= cout[7]~3.DB_MAX_OUTPUT_PORT_TYPE
cout[8] <= cout[8]~2.DB_MAX_OUTPUT_PORT_TYPE
cout[9] <= cout[9]~1.DB_MAX_OUTPUT_PORT_TYPE
cout[10] <= cout[10]~0.DB_MAX_OUTPUT_PORT_TYPE


|SP2_ACEX|ay:AY3|lpm_add_sub:$00043|altshift:result_ext_latency_ffs
data[0] => result[0].DATAIN
data[1] => result[1].DATAIN
data[2] => result[2].DATAIN
data[3] => result[3].DATAIN
data[4] => result[4].DATAIN
data[5] => result[5].DATAIN
data[6] => result[6].DATAIN
data[7] => result[7].DATAIN
data[8] => result[8].DATAIN
data[9] => result[9].DATAIN
data[10] => result[10].DATAIN
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= data[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= data[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= data[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= data[3].DB_MAX_OUTPUT_PORT_TYPE
result[4] <= data[4].DB_MAX_OUTPUT_PORT_TYPE
result[5] <= data[5].DB_MAX_OUTPUT_PORT_TYPE
result[6] <= data[6].DB_MAX_OUTPUT_PORT_TYPE
result[7] <= data[7].DB_MAX_OUTPUT_PORT_TYPE
result[8] <= data[8].DB_MAX_OUTPUT_PORT_TYPE
result[9] <= data[9].DB_MAX_OUTPUT_PORT_TYPE
result[10] <= data[10].DB_MAX_OUTPUT_PORT_TYPE


|SP2_ACEX|ay:AY3|lpm_add_sub:$00043|altshift:carry_ext_latency_ffs
data[0] => result[0].DATAIN
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= data[0].DB_MAX_OUTPUT_PORT_TYPE


|SP2_ACEX|ay:AY3|lpm_add_sub:$00043|altshift:oflow_ext_latency_ffs
data[0] => result[0].DATAIN
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= data[0].DB_MAX_OUTPUT_PORT_TYPE


|SP2_ACEX|ay:AY3|lpm_add_sub:$00045
dataa[0] => addcore:adder.dataa[0]
dataa[1] => addcore:adder.dataa[1]
dataa[2] => addcore:adder.dataa[2]
dataa[3] => addcore:adder.dataa[3]
dataa[4] => addcore:adder.dataa[4]
dataa[5] => addcore:adder.dataa[5]
dataa[6] => addcore:adder.dataa[6]
dataa[7] => addcore:adder.dataa[7]
dataa[8] => addcore:adder.dataa[8]
dataa[9] => addcore:adder.dataa[9]
dataa[10] => addcore:adder.dataa[10]
datab[0] => addcore:adder.datab[0]
datab[1] => addcore:adder.datab[1]
datab[2] => addcore:adder.datab[2]
datab[3] => addcore:adder.datab[3]
datab[4] => addcore:adder.datab[4]
datab[5] => addcore:adder.datab[5]
datab[6] => addcore:adder.datab[6]
datab[7] => addcore:adder.datab[7]
datab[8] => addcore:adder.datab[8]
datab[9] => addcore:adder.datab[9]
datab[10] => addcore:adder.datab[10]
cin => ~NO_FANOUT~
add_sub => ~NO_FANOUT~
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= altshift:result_ext_latency_ffs.result[0]
result[1] <= altshift:result_ext_latency_ffs.result[1]
result[2] <= altshift:result_ext_latency_ffs.result[2]
result[3] <= altshift:result_ext_latency_ffs.result[3]
result[4] <= altshift:result_ext_latency_ffs.result[4]
result[5] <= altshift:result_ext_latency_ffs.result[5]
result[6] <= altshift:result_ext_latency_ffs.result[6]
result[7] <= altshift:result_ext_latency_ffs.result[7]
result[8] <= altshift:result_ext_latency_ffs.result[8]
result[9] <= altshift:result_ext_latency_ffs.result[9]
result[10] <= altshift:result_ext_latency_ffs.result[10]
cout <= cout~0.DB_MAX_OUTPUT_PORT_TYPE
overflow <= overflow~0.DB_MAX_OUTPUT_PORT_TYPE


|SP2_ACEX|ay:AY3|lpm_add_sub:$00045|addcore:adder
datab[0] => datab_node[0].IN0
datab[1] => datab_node[1].IN0
datab[2] => datab_node[2].IN0
datab[3] => datab_node[3].IN0
datab[4] => datab_node[4].IN0
datab[5] => datab_node[5].IN0
datab[6] => datab_node[6].IN0
datab[7] => datab_node[7].IN0
datab[8] => datab_node[8].IN0
datab[9] => datab_node[9].IN0
datab[10] => datab_node[10].IN0
cin => ~NO_FANOUT~
add_sub => cin_node.IN0
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= a_csnbuffer:result_node.sout[0]
result[1] <= a_csnbuffer:result_node.sout[1]
result[2] <= a_csnbuffer:result_node.sout[2]
result[3] <= a_csnbuffer:result_node.sout[3]
result[4] <= a_csnbuffer:result_node.sout[4]
result[5] <= a_csnbuffer:result_node.sout[5]
result[6] <= a_csnbuffer:result_node.sout[6]
result[7] <= a_csnbuffer:result_node.sout[7]
result[8] <= a_csnbuffer:result_node.sout[8]
result[9] <= a_csnbuffer:result_node.sout[9]
result[10] <= a_csnbuffer:result_node.sout[10]
cout <= a_csnbuffer:cout_node.sout[0]
unreg_result[0] <= unreg_res_node[0].DB_MAX_OUTPUT_PORT_TYPE
unreg_result[1] <= unreg_res_node[1].DB_MAX_OUTPUT_PORT_TYPE
unreg_result[2] <= unreg_res_node[2].DB_MAX_OUTPUT_PORT_TYPE
unreg_result[3] <= unreg_res_node[3].DB_MAX_OUTPUT_PORT_TYPE
unreg_result[4] <= unreg_res_node[4].DB_MAX_OUTPUT_PORT_TYPE
unreg_result[5] <= unreg_res_node[5].DB_MAX_OUTPUT_PORT_TYPE
unreg_result[6] <= unreg_res_node[6].DB_MAX_OUTPUT_PORT_TYPE
unreg_result[7] <= unreg_res_node[7].DB_MAX_OUTPUT_PORT_TYPE
unreg_result[8] <= unreg_res_node[8].DB_MAX_OUTPUT_PORT_TYPE
unreg_result[9] <= unreg_res_node[9].DB_MAX_OUTPUT_PORT_TYPE
unreg_result[10] <= unreg_res_node[10].DB_MAX_OUTPUT_PORT_TYPE
unreg_cout <= unreg_cout_node.DB_MAX_OUTPUT_PORT_TYPE
overflow <= a_csnbuffer:oflow_node.sout[0]
bg_out <= <GND>
bp_out <= <GND>


|SP2_ACEX|ay:AY3|lpm_add_sub:$00045|addcore:adder|a_csnbuffer:oflow_node
sin[0] => sout_node[0].DATAIN
sin[1] => sout_node[1].DATAIN
sin[2] => sout_node[2].DATAIN
sin[3] => sout_node[3].DATAIN
sin[4] => sout_node[4].DATAIN
sin[5] => sout_node[5].DATAIN
sin[6] => sout_node[6].DATAIN
sin[7] => sout_node[7].DATAIN
sin[8] => sout_node[8].DATAIN
sin[9] => sout_node[9].DATAIN
sin[10] => sout_node[10].DATAIN
cin[0] => cout[0]~10.IN0
cin[1] => cout[1]~9.IN0
cin[2] => cout[2]~8.IN0
cin[3] => cout[3]~7.IN0
cin[4] => cout[4]~6.IN0
cin[5] => cout[5]~5.IN0
cin[6] => cout[6]~4.IN0
cin[7] => cout[7]~3.IN0
cin[8] => cout[8]~2.IN0
cin[9] => cout[9]~1.IN0
cin[10] => cout[10]~0.IN0
clk => ~NO_FANOUT~
clrn => ~NO_FANOUT~
ena => ~NO_FANOUT~
sout[0] <= sout_node[0].DB_MAX_OUTPUT_PORT_TYPE
sout[1] <= sout_node[1].DB_MAX_OUTPUT_PORT_TYPE
sout[2] <= sout_node[2].DB_MAX_OUTPUT_PORT_TYPE
sout[3] <= sout_node[3].DB_MAX_OUTPUT_PORT_TYPE
sout[4] <= sout_node[4].DB_MAX_OUTPUT_PORT_TYPE
sout[5] <= sout_node[5].DB_MAX_OUTPUT_PORT_TYPE
sout[6] <= sout_node[6].DB_MAX_OUTPUT_PORT_TYPE
sout[7] <= sout_node[7].DB_MAX_OUTPUT_PORT_TYPE
sout[8] <= sout_node[8].DB_MAX_OUTPUT_PORT_TYPE
sout[9] <= sout_node[9].DB_MAX_OUTPUT_PORT_TYPE
sout[10] <= sout_node[10].DB_MAX_OUTPUT_PORT_TYPE
cout[0] <= cout[0]~10.DB_MAX_OUTPUT_PORT_TYPE
cout[1] <= cout[1]~9.DB_MAX_OUTPUT_PORT_TYPE
cout[2] <= cout[2]~8.DB_MAX_OUTPUT_PORT_TYPE
cout[3] <= cout[3]~7.DB_MAX_OUTPUT_PORT_TYPE
cout[4] <= cout[4]~6.DB_MAX_OUTPUT_PORT_TYPE
cout[5] <= cout[5]~5.DB_MAX_OUTPUT_PORT_TYPE
cout[6] <= cout[6]~4.DB_MAX_OUTPUT_PORT_TYPE
cout[7] <= cout[7]~3.DB_MAX_OUTPUT_PORT_TYPE
cout[8] <= cout[8]~2.DB_MAX_OUTPUT_PORT_TYPE
cout[9] <= cout[9]~1.DB_MAX_OUTPUT_PORT_TYPE
cout[10] <= cout[10]~0.DB_MAX_OUTPUT_PORT_TYPE


|SP2_ACEX|ay:AY3|lpm_add_sub:$00045|addcore:adder|a_csnbuffer:result_node
sin[0] => cs_buffer[0].SUM_IN
sin[1] => cs_buffer[1].SUM_IN
sin[2] => cs_buffer[2].SUM_IN
sin[3] => cs_buffer[3].SUM_IN
sin[4] => cs_buffer[4].SUM_IN
sin[5] => cs_buffer[5].SUM_IN
sin[6] => cs_buffer[6].SUM_IN
sin[7] => cs_buffer[7].SUM_IN
sin[8] => cs_buffer[8].SUM_IN
sin[9] => cs_buffer[9].SUM_IN
sin[10] => cs_buffer[10].SUM_IN
cin[0] => cs_buffer[0].CIN
cin[1] => cs_buffer[1].CIN
cin[2] => cs_buffer[2].CIN
cin[3] => cs_buffer[3].CIN
cin[4] => cs_buffer[4].CIN
cin[5] => cs_buffer[5].CIN
cin[6] => cs_buffer[6].CIN
cin[7] => cs_buffer[7].CIN
cin[8] => cs_buffer[8].CIN
cin[9] => cs_buffer[9].CIN
cin[10] => cs_buffer[10].CIN
clk => ~NO_FANOUT~
clrn => ~NO_FANOUT~
ena => ~NO_FANOUT~
sout[0] <= cs_buffer[0].DB_MAX_OUTPUT_PORT_TYPE
sout[1] <= cs_buffer[1].DB_MAX_OUTPUT_PORT_TYPE
sout[2] <= cs_buffer[2].DB_MAX_OUTPUT_PORT_TYPE
sout[3] <= cs_buffer[3].DB_MAX_OUTPUT_PORT_TYPE
sout[4] <= cs_buffer[4].DB_MAX_OUTPUT_PORT_TYPE
sout[5] <= cs_buffer[5].DB_MAX_OUTPUT_PORT_TYPE
sout[6] <= cs_buffer[6].DB_MAX_OUTPUT_PORT_TYPE
sout[7] <= cs_buffer[7].DB_MAX_OUTPUT_PORT_TYPE
sout[8] <= cs_buffer[8].DB_MAX_OUTPUT_PORT_TYPE
sout[9] <= cs_buffer[9].DB_MAX_OUTPUT_PORT_TYPE
sout[10] <= cs_buffer[10].DB_MAX_OUTPUT_PORT_TYPE
cout[0] <= cs_buffer[0].DB_MAX_OUTPUT_PORT_TYPE
cout[1] <= cs_buffer[1].DB_MAX_OUTPUT_PORT_TYPE
cout[2] <= cs_buffer[2].DB_MAX_OUTPUT_PORT_TYPE
cout[3] <= cs_buffer[3].DB_MAX_OUTPUT_PORT_TYPE
cout[4] <= cs_buffer[4].DB_MAX_OUTPUT_PORT_TYPE
cout[5] <= cs_buffer[5].DB_MAX_OUTPUT_PORT_TYPE
cout[6] <= cs_buffer[6].DB_MAX_OUTPUT_PORT_TYPE
cout[7] <= cs_buffer[7].DB_MAX_OUTPUT_PORT_TYPE
cout[8] <= cs_buffer[8].DB_MAX_OUTPUT_PORT_TYPE
cout[9] <= cs_buffer[9].DB_MAX_OUTPUT_PORT_TYPE
cout[10] <= cs_buffer[10].DB_MAX_OUTPUT_PORT_TYPE


|SP2_ACEX|ay:AY3|lpm_add_sub:$00045|addcore:adder|a_csnbuffer:cout_node
sin[0] => sout_node[0].DATAIN
sin[1] => sout_node[1].DATAIN
sin[2] => sout_node[2].DATAIN
sin[3] => sout_node[3].DATAIN
sin[4] => sout_node[4].DATAIN
sin[5] => sout_node[5].DATAIN
sin[6] => sout_node[6].DATAIN
sin[7] => sout_node[7].DATAIN
sin[8] => sout_node[8].DATAIN
sin[9] => sout_node[9].DATAIN
sin[10] => sout_node[10].DATAIN
cin[0] => cout[0]~10.IN0
cin[1] => cout[1]~9.IN0
cin[2] => cout[2]~8.IN0
cin[3] => cout[3]~7.IN0
cin[4] => cout[4]~6.IN0
cin[5] => cout[5]~5.IN0
cin[6] => cout[6]~4.IN0
cin[7] => cout[7]~3.IN0
cin[8] => cout[8]~2.IN0
cin[9] => cout[9]~1.IN0
cin[10] => cout[10]~0.IN0
clk => ~NO_FANOUT~
clrn => ~NO_FANOUT~
ena => ~NO_FANOUT~
sout[0] <= sout_node[0].DB_MAX_OUTPUT_PORT_TYPE
sout[1] <= sout_node[1].DB_MAX_OUTPUT_PORT_TYPE
sout[2] <= sout_node[2].DB_MAX_OUTPUT_PORT_TYPE
sout[3] <= sout_node[3].DB_MAX_OUTPUT_PORT_TYPE
sout[4] <= sout_node[4].DB_MAX_OUTPUT_PORT_TYPE
sout[5] <= sout_node[5].DB_MAX_OUTPUT_PORT_TYPE
sout[6] <= sout_node[6].DB_MAX_OUTPUT_PORT_TYPE
sout[7] <= sout_node[7].DB_MAX_OUTPUT_PORT_TYPE
sout[8] <= sout_node[8].DB_MAX_OUTPUT_PORT_TYPE
sout[9] <= sout_node[9].DB_MAX_OUTPUT_PORT_TYPE
sout[10] <= sout_node[10].DB_MAX_OUTPUT_PORT_TYPE
cout[0] <= cout[0]~10.DB_MAX_OUTPUT_PORT_TYPE
cout[1] <= cout[1]~9.DB_MAX_OUTPUT_PORT_TYPE
cout[2] <= cout[2]~8.DB_MAX_OUTPUT_PORT_TYPE
cout[3] <= cout[3]~7.DB_MAX_OUTPUT_PORT_TYPE
cout[4] <= cout[4]~6.DB_MAX_OUTPUT_PORT_TYPE
cout[5] <= cout[5]~5.DB_MAX_OUTPUT_PORT_TYPE
cout[6] <= cout[6]~4.DB_MAX_OUTPUT_PORT_TYPE
cout[7] <= cout[7]~3.DB_MAX_OUTPUT_PORT_TYPE
cout[8] <= cout[8]~2.DB_MAX_OUTPUT_PORT_TYPE
cout[9] <= cout[9]~1.DB_MAX_OUTPUT_PORT_TYPE
cout[10] <= cout[10]~0.DB_MAX_OUTPUT_PORT_TYPE


|SP2_ACEX|ay:AY3|lpm_add_sub:$00045|altshift:result_ext_latency_ffs
data[0] => result[0].DATAIN
data[1] => result[1].DATAIN
data[2] => result[2].DATAIN
data[3] => result[3].DATAIN
data[4] => result[4].DATAIN
data[5] => result[5].DATAIN
data[6] => result[6].DATAIN
data[7] => result[7].DATAIN
data[8] => result[8].DATAIN
data[9] => result[9].DATAIN
data[10] => result[10].DATAIN
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= data[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= data[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= data[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= data[3].DB_MAX_OUTPUT_PORT_TYPE
result[4] <= data[4].DB_MAX_OUTPUT_PORT_TYPE
result[5] <= data[5].DB_MAX_OUTPUT_PORT_TYPE
result[6] <= data[6].DB_MAX_OUTPUT_PORT_TYPE
result[7] <= data[7].DB_MAX_OUTPUT_PORT_TYPE
result[8] <= data[8].DB_MAX_OUTPUT_PORT_TYPE
result[9] <= data[9].DB_MAX_OUTPUT_PORT_TYPE
result[10] <= data[10].DB_MAX_OUTPUT_PORT_TYPE


|SP2_ACEX|ay:AY3|lpm_add_sub:$00045|altshift:carry_ext_latency_ffs
data[0] => result[0].DATAIN
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= data[0].DB_MAX_OUTPUT_PORT_TYPE


|SP2_ACEX|ay:AY3|lpm_add_sub:$00045|altshift:oflow_ext_latency_ffs
data[0] => result[0].DATAIN
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= data[0].DB_MAX_OUTPUT_PORT_TYPE


|SP2_ACEX|lpm_ram_dp:CBL
data[0] => altdpram:sram.data[0]
data[1] => altdpram:sram.data[1]
data[2] => altdpram:sram.data[2]
data[3] => altdpram:sram.data[3]
data[4] => altdpram:sram.data[4]
data[5] => altdpram:sram.data[5]
data[6] => altdpram:sram.data[6]
data[7] => altdpram:sram.data[7]
data[8] => altdpram:sram.data[8]
data[9] => altdpram:sram.data[9]
data[10] => altdpram:sram.data[10]
data[11] => altdpram:sram.data[11]
data[12] => altdpram:sram.data[12]
data[13] => altdpram:sram.data[13]
data[14] => altdpram:sram.data[14]
data[15] => altdpram:sram.data[15]
rdaddress[0] => altdpram:sram.rdaddress[0]
rdaddress[1] => altdpram:sram.rdaddress[1]
rdaddress[2] => altdpram:sram.rdaddress[2]
rdaddress[3] => altdpram:sram.rdaddress[3]
rdaddress[4] => altdpram:sram.rdaddress[4]
rdaddress[5] => altdpram:sram.rdaddress[5]
rdaddress[6] => altdpram:sram.rdaddress[6]
rdaddress[7] => altdpram:sram.rdaddress[7]
wraddress[0] => altdpram:sram.wraddress[0]
wraddress[1] => altdpram:sram.wraddress[1]
wraddress[2] => altdpram:sram.wraddress[2]
wraddress[3] => altdpram:sram.wraddress[3]
wraddress[4] => altdpram:sram.wraddress[4]
wraddress[5] => altdpram:sram.wraddress[5]
wraddress[6] => altdpram:sram.wraddress[6]
wraddress[7] => altdpram:sram.wraddress[7]
rdclock => altdpram:sram.outclock
rdclken => ~NO_FANOUT~
wrclock => altdpram:sram.inclock
wrclken => ~NO_FANOUT~
rden => ~NO_FANOUT~
wren => altdpram:sram.wren
q[0] <= altdpram:sram.q[0]
q[1] <= altdpram:sram.q[1]
q[2] <= altdpram:sram.q[2]
q[3] <= altdpram:sram.q[3]
q[4] <= altdpram:sram.q[4]
q[5] <= altdpram:sram.q[5]
q[6] <= altdpram:sram.q[6]
q[7] <= altdpram:sram.q[7]
q[8] <= altdpram:sram.q[8]
q[9] <= altdpram:sram.q[9]
q[10] <= altdpram:sram.q[10]
q[11] <= altdpram:sram.q[11]
q[12] <= altdpram:sram.q[12]
q[13] <= altdpram:sram.q[13]
q[14] <= altdpram:sram.q[14]
q[15] <= altdpram:sram.q[15]


|SP2_ACEX|lpm_ram_dp:CBL|altdpram:sram
wren => segment[0][15].WE
wren => segment[0][14].WE
wren => segment[0][13].WE
wren => segment[0][12].WE
wren => segment[0][11].WE
wren => segment[0][10].WE
wren => segment[0][9].WE
wren => segment[0][8].WE
wren => segment[0][7].WE
wren => segment[0][6].WE
wren => segment[0][5].WE
wren => segment[0][4].WE
wren => segment[0][3].WE
wren => segment[0][2].WE
wren => segment[0][1].WE
wren => segment[0][0].WE
data[0] => segment[0][0].DATAIN
data[1] => segment[0][1].DATAIN
data[2] => segment[0][2].DATAIN
data[3] => segment[0][3].DATAIN
data[4] => segment[0][4].DATAIN
data[5] => segment[0][5].DATAIN
data[6] => segment[0][6].DATAIN
data[7] => segment[0][7].DATAIN
data[8] => segment[0][8].DATAIN
data[9] => segment[0][9].DATAIN
data[10] => segment[0][10].DATAIN
data[11] => segment[0][11].DATAIN
data[12] => segment[0][12].DATAIN
data[13] => segment[0][13].DATAIN
data[14] => segment[0][14].DATAIN
data[15] => segment[0][15].DATAIN
wraddress[0] => segment[0][15].WADDR
wraddress[0] => segment[0][14].WADDR
wraddress[0] => segment[0][13].WADDR
wraddress[0] => segment[0][12].WADDR
wraddress[0] => segment[0][11].WADDR
wraddress[0] => segment[0][10].WADDR
wraddress[0] => segment[0][9].WADDR
wraddress[0] => segment[0][8].WADDR
wraddress[0] => segment[0][7].WADDR
wraddress[0] => segment[0][6].WADDR
wraddress[0] => segment[0][5].WADDR
wraddress[0] => segment[0][4].WADDR
wraddress[0] => segment[0][3].WADDR
wraddress[0] => segment[0][2].WADDR
wraddress[0] => segment[0][1].WADDR
wraddress[0] => segment[0][0].WADDR
wraddress[1] => segment[0][15].WADDR1
wraddress[1] => segment[0][14].WADDR1
wraddress[1] => segment[0][13].WADDR1
wraddress[1] => segment[0][12].WADDR1
wraddress[1] => segment[0][11].WADDR1
wraddress[1] => segment[0][10].WADDR1
wraddress[1] => segment[0][9].WADDR1
wraddress[1] => segment[0][8].WADDR1
wraddress[1] => segment[0][7].WADDR1
wraddress[1] => segment[0][6].WADDR1
wraddress[1] => segment[0][5].WADDR1
wraddress[1] => segment[0][4].WADDR1
wraddress[1] => segment[0][3].WADDR1
wraddress[1] => segment[0][2].WADDR1
wraddress[1] => segment[0][1].WADDR1
wraddress[1] => segment[0][0].WADDR1
wraddress[2] => segment[0][15].WADDR2
wraddress[2] => segment[0][14].WADDR2
wraddress[2] => segment[0][13].WADDR2
wraddress[2] => segment[0][12].WADDR2
wraddress[2] => segment[0][11].WADDR2
wraddress[2] => segment[0][10].WADDR2
wraddress[2] => segment[0][9].WADDR2
wraddress[2] => segment[0][8].WADDR2
wraddress[2] => segment[0][7].WADDR2
wraddress[2] => segment[0][6].WADDR2
wraddress[2] => segment[0][5].WADDR2
wraddress[2] => segment[0][4].WADDR2
wraddress[2] => segment[0][3].WADDR2
wraddress[2] => segment[0][2].WADDR2
wraddress[2] => segment[0][1].WADDR2
wraddress[2] => segment[0][0].WADDR2
wraddress[3] => segment[0][15].WADDR3
wraddress[3] => segment[0][14].WADDR3
wraddress[3] => segment[0][13].WADDR3
wraddress[3] => segment[0][12].WADDR3
wraddress[3] => segment[0][11].WADDR3
wraddress[3] => segment[0][10].WADDR3
wraddress[3] => segment[0][9].WADDR3
wraddress[3] => segment[0][8].WADDR3
wraddress[3] => segment[0][7].WADDR3
wraddress[3] => segment[0][6].WADDR3
wraddress[3] => segment[0][5].WADDR3
wraddress[3] => segment[0][4].WADDR3
wraddress[3] => segment[0][3].WADDR3
wraddress[3] => segment[0][2].WADDR3
wraddress[3] => segment[0][1].WADDR3
wraddress[3] => segment[0][0].WADDR3
wraddress[4] => segment[0][15].WADDR4
wraddress[4] => segment[0][14].WADDR4
wraddress[4] => segment[0][13].WADDR4
wraddress[4] => segment[0][12].WADDR4
wraddress[4] => segment[0][11].WADDR4
wraddress[4] => segment[0][10].WADDR4
wraddress[4] => segment[0][9].WADDR4
wraddress[4] => segment[0][8].WADDR4
wraddress[4] => segment[0][7].WADDR4
wraddress[4] => segment[0][6].WADDR4
wraddress[4] => segment[0][5].WADDR4
wraddress[4] => segment[0][4].WADDR4
wraddress[4] => segment[0][3].WADDR4
wraddress[4] => segment[0][2].WADDR4
wraddress[4] => segment[0][1].WADDR4
wraddress[4] => segment[0][0].WADDR4
wraddress[5] => segment[0][15].WADDR5
wraddress[5] => segment[0][14].WADDR5
wraddress[5] => segment[0][13].WADDR5
wraddress[5] => segment[0][12].WADDR5
wraddress[5] => segment[0][11].WADDR5
wraddress[5] => segment[0][10].WADDR5
wraddress[5] => segment[0][9].WADDR5
wraddress[5] => segment[0][8].WADDR5
wraddress[5] => segment[0][7].WADDR5
wraddress[5] => segment[0][6].WADDR5
wraddress[5] => segment[0][5].WADDR5
wraddress[5] => segment[0][4].WADDR5
wraddress[5] => segment[0][3].WADDR5
wraddress[5] => segment[0][2].WADDR5
wraddress[5] => segment[0][1].WADDR5
wraddress[5] => segment[0][0].WADDR5
wraddress[6] => segment[0][15].WADDR6
wraddress[6] => segment[0][14].WADDR6
wraddress[6] => segment[0][13].WADDR6
wraddress[6] => segment[0][12].WADDR6
wraddress[6] => segment[0][11].WADDR6
wraddress[6] => segment[0][10].WADDR6
wraddress[6] => segment[0][9].WADDR6
wraddress[6] => segment[0][8].WADDR6
wraddress[6] => segment[0][7].WADDR6
wraddress[6] => segment[0][6].WADDR6
wraddress[6] => segment[0][5].WADDR6
wraddress[6] => segment[0][4].WADDR6
wraddress[6] => segment[0][3].WADDR6
wraddress[6] => segment[0][2].WADDR6
wraddress[6] => segment[0][1].WADDR6
wraddress[6] => segment[0][0].WADDR6
wraddress[7] => segment[0][15].WADDR7
wraddress[7] => segment[0][14].WADDR7
wraddress[7] => segment[0][13].WADDR7
wraddress[7] => segment[0][12].WADDR7
wraddress[7] => segment[0][11].WADDR7
wraddress[7] => segment[0][10].WADDR7
wraddress[7] => segment[0][9].WADDR7
wraddress[7] => segment[0][8].WADDR7
wraddress[7] => segment[0][7].WADDR7
wraddress[7] => segment[0][6].WADDR7
wraddress[7] => segment[0][5].WADDR7
wraddress[7] => segment[0][4].WADDR7
wraddress[7] => segment[0][3].WADDR7
wraddress[7] => segment[0][2].WADDR7
wraddress[7] => segment[0][1].WADDR7
wraddress[7] => segment[0][0].WADDR7
inclock => segment[0][15].CLK0
inclock => segment[0][14].CLK0
inclock => segment[0][13].CLK0
inclock => segment[0][12].CLK0
inclock => segment[0][11].CLK0
inclock => segment[0][10].CLK0
inclock => segment[0][9].CLK0
inclock => segment[0][8].CLK0
inclock => segment[0][7].CLK0
inclock => segment[0][6].CLK0
inclock => segment[0][5].CLK0
inclock => segment[0][4].CLK0
inclock => segment[0][3].CLK0
inclock => segment[0][2].CLK0
inclock => segment[0][1].CLK0
inclock => segment[0][0].CLK0
inclocken => ~NO_FANOUT~
rden => segment[0][15].RE
rden => segment[0][14].RE
rden => segment[0][13].RE
rden => segment[0][12].RE
rden => segment[0][11].RE
rden => segment[0][10].RE
rden => segment[0][9].RE
rden => segment[0][8].RE
rden => segment[0][7].RE
rden => segment[0][6].RE
rden => segment[0][5].RE
rden => segment[0][4].RE
rden => segment[0][3].RE
rden => segment[0][2].RE
rden => segment[0][1].RE
rden => segment[0][0].RE
rdaddress[0] => segment[0][15].RADDR
rdaddress[0] => segment[0][14].RADDR
rdaddress[0] => segment[0][13].RADDR
rdaddress[0] => segment[0][12].RADDR
rdaddress[0] => segment[0][11].RADDR
rdaddress[0] => segment[0][10].RADDR
rdaddress[0] => segment[0][9].RADDR
rdaddress[0] => segment[0][8].RADDR
rdaddress[0] => segment[0][7].RADDR
rdaddress[0] => segment[0][6].RADDR
rdaddress[0] => segment[0][5].RADDR
rdaddress[0] => segment[0][4].RADDR
rdaddress[0] => segment[0][3].RADDR
rdaddress[0] => segment[0][2].RADDR
rdaddress[0] => segment[0][1].RADDR
rdaddress[0] => segment[0][0].RADDR
rdaddress[1] => segment[0][15].RADDR1
rdaddress[1] => segment[0][14].RADDR1
rdaddress[1] => segment[0][13].RADDR1
rdaddress[1] => segment[0][12].RADDR1
rdaddress[1] => segment[0][11].RADDR1
rdaddress[1] => segment[0][10].RADDR1
rdaddress[1] => segment[0][9].RADDR1
rdaddress[1] => segment[0][8].RADDR1
rdaddress[1] => segment[0][7].RADDR1
rdaddress[1] => segment[0][6].RADDR1
rdaddress[1] => segment[0][5].RADDR1
rdaddress[1] => segment[0][4].RADDR1
rdaddress[1] => segment[0][3].RADDR1
rdaddress[1] => segment[0][2].RADDR1
rdaddress[1] => segment[0][1].RADDR1
rdaddress[1] => segment[0][0].RADDR1
rdaddress[2] => segment[0][15].RADDR2
rdaddress[2] => segment[0][14].RADDR2
rdaddress[2] => segment[0][13].RADDR2
rdaddress[2] => segment[0][12].RADDR2
rdaddress[2] => segment[0][11].RADDR2
rdaddress[2] => segment[0][10].RADDR2
rdaddress[2] => segment[0][9].RADDR2
rdaddress[2] => segment[0][8].RADDR2
rdaddress[2] => segment[0][7].RADDR2
rdaddress[2] => segment[0][6].RADDR2
rdaddress[2] => segment[0][5].RADDR2
rdaddress[2] => segment[0][4].RADDR2
rdaddress[2] => segment[0][3].RADDR2
rdaddress[2] => segment[0][2].RADDR2
rdaddress[2] => segment[0][1].RADDR2
rdaddress[2] => segment[0][0].RADDR2
rdaddress[3] => segment[0][15].RADDR3
rdaddress[3] => segment[0][14].RADDR3
rdaddress[3] => segment[0][13].RADDR3
rdaddress[3] => segment[0][12].RADDR3
rdaddress[3] => segment[0][11].RADDR3
rdaddress[3] => segment[0][10].RADDR3
rdaddress[3] => segment[0][9].RADDR3
rdaddress[3] => segment[0][8].RADDR3
rdaddress[3] => segment[0][7].RADDR3
rdaddress[3] => segment[0][6].RADDR3
rdaddress[3] => segment[0][5].RADDR3
rdaddress[3] => segment[0][4].RADDR3
rdaddress[3] => segment[0][3].RADDR3
rdaddress[3] => segment[0][2].RADDR3
rdaddress[3] => segment[0][1].RADDR3
rdaddress[3] => segment[0][0].RADDR3
rdaddress[4] => segment[0][15].RADDR4
rdaddress[4] => segment[0][14].RADDR4
rdaddress[4] => segment[0][13].RADDR4
rdaddress[4] => segment[0][12].RADDR4
rdaddress[4] => segment[0][11].RADDR4
rdaddress[4] => segment[0][10].RADDR4
rdaddress[4] => segment[0][9].RADDR4
rdaddress[4] => segment[0][8].RADDR4
rdaddress[4] => segment[0][7].RADDR4
rdaddress[4] => segment[0][6].RADDR4
rdaddress[4] => segment[0][5].RADDR4
rdaddress[4] => segment[0][4].RADDR4
rdaddress[4] => segment[0][3].RADDR4
rdaddress[4] => segment[0][2].RADDR4
rdaddress[4] => segment[0][1].RADDR4
rdaddress[4] => segment[0][0].RADDR4
rdaddress[5] => segment[0][15].RADDR5
rdaddress[5] => segment[0][14].RADDR5
rdaddress[5] => segment[0][13].RADDR5
rdaddress[5] => segment[0][12].RADDR5
rdaddress[5] => segment[0][11].RADDR5
rdaddress[5] => segment[0][10].RADDR5
rdaddress[5] => segment[0][9].RADDR5
rdaddress[5] => segment[0][8].RADDR5
rdaddress[5] => segment[0][7].RADDR5
rdaddress[5] => segment[0][6].RADDR5
rdaddress[5] => segment[0][5].RADDR5
rdaddress[5] => segment[0][4].RADDR5
rdaddress[5] => segment[0][3].RADDR5
rdaddress[5] => segment[0][2].RADDR5
rdaddress[5] => segment[0][1].RADDR5
rdaddress[5] => segment[0][0].RADDR5
rdaddress[6] => segment[0][15].RADDR6
rdaddress[6] => segment[0][14].RADDR6
rdaddress[6] => segment[0][13].RADDR6
rdaddress[6] => segment[0][12].RADDR6
rdaddress[6] => segment[0][11].RADDR6
rdaddress[6] => segment[0][10].RADDR6
rdaddress[6] => segment[0][9].RADDR6
rdaddress[6] => segment[0][8].RADDR6
rdaddress[6] => segment[0][7].RADDR6
rdaddress[6] => segment[0][6].RADDR6
rdaddress[6] => segment[0][5].RADDR6
rdaddress[6] => segment[0][4].RADDR6
rdaddress[6] => segment[0][3].RADDR6
rdaddress[6] => segment[0][2].RADDR6
rdaddress[6] => segment[0][1].RADDR6
rdaddress[6] => segment[0][0].RADDR6
rdaddress[7] => segment[0][15].RADDR7
rdaddress[7] => segment[0][14].RADDR7
rdaddress[7] => segment[0][13].RADDR7
rdaddress[7] => segment[0][12].RADDR7
rdaddress[7] => segment[0][11].RADDR7
rdaddress[7] => segment[0][10].RADDR7
rdaddress[7] => segment[0][9].RADDR7
rdaddress[7] => segment[0][8].RADDR7
rdaddress[7] => segment[0][7].RADDR7
rdaddress[7] => segment[0][6].RADDR7
rdaddress[7] => segment[0][5].RADDR7
rdaddress[7] => segment[0][4].RADDR7
rdaddress[7] => segment[0][3].RADDR7
rdaddress[7] => segment[0][2].RADDR7
rdaddress[7] => segment[0][1].RADDR7
rdaddress[7] => segment[0][0].RADDR7
outclock => segment[0][15].CLK1
outclock => segment[0][14].CLK1
outclock => segment[0][13].CLK1
outclock => segment[0][12].CLK1
outclock => segment[0][11].CLK1
outclock => segment[0][10].CLK1
outclock => segment[0][9].CLK1
outclock => segment[0][8].CLK1
outclock => segment[0][7].CLK1
outclock => segment[0][6].CLK1
outclock => segment[0][5].CLK1
outclock => segment[0][4].CLK1
outclock => segment[0][3].CLK1
outclock => segment[0][2].CLK1
outclock => segment[0][1].CLK1
outclock => segment[0][0].CLK1
outclocken => ~NO_FANOUT~
aclr => ~NO_FANOUT~
byteena[0] => ~NO_FANOUT~
wraddressstall => ~NO_FANOUT~
rdaddressstall => ~NO_FANOUT~
q[0] <= segment[0][0].DATAOUT
q[1] <= segment[0][1].DATAOUT
q[2] <= segment[0][2].DATAOUT
q[3] <= segment[0][3].DATAOUT
q[4] <= segment[0][4].DATAOUT
q[5] <= segment[0][5].DATAOUT
q[6] <= segment[0][6].DATAOUT
q[7] <= segment[0][7].DATAOUT
q[8] <= segment[0][8].DATAOUT
q[9] <= segment[0][9].DATAOUT
q[10] <= segment[0][10].DATAOUT
q[11] <= segment[0][11].DATAOUT
q[12] <= segment[0][12].DATAOUT
q[13] <= segment[0][13].DATAOUT
q[14] <= segment[0][14].DATAOUT
q[15] <= segment[0][15].DATAOUT


